#

# build-system
[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

# project
[project]
authors = [{name = "Derek Wan", email = "d.wan@icloud.com"}]
dependencies = ["typing-extensions >= 4.12.2, < 4.13"]
dynamic = ["version"]
name = "dycw-utilities"
readme = "README.md"
requires-python = ">= 3.11"

[project.optional-dependencies]
cacher = [
  "atomicwrites >= 1.4.1, < 1.5",
  "cachetools >= 5.4.0, < 5.5",
]
dev = [
  "aiosqlite >= 0.20.0, < 0.21",
  "altair >= 5.4.0, < 5.5",
  "ast-comments >= 1.2.2, < 1.3",
  "astor >= 0.8.1, < 0.9",
  "atomicwrites >= 1.4.1, < 1.5",
  "atools >= 0.14.2, < 0.15",
  "basedpyright >= 1.16.0, < 1.17",
  "beartype >= 0.18.5, < 0.19",
  "beautifulsoup4 >= 4.12.3, < 4.13",
  "bottleneck >= 1.4.0, < 1.5",
  "cachetools >= 5.4.0, < 5.5",
  "click >= 8.1.7, < 8.2",
  "cryptography >= 43.0.0, < 43.1",
  "cvxpy >= 1.5.3, < 1.6",
  "dacite >= 1.8.1, < 1.9",
  "fpdf2 >= 2.7.9, < 2.8",
  "frozendict >= 2.4.4, < 2.5",
  "hatch >= 1.12.0, < 1.13",
  "holoviews >= 1.19.0, < 1.20",
  "hypothesis >= 6.111.0, < 6.112",
  "img2pdf >= 0.5.1, < 0.6",
  "loguru >= 0.7.2, < 0.8",
  "luigi >= 3.5.1, < 3.6",
  "mdutils >= 1.6.0, < 1.7",
  "memory-profiler >= 0.61.0, < 0.62",
  "more-itertools >= 10.4.0, < 10.5",
  "nox >= 2024.4.15, < 2024.5",
  "numbagg >= 0.8.1, < 0.9",
  "numpy >= 2.0.1, < 2.1",
  "optuna >= 3.6.1, < 3.7",
  "pandas >= 2.2.2, < 2.3",
  "pathvalidate >= 3.2.0, < 3.3",
  "polars-lts-cpu >= 1.5.0, < 1.6",
  "pqdm >= 0.2.0, < 0.3",
  "psutil >= 6.0.0, < 6.1",
  "pydantic >= 2.8.2, < 2.9",
  "pyhumps >= 3.8.0, < 3.9",
  "pyinstrument >= 4.7.2, < 4.8",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "pytest >= 8.3.2, < 8.4",
  "pytest-check >= 2.3.1, < 2.4",
  "python-dotenv >= 1.0.1, < 1.1",
  "redis >= 5.0.8, < 5.1",
  "rich >= 13.7.1, < 13.8",
  "scipy >= 1.14.0, < 1.15",
  "selenium >= 4.23.1, < 4.24",
  "semver >= 3.0.2, < 3.1",
  "slack-sdk >= 3.31.0, < 3.32",
  "sqlalchemy >= 2.0.32, < 2.1",
  "streamlit >= 1.37.1, < 1.38",
  "tqdm >= 4.66.5, < 4.67",
  "typed-settings >= 24.4.0, < 24.5",
  "tzdata >= 2024.1, < 2024.2",
  "tzlocal >= 5.2, < 5.3",
  "vegafusion >= 1.6.9, < 1.7",
  "vegafusion-python-embed >= 1.6.9, < 1.7",
  "vl-convert-python >= 1.6.0, < 1.7",
  "whenever >= 0.6.7, < 0.7",
  "xarray >= 2024.7.0, < 2024.8",
  "xlrd >= 2.0.1, < 2.1",
  "zarr >= 2.18.2, < 2.19",
  # test
  "coverage-conditional-plugin >= 0.9.0, < 0.10",
  "freezegun >= 1.5.1, < 1.6",
  "greenlet >= 3.0.3, < 3.1",  # sqlalchemy async
  "nest-asyncio >= 1.6.0, < 1.7",  # sqlalchemy async
  "psycopg2-binary >= 2.9.9, < 2.10",
  "pytest-asyncio >= 0.23.8, < 0.24",
  "pytest-cov >= 5.0.0, < 5.1",
  "pytest-instafail >= 0.5.0, < 0.6",
  "pytest-only >= 2.1.2, < 2.2",
  "pytest-randomly >= 3.15.0, < 3.16",
  "pytest-rerunfailures >= 14.0, < 15",
  "pytest-xdist >= 3.6.1, < 3.7",
  # CI
  "win32_setctime >= 1.1.0, < 1.2",  # https://github.com/Delgan/loguru/issues/147
]
scripts-clean-dir = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "typed-settings >= 24.4.0, < 24.5",
]
scripts-csv-to-markdown = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "mdutils >= 1.6.0, < 1.7",
  "typed-settings >= 24.4.0, < 24.5",
]
scripts-luigi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "luigi >= 3.5.1, < 3.6",
  "typed-settings >= 24.4.0, < 24.5",
]
scripts-monitor-memory = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "psutil >= 6.0.0, < 6.1",
  "typed-settings >= 24.4.0, < 24.5",
]
scripts-pypi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "typed-settings >= 24.4.0, < 24.5",
]
test = [
  "hypothesis >= 6.111.0, < 6.112",
  "pytest >= 8.3.2, < 8.4",
  "pytest-randomly >= 3.15.0, < 3.16",
  "pytest-rerunfailures >= 14.0, < 15",
  "pytest-xdist >= 3.6.1, < 3.7",
]
zzz-test-altair = [
  "altair >= 5.4.0, < 5.5",
  "atomicwrites >= 1.4.1, < 1.5",
  "img2pdf >= 0.5.1, < 0.6",
]
zzz-test-ast = []
zzz-test-astor = ["astor >= 0.8.1, < 0.9"]
zzz-test-atomicwrites = ["atomicwrites >= 1.4.1, < 1.5"]
zzz-test-atools = [
  "atools >= 0.14.2, < 0.15",
  "pytest-asyncio >= 0.23.8, < 0.24",
]
zzz-test-beartype = ["beartype >= 0.18.5, < 0.19"]
zzz-test-bs4 = [
  "beautifulsoup4 >= 4.12.3, < 4.13",
  "polars-lts-cpu >= 1.5.0, < 1.6",
]
zzz-test-cacher = [
  "atomicwrites >= 1.4.1, < 1.5",
  "cachetools >= 5.4.0, < 5.5",
]
zzz-test-cachetools = ["cachetools >= 5.4.0, < 5.5"]
zzz-test-click = [
  "click >= 8.1.7, < 8.2",
  "sqlalchemy >= 2.0.32, < 2.1",
  "whenever >= 0.6.7, < 0.7",
]
zzz-test-cryptography = ["cryptography >= 43.0.0, < 43.1"]
zzz-test-cvxpy = [
  "cvxpy >= 1.5.3, < 1.6",
  "pandas >= 2.2.2, < 2.3",
]
zzz-test-dataclasses = ["beartype >= 0.18.5, < 0.19"]
zzz-test-datetime = ["tzlocal >= 5.2, < 5.3"]
zzz-test-defaults = [
  "hypothesis >= 6.111.0, < 6.112",
  "pytest >= 8.3.2, < 8.4",
  "pytest-cov >= 5.0.0, < 5.1",
  "pytest-randomly >= 3.15.0, < 3.16",
  "pytest-rerunfailures >= 14.0, < 15",
]
zzz-test-email = []
zzz-test-enum = []
zzz-test-errors = []
zzz-test-fpdf2 = [
  "fpdf2 >= 2.7.9, < 2.8",
  "holoviews >= 1.19.1, < 1.20",
  "tzlocal >= 5.2, < 5.3",
]
zzz-test-functions = []
zzz-test-functools = []
zzz-test-getpass = []
zzz-test-git = []
zzz-test-hashlib = []
zzz-test-hatch = ["hatch >= 1.12.0, < 1.13"]
zzz-test-holoviews = [
  "holoviews >= 1.19.1, < 1.20",
  "numbagg >= 0.8.1, < 0.9",
  "xarray >= 2024.7.0, < 2024.8",
]
zzz-test-humps = ["pyhumps >= 3.8.0, < 3.9"]
zzz-test-hypothesis = [
  "numpy >= 2.0.1, < 2.1",
  "pandas >= 2.2.2, < 2.3",
  "redis >= 5.0.8, < 5.1",
  "semver >= 3.0.2, < 3.1",
  "sqlalchemy >= 2.0.32, < 2.1",
  "whenever >= 0.6.7, < 0.7",
]
zzz-test-ipython = ["ipython >= 8.24.0, < 8.25"]
zzz-test-iterables = []
zzz-test-json = [
  "sqlalchemy >= 2.0.32, < 2.1",
  "whenever >= 0.6.7, < 0.7",
]
zzz-test-jupyter = [
  "jupyterlab >= 4.2.0, < 4.3",
  "pandas >= 2.2.2, < 2.3",
  "polars-lts-cpu >= 1.5.0, < 1.6",
]
zzz-test-locale = []
zzz-test-logging = []
zzz-test-loguru = [
  "loguru >= 0.7.2, < 0.8",
  "pytest-asyncio >= 0.23.8, < 0.24",
]
zzz-test-luigi = [
  "freezegun >= 1.5.1, < 1.6",
  "luigi >= 3.5.1, < 3.6",
  "semver >= 3.0.2, < 3.1",
  "sqlalchemy >= 2.0.32, < 2.1",
]
zzz-test-math = []
zzz-test-memory-profiler = ["memory-profiler >= 0.61.0, < 0.62"]
zzz-test-modules = []
zzz-test-more-itertools = ["more-itertools >= 10.4.0, < 10.5"]
zzz-test-numpy = [
  "bottleneck >= 1.4.0, < 1.5",
  "numbagg >= 0.8.1, < 0.9",
  "numpy >= 2.0.1, < 2.1",
  "pandas >= 2.2.2, < 2.3",
]
zzz-test-optuna = ["optuna >= 3.6.1, < 3.7"]
zzz-test-os = []
zzz-test-pandas = ["pandas >= 2.2.2, < 2.3"]
zzz-test-pathlib = ["pathvalidate >= 3.2.0, < 3.3"]
zzz-test-pathvalidate = ["pathvalidate >= 3.2.0, < 3.3"]
zzz-test-pickle = ["atomicwrites >= 1.4.1, < 1.5"]
zzz-test-platform = []
zzz-test-polars = [
  "dacite >= 1.8.1, < 1.9",
  "polars-lts-cpu >= 1.5.0, < 1.6",
]
zzz-test-pqdm = ["pqdm >= 0.2.0, < 0.3"]
zzz-test-pydantic = [
  "atomicwrites >= 1.4.1, < 1.5",
  "pydantic >= 2.8.2, < 2.9",
]
zzz-test-pyinstrument = [
  "atomicwrites >= 1.4.1, < 1.5",
  "pyinstrument >= 4.7.2, < 4.8",
]
zzz-test-pytest = [
  "atomicwrites >= 1.4.1, < 1.5",
  "pytest-asyncio >= 0.23.8, < 0.24",
]
zzz-test-pytest-check = ["pytest-check >= 2.3.1, < 2.4"]
zzz-test-python-dotenv = ["python-dotenv >= 1.0.1, < 1.1"]
zzz-test-random = []
zzz-test-re = []
zzz-test-redis = ["redis >= 5.0.8, < 5.1"]
zzz-test-reprlib = ["polars-lts-cpu >= 1.5.0, < 1.6"]
zzz-test-rich = ["rich >= 13.7.1, < 13.8"]
zzz-test-scipy = ["scipy >= 1.14.0, < 1.15"]
zzz-test-scripts-clean-dir = [
  "click >= 8.1.7, < 8.2",
  "freezegun >= 1.5.1, < 1.6",
  "loguru >= 0.7.2, < 0.8",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-scripts-csv-to-markdown = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "mdutils >= 1.6.0, < 1.7",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-scripts-luigi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "luigi >= 3.5.1, < 3.6",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-scripts-monitor-memory = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "psutil >= 6.0.0, < 6.1",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-scripts-pypi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-semver = ["semver >= 3.0.2, < 3.1"]
zzz-test-sentinel = []
zzz-test-socket = []
zzz-test-sqlalchemy = [
  "aiosqlite >= 0.20.0, < 0.21",
  "greenlet >= 3.0.3, < 3.1",  # sqlalchemy async
  "nest-asyncio >= 1.6.0, < 1.7",  # sqlalchemy async
  "psycopg2-binary >= 2.9.9, < 2.10",
  "pyhumps >= 3.8.0, < 3.9",
  "sqlalchemy >= 2.0.32, < 2.1",
]
zzz-test-sqlalchemy-polars = [
  "polars-lts-cpu >= 1.5.0, < 1.6",
  "pyhumps >= 3.8.0, < 3.9",
  "sqlalchemy >= 2.0.32, < 2.1",
]
zzz-test-subprocess = []
zzz-test-sys = []
zzz-test-tempfile = []
zzz-test-text = []
zzz-test-timer = []
zzz-test-tqdm = ["tqdm >= 4.66.5, < 4.67"]
zzz-test-typed-settings = [
  "click >= 8.1.7, < 8.2",
  "sqlalchemy >= 2.0.32, < 2.1",
  "typed-settings >= 24.4.0, < 24.5",
]
zzz-test-whenever = ["whenever >= 0.6.7, < 0.7"]
zzz-test-xarray = [
  "bottleneck >= 1.4.0, < 1.5",
  "numbagg >= 0.8.1, < 0.9",
  "xarray >= 2024.7.0, < 2024.8",
]
zzz-test-xlrd = ["xlrd >= 2.0.1, < 2.1"]
zzz-test-zarr = [
  "atomicwrites >= 1.4.1, < 1.5",
  "zarr >= 2.18.2, < 2.19",
]
zzz-test-zoneinfo = [
  "tzdata >= 2024.1, < 2024.2",
]

[project.scripts]
clean-dir = "utilities.scripts.clean_dir:main"
csv-to-markdown = "utilities.scripts.csv_to_markdown:main"
monitor-memory = "utilities.scripts.monitor_memory:main"
start-luigi-server = "utilities.scripts.luigi.server:main"
start-pypi-server = "utilities.scripts.pypi_server:main"

# basedpyright
[tool.basedpyright]
pythonVersion = "3.11"
reportAny = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPrivateUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedImport = false
reportUnusedVariable = false

# coverage
[tool.coverage]

[tool.coverage.coverage_conditional_plugin.rules]
skipif-ci = '"CI" in os_environ'
skipif-ci-and-not-linux = '("CI" in os_environ) and (sys_platform != "linux")'
skipif-os-eq-linux = 'sys_platform == "linux"'
skipif-os-eq-macos = 'sys_platform == "darwin"'
skipif-os-eq-windows = 'sys_platform == "windows"'
skipif-os-ne-linux = 'sys_platform != "linux"'
skipif-os-ne-macos = 'sys_platform != "darwin"'
skipif-os-ne-windows = 'sys_platform != "windows"'
skipif-version-ge-312 = "sys_version_info >= (3, 12)"
skipif-version-le-311 = "sys_version_info <= (3, 11)"

[tool.coverage.html]
directory = ".coverage/html"

[tool.coverage.report]
exclude_also = [
  "@overload",
  "assert_never",
  "case _ as never:",
  "if TYPE_CHECKING:",
]
fail_under = 100.0
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
data_file = ".coverage/data"
omit = ["src/utilities/clean_dir/__main__.py", "src/utilities/slack_sdk.py", "src/utilities/streamlit.py"]
parallel = true
plugins = ["coverage_conditional_plugin"]

# hatch
[tool.hatch]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/utilities"]

[tool.hatch.version]
path = "src/utilities/__init__.py"

# isort
[tool.isort]
float_to_top = true

# nitpick
[tool.nitpick]
style = [
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/3.11.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/common.toml",
]

# pytest
[tool.pytest]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "-vv",
  "--color=auto",
  "--cov=utilities",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--durations=10",
  "--durations-min=10",
  "--strict-markers",
]
asyncio_mode = "auto"
filterwarnings = [
  "error",
  "ignore:.*utcfromtimestamp.* is deprecated and scheduled for removal in a future version:DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
  "ignore:The `hash` argument is deprecated in favor of `unsafe_hash` and will be removed in or after August 2025:DeprecationWarning",
  "ignore:ast.Num is deprecated and will be removed in Python 3.14; use ast.Constant instead:DeprecationWarning",
]
minversion = "8.0"
testpaths = ["src/tests"]
xfail_strict = true

# ruff
[tool.ruff]
src = ["src"]
target-version = "py311"
unsafe-fixes = true

[tool.ruff.format]
preview = true

[tool.ruff.lint]
explicit-preview-rules = true
fixable = ["ALL"]
ignore = [
  "ANN101",  # missing-type-self
  "ANN102",  # missing-type-cls
  "ANN401",  # any-type
  "C901",  # complex-structure
  "D100",  # undocumented-public-module
  "D101",  # undocumented-public-class
  "D102",  # undocumented-public-method
  "D103",  # undocumented-public-function
  "D104",  # undocumented-public-package
  "D105",  # undocumented-magic-method
  "D106",  # undocumented-public-nested-class
  "D107",  # undocumented-public-init
  "D203",  # one-blank-line-before-class
  "D213",  # multi-line-summary-second-line
  "E501",  # line-too-long
  "PD",  # pandas-vet
  "PERF203",  # try-except-in-loop
  "PLR0911",  # too-many-return-statements
  "PLR0912",  # too-many-branches
  "PLR0913",  # too-many-arguments
  "PLR0915",  # too-many-statements
  "PLR2004",  # magic-value-comparison
  "PT013",  # pytest-incorrect-pytest-import
  "S311",  # suspicious-non-cryptographic-random-usage
  "S603",  # subprocess-without-shell-equals-true
  "S607",  # start-process-with-partial-path
  # preview
  "S101",  # assert
  # formatter
  "W191",  # tab-indentation
  "E111",  # indentation-with-invalid-multiple
  "E114",  # indentation-with-invalid-multiple-comment
  "E117",  # over-indented
  "D206",  # indent-with-spaces
  "D300",  # triple-single-quotes
  "Q000",  # bad-quotes-inline-string
  "Q001",  # bad-quotes-multiline-string
  "Q002",  # bad-quotes-docstring
  "Q003",  # avoidable-escaped-quote
  "COM812",  # missing-trailing-comma
  "COM819",  # prohibited-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
  "ISC002",  # multi-line-implicit-string-concatenation
]
preview = true
select = [
  "ALL",
  "RUF022",  # unsorted-dunder-all
]

[tool.ruff.lint.extend-per-file-ignores]
"src/tests/**/*.py" = ["S101"]  # assert
"src/tests/test_polars.py" = ["I002"]  # missing-required-import
"src/tests/test_typed_settings.py" = ["I002"]  # missing-required-import

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["utilities.typed_settings.click_field"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
