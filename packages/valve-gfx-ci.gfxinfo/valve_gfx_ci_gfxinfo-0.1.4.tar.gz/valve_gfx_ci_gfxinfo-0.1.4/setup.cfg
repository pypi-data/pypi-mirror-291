[metadata]
name = valve_gfx_ci.gfxinfo
version = 0.1.4
author = Martin Roukala
author_email = martin.roukala@mupuf.org
description = Generate a list of tags that describe the environment running a GFX workload
long_description = file: README.md
long_description_content_type = text/markdown
url = https://gitlab.freedesktop.org/gfx-ci/ci-tron/-/tree/master/gfxinfo
project_urls = 
	Bug Tracker = https://gitlab.freedesktop.org/gfx-ci/ci-tron/issues
classifiers = 
	Programming Language :: Python :: 3
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
obsoletes_dist = gfxinfo-mupuf

[options]
package_dir = 
	= src
install_requires = 
	backports.cached-property;python_version<'3.8'
	requests>=2,<3
tests_requires = 
	coverage
	pytest
include_package_data = True
packages = find_namespace:
python_requires = >=3.6

[options.extras_require]
vulkan = 
	chturne-vulkan

[options.packages.find]
where = src

[options.entry_points]
console_scripts = 
	gfxinfo = valve_gfx_ci.gfxinfo.__main__:main

[pycodestyle]
max-line-length = 160

[tox:tox]
envlist = pep8,py3-coverage
skipsdist = True

[testenv:pep8]
deps = flake8
commands = flake8 src/

[flake8]
exclude = .tox, .git, __pycache__, .venv
max-line-length = 120

[testenv:py3-coverage]
sitepackages = true
basepython = python3
setenv = 
	COVERAGE_PROCESS_START=./.coveragerc
passenv = GFXINFO_SKIP_DB_COMPLETENESS_CHECK
deps = 
	{[options]install_requires}
	{[options]tests_requires}
commands = 
	python -m coverage erase
	python -m coverage run --parallel-mode --source=src/valve_gfx_ci/gfxinfo -m pytest
	python -m coverage combine
	python -m coverage report --fail-under 100 -m --omit="src/valve_gfx_ci/gfxinfo/__init__.py,src/valve_gfx_ci/gfxinfo/__main__.py,src/valve_gfx_ci/gfxinfo/gfxinfo_vulkan.py"
	python -m coverage report --fail-under 64

[egg_info]
tag_build = 
tag_date = 0

