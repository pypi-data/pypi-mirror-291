# coding: utf-8

"""
    Simple Game Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tangled_game_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_create_game(self) -> None:
        """Test case for create_game

        Create a new game
        """
        pass

    def test_get_game_state(self) -> None:
        """Test case for get_game_state

        Get the state of the game
        """
        pass

    def test_get_legal_moves(self) -> None:
        """Test case for get_legal_moves

        Get the legal moves for the current game state
        """
        pass

    def test_get_score(self) -> None:
        """Test case for get_score

        Get the score of the game
        """
        pass

    def test_get_scorers(self) -> None:
        """Test case for get_scorers

        Get the list of available scoring algorithms
        """
        pass

    def test_join_game(self) -> None:
        """Test case for join_game

        Connect client to a game and get player token
        """
        pass

    def test_make_move(self) -> None:
        """Test case for make_move

        Make a move in the game
        """
        pass

    def test_public_create_game(self) -> None:
        """Test case for public_create_game

        Create a new game (public)
        """
        pass

    def test_public_get_game_state(self) -> None:
        """Test case for public_get_game_state

        Get the state of the game (public)
        """
        pass

    def test_public_get_legal_moves(self) -> None:
        """Test case for public_get_legal_moves

        Get the legal moves for the current game state (public)
        """
        pass

    def test_public_get_score(self) -> None:
        """Test case for public_get_score

        Get the score of the game (public)
        """
        pass

    def test_public_get_scorers(self) -> None:
        """Test case for public_get_scorers

        Get the list of available scoring algorithms (public)
        """
        pass

    def test_public_join_game(self) -> None:
        """Test case for public_join_game

        Connect client to a game and get player token (public)
        """
        pass

    def test_public_make_move(self) -> None:
        """Test case for public_make_move

        Make a move in the game (public)
        """
        pass

    def test_public_secret_create_game(self) -> None:
        """Test case for public_secret_create_game

        """
        pass


if __name__ == '__main__':
    unittest.main()
