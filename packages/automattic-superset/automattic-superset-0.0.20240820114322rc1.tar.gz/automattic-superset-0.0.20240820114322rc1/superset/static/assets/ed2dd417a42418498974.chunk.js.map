{"version":3,"file":"ed2dd417a42418498974.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/MetadataBar/ContentType.ts","webpack://superset/./src/components/MetadataBar/ContentConfig.tsx","webpack://superset/./src/components/MetadataBar/MetadataBar.tsx","webpack://superset/./src/components/MetadataBar/index.tsx","webpack://superset/./src/components/DynamicEditableTitle/index.tsx","webpack://superset/./src/components/PageHeaderWithActions/index.tsx","webpack://superset/./src/components/TableView/TableView.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum MetadataType {\n  Dashboards = 'dashboards',\n  Description = 'description',\n  LastModified = 'lastModified',\n  Owner = 'owner',\n  Rows = 'rows',\n  Sql = 'sql',\n  Table = 'table',\n  Tags = 'tags',\n}\n\nexport type Dashboards = {\n  type: MetadataType.Dashboards;\n  title: string;\n  description?: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Description = {\n  type: MetadataType.Description;\n  value: string;\n  onClick?: (type: string) => void;\n};\n\nexport type LastModified = {\n  type: MetadataType.LastModified;\n  value: string;\n  modifiedBy: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Owner = {\n  type: MetadataType.Owner;\n  createdBy: string;\n  owners?: string[];\n  createdOn: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Rows = {\n  type: MetadataType.Rows;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Sql = {\n  type: MetadataType.Sql;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Table = {\n  type: MetadataType.Table;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Tags = {\n  type: MetadataType.Tags;\n  values: string[];\n  onClick?: (type: string) => void;\n};\n\nexport type ContentType =\n  | Dashboards\n  | Description\n  | LastModified\n  | Owner\n  | Rows\n  | Sql\n  | Table\n  | Tags;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { ContentType, MetadataType } from '.';\n\nconst Header = styled.div`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst Info = ({\n  text,\n  header,\n}: {\n  text?: string | string[];\n  header?: string;\n}) => {\n  const values = ensureIsArray(text);\n  return (\n    <>\n      {header && <Header>{header}</Header>}\n      {values.map(value => (\n        <div key={value}>{value}</div>\n      ))}\n    </>\n  );\n};\n\nconst config = (contentType: ContentType) => {\n  const { type } = contentType;\n\n  /**\n   * Tooltips are very similar. It's pretty much blocks\n   * of header/text pairs. That's why they are implemented here.\n   * If more complex tooltips emerge, then we should extract the different\n   * types of tooltips to their own components and reference them here.\n   */\n\n  switch (type) {\n    case MetadataType.Dashboards:\n      return {\n        icon: Icons.FundProjectionScreenOutlined,\n        title: contentType.title,\n        tooltip: contentType.description ? (\n          <div>\n            <Info header={contentType.title} text={contentType.description} />\n          </div>\n        ) : undefined,\n      };\n\n    case MetadataType.Description:\n      return {\n        icon: Icons.BookOutlined,\n        title: contentType.value,\n      };\n\n    case MetadataType.LastModified:\n      return {\n        icon: Icons.EditOutlined,\n        title: contentType.value,\n        tooltip: (\n          <div>\n            <Info header={t('Last modified')} text={contentType.value} />\n            <Info header={t('Modified by')} text={contentType.modifiedBy} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Owner:\n      return {\n        icon: Icons.UserOutlined,\n        title: contentType.createdBy,\n        tooltip: (\n          <div>\n            <Info header={t('Created by')} text={contentType.createdBy} />\n            {!!contentType.owners && (\n              <Info header={t('Owners')} text={contentType.owners} />\n            )}\n            <Info header={t('Created on')} text={contentType.createdOn} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Rows:\n      return {\n        icon: Icons.InsertRowBelowOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Sql:\n      return {\n        icon: Icons.ConsoleSqlOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Table:\n      return {\n        icon: Icons.Table,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Tags:\n      return {\n        icon: Icons.TagsOutlined,\n        title: contentType.values.join(', '),\n        tooltip: (\n          <div>\n            <Info header={t('Tags')} text={contentType.values} />\n          </div>\n        ),\n      };\n\n    default:\n      throw Error(`Invalid type provided: ${type}`);\n  }\n};\n\nexport { config };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { uniqWith } from 'lodash';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip, TooltipPlacement } from 'src/components/Tooltip';\nimport { ContentType } from './ContentType';\nimport { config } from './ContentConfig';\n\nexport const MIN_NUMBER_ITEMS = 2;\nexport const MAX_NUMBER_ITEMS = 6;\n\nconst HORIZONTAL_PADDING = 12;\nconst VERTICAL_PADDING = 8;\nconst ICON_PADDING = 8;\nconst SPACE_BETWEEN_ITEMS = 16;\nconst ICON_WIDTH = 16;\nconst TEXT_MIN_WIDTH = 70;\nconst TEXT_MAX_WIDTH = 150;\nconst ORDER = {\n  dashboards: 0,\n  table: 1,\n  sql: 2,\n  rows: 3,\n  tags: 4,\n  description: 5,\n  owner: 6,\n  lastModified: 7,\n};\n\nconst Bar = styled.div<{ count: number }>`\n  ${({ theme, count }) => `\n    display: flex;\n    align-items: center;\n    padding: ${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px;\n    background-color: ${theme.colors.grayscale.light4};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n    min-width: ${\n      HORIZONTAL_PADDING * 2 +\n      (ICON_WIDTH + SPACE_BETWEEN_ITEMS) * count -\n      SPACE_BETWEEN_ITEMS\n    }px;\n    border-radius: ${theme.borderRadius}px;\n    line-height: 1;\n  `}\n`;\n\nconst StyledItem = styled.div<{\n  collapsed: boolean;\n  last: boolean;\n  onClick?: () => void;\n}>`\n  ${({ theme, collapsed, last, onClick }) => `\n    display: flex;\n    align-items: center;\n    max-width: ${\n      ICON_WIDTH +\n      ICON_PADDING +\n      TEXT_MAX_WIDTH +\n      (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    min-width: ${\n      collapsed\n        ? ICON_WIDTH + (last ? 0 : SPACE_BETWEEN_ITEMS)\n        : ICON_WIDTH +\n          ICON_PADDING +\n          TEXT_MIN_WIDTH +\n          (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    padding-right: ${last ? 0 : SPACE_BETWEEN_ITEMS}px;\n    cursor: ${onClick ? 'pointer' : 'default'};\n    & .metadata-icon {\n      color: ${\n        onClick && collapsed\n          ? theme.colors.primary.base\n          : theme.colors.grayscale.base\n      };\n      padding-right: ${collapsed ? 0 : ICON_PADDING}px;\n      & .anticon {\n        line-height: 0;\n      }\n    }\n    & .metadata-text {\n      min-width: ${TEXT_MIN_WIDTH}px;\n      overflow: hidden;\n      text-overflow: ${collapsed ? 'unset' : 'ellipsis'};\n      white-space: nowrap;\n      text-decoration: ${onClick ? 'underline' : 'none'};\n      line-height: 1.4;\n    }\n  `}\n`;\n\n// Make sure big tootips are truncated\nconst TootipContent = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 20;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Item = ({\n  barWidth,\n  contentType,\n  collapsed,\n  last = false,\n  tooltipPlacement,\n}: {\n  barWidth: number | undefined;\n  contentType: ContentType;\n  collapsed: boolean;\n  last?: boolean;\n  tooltipPlacement: TooltipPlacement;\n}) => {\n  const { icon, title, tooltip = title } = config(contentType);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  const Icon = icon;\n  const { type, onClick } = contentType;\n\n  useEffect(() => {\n    setIsTruncated(\n      ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false,\n    );\n  }, [barWidth, setIsTruncated, contentType]);\n\n  const content = (\n    <StyledItem\n      collapsed={collapsed}\n      last={last}\n      onClick={onClick ? () => onClick(type) : undefined}\n    >\n      <Icon iconSize=\"l\" className=\"metadata-icon\" />\n      {!collapsed && (\n        <span ref={ref} className=\"metadata-text\">\n          {title}\n        </span>\n      )}\n    </StyledItem>\n  );\n  return isTruncated || collapsed || (tooltip && tooltip !== title) ? (\n    <Tooltip\n      placement={tooltipPlacement}\n      title={<TootipContent>{tooltip}</TootipContent>}\n    >\n      {content}\n    </Tooltip>\n  ) : (\n    content\n  );\n};\n\nexport interface MetadataBarProps {\n  /**\n   * Array of content type configurations. To see the available properties\n   * for each content type, check {@link ContentType}\n   */\n  items: ContentType[];\n  /**\n   * Antd tooltip placement. To see available values, check {@link TooltipPlacement}.\n   * Defaults to \"top\".\n   */\n  tooltipPlacement?: TooltipPlacement;\n}\n\n/**\n * The metadata bar component is used to display additional information about an entity.\n * Content types are predefined and consistent across the whole app. This means that\n * they will be displayed and behave in a consistent manner, keeping the same ordering,\n * information formatting, and interactions.\n * To extend the list of content types, a developer needs to request the inclusion of the new type in the design system.\n * This process is important to make sure the new type is reviewed by the design team, improving Superset consistency.\n */\nconst MetadataBar = ({ items, tooltipPlacement = 'top' }: MetadataBarProps) => {\n  const [width, setWidth] = useState<number>();\n  const [collapsed, setCollapsed] = useState(false);\n  const uniqueItems = uniqWith(items, (a, b) => a.type === b.type);\n  const sortedItems = uniqueItems.sort((a, b) => ORDER[a.type] - ORDER[b.type]);\n  const count = sortedItems.length;\n  if (count < MIN_NUMBER_ITEMS) {\n    throw Error('The minimum number of items for the metadata bar is 2.');\n  }\n  if (count > MAX_NUMBER_ITEMS) {\n    throw Error('The maximum number of items for the metadata bar is 6.');\n  }\n\n  const onResize = useCallback(\n    width => {\n      // Calculates the breakpoint width to collapse the bar.\n      // The last item does not have a space, so we subtract SPACE_BETWEEN_ITEMS from the total.\n      const breakpoint =\n        (ICON_WIDTH + ICON_PADDING + TEXT_MIN_WIDTH + SPACE_BETWEEN_ITEMS) *\n          count -\n        SPACE_BETWEEN_ITEMS;\n      setWidth(width);\n      setCollapsed(Boolean(width && width < breakpoint));\n    },\n    [count],\n  );\n\n  const { ref } = useResizeDetector({ onResize });\n\n  return (\n    <Bar ref={ref} count={count} data-test=\"metadata-bar\">\n      {sortedItems.map((item, index) => (\n        <Item\n          barWidth={width}\n          key={index}\n          contentType={item}\n          collapsed={collapsed}\n          last={index === count - 1}\n          tooltipPlacement={tooltipPlacement}\n        />\n      ))}\n    </Bar>\n  );\n};\n\nexport default MetadataBar;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport MetadataBar, { MIN_NUMBER_ITEMS, MAX_NUMBER_ITEMS } from './MetadataBar';\n\nexport type { MetadataBarProps } from './MetadataBar';\n\nexport default MetadataBar;\n\nexport { MIN_NUMBER_ITEMS, MAX_NUMBER_ITEMS };\n\nexport * from './ContentType';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { css, SupersetTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport type DynamicEditableTitleProps = {\n  title: string;\n  placeholder: string;\n  onSave: (title: string) => void;\n  canEdit: boolean;\n  label: string | undefined;\n};\n\nconst titleStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  font-size: ${theme.typography.sizes.xl}px;\n  font-weight: ${theme.typography.weights.bold};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  & .dynamic-title,\n  & .dynamic-title-input {\n    display: inline-block;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  & .dynamic-title {\n    cursor: default;\n  }\n  & .dynamic-title-input {\n    border: none;\n    padding: 0;\n    outline: none;\n\n    &::placeholder {\n      color: ${theme.colors.grayscale.light1};\n    }\n  }\n\n  & .input-sizer {\n    position: absolute;\n    left: -9999px;\n    display: inline-block;\n  }\n`;\n\nexport const DynamicEditableTitle = ({\n  title,\n  placeholder,\n  onSave,\n  canEdit,\n  label,\n}: DynamicEditableTitleProps) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState(title || '');\n  const contentRef = useRef<HTMLInputElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const { width: inputWidth, ref: sizerRef } = useResizeDetector();\n  const { width: containerWidth, ref: containerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n  });\n\n  useEffect(() => {\n    setCurrentTitle(title);\n  }, [title]);\n\n  useEffect(() => {\n    if (isEditing && contentRef?.current) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n      }\n    }\n  }, [isEditing]);\n\n  // a trick to make the input grow when user types text\n  // we make additional span component, place it somewhere out of view and copy input\n  // then we can measure the width of that span to resize the input element\n  useLayoutEffect(() => {\n    if (sizerRef?.current) {\n      sizerRef.current.textContent = currentTitle || placeholder;\n    }\n  }, [currentTitle, placeholder, sizerRef]);\n\n  useEffect(() => {\n    if (\n      contentRef.current &&\n      contentRef.current.scrollWidth > contentRef.current.clientWidth\n    ) {\n      setShowTooltip(true);\n    } else {\n      setShowTooltip(false);\n    }\n  }, [inputWidth, containerWidth]);\n\n  const handleClick = useCallback(() => {\n    if (!canEdit || isEditing) {\n      return;\n    }\n    setIsEditing(true);\n  }, [canEdit, isEditing]);\n\n  const handleBlur = useCallback(() => {\n    if (!canEdit) {\n      return;\n    }\n    const formattedTitle = currentTitle.trim();\n    setCurrentTitle(formattedTitle);\n    if (title !== formattedTitle) {\n      onSave(formattedTitle);\n    }\n    setIsEditing(false);\n  }, [canEdit, currentTitle, onSave, title]);\n\n  const handleChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      if (!canEdit || !isEditing) {\n        return;\n      }\n      setCurrentTitle(ev.target.value);\n    },\n    [canEdit, isEditing],\n  );\n\n  const handleKeyPress = useCallback(\n    (ev: KeyboardEvent<HTMLInputElement>) => {\n      if (!canEdit) {\n        return;\n      }\n      if (ev.key === 'Enter') {\n        ev.preventDefault();\n        contentRef.current?.blur();\n      }\n    },\n    [canEdit],\n  );\n\n  return (\n    <div css={titleStyles} ref={containerRef}>\n      <Tooltip\n        id=\"title-tooltip\"\n        title={showTooltip && currentTitle && !isEditing ? currentTitle : null}\n      >\n        {canEdit ? (\n          <input\n            data-test=\"editable-title-input\"\n            className=\"dynamic-title-input\"\n            aria-label={label ?? t('Title')}\n            ref={contentRef}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            onClick={handleClick}\n            onKeyPress={handleKeyPress}\n            placeholder={placeholder}\n            value={currentTitle}\n            css={css`\n              cursor: ${isEditing ? 'text' : 'pointer'};\n\n              ${inputWidth &&\n              inputWidth > 0 &&\n              css`\n                width: ${inputWidth + 1}px;\n              `}\n            `}\n          />\n        ) : (\n          <span\n            className=\"dynamic-title\"\n            aria-label={label ?? t('Title')}\n            ref={contentRef}\n            data-test=\"editable-title\"\n          >\n            {currentTitle}\n          </span>\n        )}\n      </Tooltip>\n      <span ref={sizerRef} className=\"input-sizer\" aria-hidden tabIndex={-1} />\n    </div>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, ReactElement } from 'react';\nimport { css, SupersetTheme, t, useTheme } from '@superset-ui/core';\nimport { AntdDropdown, AntdDropdownProps } from 'src/components';\nimport { TooltipPlacement } from 'src/components/Tooltip';\nimport {\n  DynamicEditableTitle,\n  DynamicEditableTitleProps,\n} from '../DynamicEditableTitle';\nimport CertifiedBadge, { CertifiedBadgeProps } from '../CertifiedBadge';\nimport FaveStar, { FaveStarProps } from '../FaveStar';\nimport Icons from '../Icons';\nimport Button from '../Button';\n\nexport const menuTriggerStyles = (theme: SupersetTheme) => css`\n  width: ${theme.gridUnit * 8}px;\n  height: ${theme.gridUnit * 8}px;\n  padding: 0;\n  border: 1px solid ${theme.colors.primary.dark2};\n\n  &.ant-btn > span.anticon {\n    line-height: 0;\n    transition: inherit;\n  }\n\n  &:hover:not(:focus) > span.anticon {\n    color: ${theme.colors.primary.light1};\n  }\n`;\n\nconst headerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background-color: ${theme.colors.grayscale.light5};\n  height: ${theme.gridUnit * 16}px;\n  padding: 0 ${theme.gridUnit * 4}px;\n\n  .editable-title {\n    overflow: hidden;\n\n    & > input[type='button'],\n    & > span {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      white-space: nowrap;\n    }\n  }\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n    min-width: 0;\n    margin-right: ${theme.gridUnit * 12}px;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst buttonsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  padding-left: ${theme.gridUnit * 2}px;\n\n  & .fave-unfave-icon {\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n  }\n`;\n\nconst additionalActionsContainerStyles = (theme: SupersetTheme) => css`\n  margin-left: ${theme.gridUnit * 2}px;\n`;\n\nexport type PageHeaderWithActionsProps = {\n  editableTitleProps: DynamicEditableTitleProps;\n  showTitlePanelItems: boolean;\n  certificatiedBadgeProps?: CertifiedBadgeProps;\n  showFaveStar: boolean;\n  showMenuDropdown?: boolean;\n  faveStarProps: FaveStarProps;\n  titlePanelAdditionalItems: ReactNode;\n  rightPanelAdditionalItems: ReactNode;\n  additionalActionsMenu: ReactElement;\n  menuDropdownProps: Omit<AntdDropdownProps, 'overlay'>;\n  tooltipProps?: {\n    text?: string;\n    placement?: TooltipPlacement;\n  };\n};\n\nexport const PageHeaderWithActions = ({\n  editableTitleProps,\n  showTitlePanelItems,\n  certificatiedBadgeProps,\n  showFaveStar,\n  faveStarProps,\n  titlePanelAdditionalItems,\n  rightPanelAdditionalItems,\n  additionalActionsMenu,\n  menuDropdownProps,\n  showMenuDropdown = true,\n  tooltipProps,\n}: PageHeaderWithActionsProps) => {\n  const theme = useTheme();\n  return (\n    <div css={headerStyles} className=\"header-with-actions\">\n      <div className=\"title-panel\">\n        <DynamicEditableTitle {...editableTitleProps} />\n        {showTitlePanelItems && (\n          <div css={buttonsStyles}>\n            {certificatiedBadgeProps?.certifiedBy && (\n              <CertifiedBadge {...certificatiedBadgeProps} />\n            )}\n            {showFaveStar && <FaveStar {...faveStarProps} />}\n            {titlePanelAdditionalItems}\n          </div>\n        )}\n      </div>\n      <div className=\"right-button-panel\">\n        {rightPanelAdditionalItems}\n        <div css={additionalActionsContainerStyles}>\n          {showMenuDropdown && (\n            <AntdDropdown\n              trigger={['click']}\n              overlay={additionalActionsMenu}\n              {...menuDropdownProps}\n            >\n              <Button\n                css={menuTriggerStyles}\n                buttonStyle=\"tertiary\"\n                aria-label={t('Menu actions trigger')}\n                tooltip={tooltipProps?.text}\n                placement={tooltipProps?.placement}\n                data-test=\"actions-trigger\"\n              >\n                <Icons.MoreHoriz\n                  iconColor={theme.colors.primary.dark2}\n                  iconSize=\"l\"\n                />\n              </Button>\n            </AntdDropdown>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  scrollTopOnPagination?: boolean;\n  small?: boolean;\n  columnsForWrapText?: string[];\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  columnsForWrapText,\n  onServerPagination = () => {},\n  scrollTopOnPagination = false,\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef<HTMLTableElement>(null);\n  const handleGotoPage = (p: number) => {\n    if (scrollTopOnPagination) {\n      tableRef?.current?.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  return (\n    <>\n      <TableViewStyles {...props} ref={tableRef}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n          columnsForWrapText={columnsForWrapText}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => handleGotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(TableView);\n"],"names":["MetadataType","Header","styled","div","theme","typography","weights","bold","Info","text","header","values","ensureIsArray","___EmotionJSX","React","map","value","key","SPACE_BETWEEN_ITEMS","ORDER","dashboards","table","sql","rows","tags","description","owner","lastModified","Bar","count","colors","grayscale","light4","base","sizes","s","HORIZONTAL_PADDING","borderRadius","StyledItem","collapsed","last","onClick","ICON_WIDTH","primary","TootipContent","Item","barWidth","contentType","tooltipPlacement","icon","title","tooltip","config","type","Dashboards","Icons","FundProjectionScreenOutlined","undefined","Description","BookOutlined","LastModified","EditOutlined","t","modifiedBy","Owner","UserOutlined","createdBy","owners","createdOn","Rows","InsertRowBelowOutlined","Sql","ConsoleSqlOutlined","Table","Tags","TagsOutlined","join","Error","isTruncated","setIsTruncated","useState","ref","useRef","Icon","useEffect","current","scrollWidth","clientWidth","content","iconSize","className","Tooltip","placement","MetadataBar","items","width","setWidth","setCollapsed","sortedItems","_uniqWith","a","b","sort","length","onResize","useCallback","breakpoint","Boolean","useResizeDetector","item","index","titleStyles","css","xl","light1","DynamicEditableTitle","placeholder","onSave","canEdit","label","isEditing","setIsEditing","currentTitle","setCurrentTitle","contentRef","showTooltip","setShowTooltip","inputWidth","sizerRef","containerWidth","containerRef","refreshMode","focus","setSelectionRange","scrollLeft","useLayoutEffect","textContent","handleClick","handleBlur","formattedTitle","trim","handleChange","ev","target","handleKeyPress","_contentRef$current","preventDefault","blur","id","onChange","onBlur","onKeyPress","tabIndex","menuTriggerStyles","gridUnit","dark2","headerStyles","light5","buttonsStyles","additionalActionsContainerStyles","PageHeaderWithActions","editableTitleProps","showTitlePanelItems","certificatiedBadgeProps","showFaveStar","faveStarProps","titlePanelAdditionalItems","rightPanelAdditionalItems","additionalActionsMenu","menuDropdownProps","showMenuDropdown","tooltipProps","useTheme","certifiedBy","CertifiedBadge","FaveStar","AntdDropdown","_extends","trigger","overlay","Button","buttonStyle","MoreHoriz","iconColor","EmptyWrapperType","EmptyWrapper","TableViewStyles","scrollTable","small","light2","PaginationStyles","isPaginationSticky","TableView","columns","data","pageSize","initialPageSize","totalCount","initialPageIndex","initialSortBy","loading","withPagination","emptyWrapperType","Default","noDataText","showRowCount","serverPagination","columnsForWrapText","onServerPagination","scrollTopOnPagination","props","initialState","pageIndex","sortBy","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","pageCount","gotoPage","state","useTable","manualPagination","manualSortBy","Math","ceil","useFilters","useSortBy","usePagination","EmptyWrapperComponent","Small","children","isEmpty","hasPagination","tableRef","_isEqual","TableCollection","Empty","image","PRESENTED_IMAGE_SIMPLE","Pagination","totalPages","currentPage","p","handleGotoPage","_tableRef$current","scroll","hideFirstAndLastPageLinks"],"sourceRoot":""}