{"version":3,"file":"4abbf84f6335959eabc2.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Datasource/ChangeDatasourceModal.tsx","webpack://superset/./src/components/Datasource/DatasourceModal.tsx","webpack://superset/./src/components/WarningIconWithTooltip/index.tsx","webpack://superset/./src/features/datasets/constants.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport Alert from 'src/components/Alert';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { ServerPagination, SortByType } from 'src/components/TableView/types';\nimport StyledModal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Dataset from 'src/types/Dataset';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport Loading from 'src/components/Loading';\nimport { AntdInput } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport {\n  PAGE_SIZE as DATASET_PAGE_SIZE,\n  SORT_BY as DATASET_SORT_BY,\n} from 'src/features/datasets/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport FacePile from '../FacePile';\n\nconst CONFIRM_WARNING_MESSAGE = t(\n  'Warning! Changing the dataset may break the chart if the metadata does not exist.',\n);\n\nconst CHANGE_WARNING_MSG = t(\n  'Changing the dataset may break the chart if the chart relies ' +\n    'on columns or metadata that does not exist in the target dataset',\n);\n\ninterface Datasource {\n  type: string;\n  id: number;\n  uid: string;\n}\n\ninterface ChangeDatasourceModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onChange: (uid: string) => void;\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => void;\n  show: boolean;\n}\n\nconst Modal = styled(StyledModal)`\n  .ant-modal-body {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst ConfirmModalStyled = styled.div`\n  .btn-container {\n    display: flex;\n    justify-content: flex-end;\n    padding: 0px 15px;\n    margin: 10px 0 0 0;\n  }\n\n  .confirm-modal-container {\n    margin: 9px;\n  }\n`;\n\nconst StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\n\nconst ChangeDatasourceModal: FunctionComponent<ChangeDatasourceModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onChange,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [filter, setFilter] = useState<any>(undefined);\n  const [pageIndex, setPageIndex] = useState<number>(0);\n  const [sortBy, setSortBy] = useState<SortByType>(DATASET_SORT_BY);\n  const [confirmChange, setConfirmChange] = useState(false);\n  const [confirmedDataset, setConfirmedDataset] = useState<Datasource>();\n  const searchRef = useRef<AntdInput>(null);\n\n  const {\n    state: { loading, resourceCollection, resourceCount },\n    fetchData,\n  } = useListViewResource<Dataset>('dataset', t('dataset'), addDangerToast);\n\n  const selectDatasource = useCallback((datasource: Datasource) => {\n    setConfirmChange(true);\n    setConfirmedDataset(datasource);\n  }, []);\n\n  const fetchDatasetPayload = {\n    pageIndex,\n    pageSize: DATASET_PAGE_SIZE,\n    filters: [],\n    sortBy,\n  };\n\n  useDebouncedEffect(\n    () => {\n      fetchData({\n        ...fetchDatasetPayload,\n        ...(filter && {\n          filters: [\n            {\n              id: 'table_name',\n              operator: 'ct',\n              value: filter,\n            },\n          ],\n        }),\n      });\n    },\n    SLOW_DEBOUNCE,\n    [filter, pageIndex, sortBy],\n  );\n\n  useEffect(() => {\n    const onEnterModal = async () => {\n      setTimeout(() => searchRef?.current?.focus(), 200);\n    };\n\n    if (show) {\n      onEnterModal();\n    }\n  }, [\n    addDangerToast,\n    fetchData,\n    onChange,\n    onDatasourceSave,\n    onHide,\n    selectDatasource,\n    show,\n  ]);\n\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value ?? '';\n    setFilter(searchValue);\n    setPageIndex(0);\n  };\n\n  const handleChangeConfirm = () => {\n    SupersetClient.get({\n      endpoint: `/api/v1/dataset/${confirmedDataset?.id}`,\n    })\n      .then(({ json }) => {\n        // eslint-disable-next-line no-param-reassign\n        json.result.type = 'table';\n        onDatasourceSave(json.result);\n        onChange(`${confirmedDataset?.id}__table`);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(\n          ({ error, message }: { error: any; message: string }) => {\n            const errorMessage = error\n              ? error.error || error.statusText || error\n              : message;\n            addDangerToast(errorMessage);\n          },\n        );\n      });\n    onHide();\n    addSuccessToast(t('Successfully changed dataset!'));\n  };\n\n  const handlerCancelConfirm = () => {\n    setConfirmChange(false);\n  };\n\n  const columns = [\n    {\n      Cell: ({ row: { original } }: any) => (\n        <StyledSpan\n          role=\"button\"\n          tabIndex={0}\n          data-test=\"datasource-link\"\n          onClick={() => selectDatasource({ type: 'table', ...original })}\n        >\n          {original?.table_name}\n        </StyledSpan>\n      ),\n      Header: t('Name'),\n      accessor: 'table_name',\n    },\n    {\n      Header: t('Type'),\n      accessor: 'kind',\n      disableSortBy: true,\n    },\n    {\n      Header: t('Schema'),\n      accessor: 'schema',\n    },\n    {\n      Header: t('Connection'),\n      accessor: 'database.database_name',\n      disableSortBy: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { owners = [] },\n        },\n      }: any) => <FacePile users={owners} />,\n      Header: t('Owners'),\n      id: 'owners',\n      disableSortBy: true,\n    },\n  ];\n\n  const onServerPagination = (args: ServerPagination) => {\n    setPageIndex(args.pageIndex);\n    if (args.sortBy) {\n      // ensure default sort by\n      setSortBy(args.sortBy.length > 0 ? args.sortBy : DATASET_SORT_BY);\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      responsive\n      title={t('Swap dataset')}\n      width={confirmChange ? '432px' : ''}\n      height={confirmChange ? 'auto' : '540px'}\n      hideFooter={!confirmChange}\n      footer={\n        <>\n          {confirmChange && (\n            <ConfirmModalStyled>\n              <div className=\"btn-container\">\n                <Button onClick={handlerCancelConfirm}>{t('Cancel')}</Button>\n                <Button\n                  className=\"proceed-btn\"\n                  buttonStyle=\"primary\"\n                  onClick={handleChangeConfirm}\n                >\n                  {t('Proceed')}\n                </Button>\n              </div>\n            </ConfirmModalStyled>\n          )}\n        </>\n      }\n    >\n      <>\n        {!confirmChange && (\n          <>\n            <Alert\n              roomBelow\n              type=\"warning\"\n              css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n              message={\n                <>\n                  <strong>{t('Warning!')}</strong> {CHANGE_WARNING_MSG}\n                </>\n              }\n            />\n            <Input\n              ref={searchRef}\n              type=\"text\"\n              value={filter}\n              placeholder={t('Search / Filter')}\n              onChange={changeSearch}\n            />\n            {loading && <Loading />}\n            {!loading && (\n              <TableView\n                columns={columns}\n                data={resourceCollection}\n                pageSize={DATASET_PAGE_SIZE}\n                initialPageIndex={pageIndex}\n                initialSortBy={sortBy}\n                totalCount={resourceCount}\n                onServerPagination={onServerPagination}\n                className=\"table-condensed\"\n                emptyWrapperType={EmptyWrapperType.Small}\n                serverPagination\n                isPaginationSticky\n                scrollTable\n              />\n            )}\n          </>\n        )}\n        {confirmChange && <>{CONFIRM_WARNING_MESSAGE}</>}\n      </>\n    </Modal>\n  );\n};\n\nexport default withToasts(ChangeDatasourceModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport {\n  FeatureFlag,\n  isDefined,\n  isFeatureEnabled,\n  Metric,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { SupersetError } from 'src/components/ErrorMessage/types';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\n\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\n\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\n\ninterface DatasourceModalProps {\n  addSuccessToast: (msg: string) => void;\n  datasource: any;\n  onChange: () => {};\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => {};\n  show: boolean;\n}\n\nfunction buildExtraJsonObject(item: Record<string, unknown>) {\n  const certification =\n    item?.certified_by || item?.certification_details\n      ? {\n          certified_by: item?.certified_by,\n          details: item?.certification_details,\n        }\n      : undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item?.warning_markdown,\n  });\n}\n\nconst DatasourceModal: FunctionComponent<DatasourceModalProps> = ({\n  addSuccessToast,\n  datasource,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [currentDatasource, setCurrentDatasource] = useState({\n    ...datasource,\n    metrics: datasource?.metrics?.map((metric: Metric) => ({\n      ...metric,\n      currency: JSON.parse(metric.currency || 'null'),\n    })),\n  });\n  const currencies = useSelector<\n    {\n      common: {\n        currencies: string[];\n      };\n    },\n    string[]\n  >(state => state.common?.currencies);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const dialog = useRef<any>(null);\n  const [modal, contextHolder] = Modal.useModal();\n\n  const onConfirmSave = () => {\n    // Pull out extra fields into the extra object\n    const schema =\n      currentDatasource.tableSelector?.schema ||\n      currentDatasource.databaseSelector?.schema ||\n      currentDatasource.schema;\n\n    setIsSaving(true);\n    SupersetClient.put({\n      endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n      jsonPayload: {\n        table_name: currentDatasource.table_name,\n        database_id: currentDatasource.database?.id,\n        sql: currentDatasource.sql,\n        filter_select_enabled: currentDatasource.filter_select_enabled,\n        fetch_values_predicate: currentDatasource.fetch_values_predicate,\n        schema,\n        description: currentDatasource.description,\n        main_dttm_col: currentDatasource.main_dttm_col,\n        normalize_columns: currentDatasource.normalize_columns,\n        always_filter_main_dttm: currentDatasource.always_filter_main_dttm,\n        offset: currentDatasource.offset,\n        default_endpoint: currentDatasource.default_endpoint,\n        cache_timeout:\n          currentDatasource.cache_timeout === ''\n            ? null\n            : currentDatasource.cache_timeout,\n        is_sqllab_view: currentDatasource.is_sqllab_view,\n        template_params: currentDatasource.template_params,\n        extra: currentDatasource.extra,\n        is_managed_externally: currentDatasource.is_managed_externally,\n        external_url: currentDatasource.external_url,\n        metrics: currentDatasource?.metrics?.map(\n          (metric: Record<string, unknown>) => {\n            const metricBody: any = {\n              expression: metric.expression,\n              description: metric.description,\n              metric_name: metric.metric_name,\n              metric_type: metric.metric_type,\n              d3format: metric.d3format || null,\n              currency: !isDefined(metric.currency)\n                ? null\n                : JSON.stringify(metric.currency),\n              verbose_name: metric.verbose_name,\n              warning_text: metric.warning_text,\n              uuid: metric.uuid,\n              extra: buildExtraJsonObject(metric),\n            };\n            if (!Number.isNaN(Number(metric.id))) {\n              metricBody.id = metric.id;\n            }\n            return metricBody;\n          },\n        ),\n        columns: currentDatasource?.columns?.map(\n          (column: Record<string, unknown>) => ({\n            id: typeof column.id === 'number' ? column.id : undefined,\n            column_name: column.column_name,\n            type: column.type,\n            advanced_data_type: column.advanced_data_type,\n            verbose_name: column.verbose_name,\n            description: column.description,\n            expression: column.expression,\n            filterable: column.filterable,\n            groupby: column.groupby,\n            is_active: column.is_active,\n            is_dttm: column.is_dttm,\n            python_date_format: column.python_date_format || null,\n            uuid: column.uuid,\n            extra: buildExtraJsonObject(column),\n          }),\n        ),\n        owners: currentDatasource.owners.map(\n          (o: Record<string, number>) => o.value || o.id,\n        ),\n      },\n    })\n      .then(() => {\n        addSuccessToast(t('The dataset has been saved'));\n        return SupersetClient.get({\n          endpoint: `/api/v1/dataset/${currentDatasource?.id}`,\n        });\n      })\n      .then(({ json }) => {\n        // eslint-disable-next-line no-param-reassign\n        json.result.type = 'table';\n        onDatasourceSave({\n          ...json.result,\n          owners: currentDatasource.owners,\n        });\n        onHide();\n      })\n      .catch(response => {\n        setIsSaving(false);\n        getClientErrorObject(response).then(error => {\n          let errorResponse: SupersetError | undefined;\n          let errorText: string | undefined;\n          // sip-40 error response\n          if (error?.errors?.length) {\n            errorResponse = error.errors[0];\n          } else if (typeof error.error === 'string') {\n            // backward compatible with old error messages\n            errorText = error.error;\n          }\n          modal.error({\n            title: t('Error saving dataset'),\n            okButtonProps: { danger: true, className: 'btn-danger' },\n            content: (\n              <ErrorMessageWithStackTrace\n                error={errorResponse}\n                source=\"crud\"\n                fallback={errorText}\n              />\n            ),\n          });\n        });\n      });\n  };\n\n  const onDatasourceChange = (data: Record<string, any>, err: Array<any>) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data?.metrics.map((metric: Record<string, unknown>) => ({\n        ...metric,\n        is_certified: metric?.certified_by || metric?.certification_details,\n      })),\n    });\n    setErrors(err);\n  };\n\n  const renderSaveDialog = () => (\n    <div>\n      <Alert\n        css={theme => ({\n          marginTop: theme.gridUnit * 4,\n          marginBottom: theme.gridUnit * 4,\n        })}\n        type=\"warning\"\n        showIcon\n        message={t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`)}\n      />\n      {t('Are you sure you want to save and apply changes?')}\n    </div>\n  );\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel'),\n    });\n  };\n\n  const showLegacyDatasourceEditor = !isFeatureEnabled(\n    FeatureFlag.DisableLegacyDatasourceEditor,\n  );\n\n  return (\n    <StyledDatasourceModal\n      show={show}\n      onHide={onHide}\n      title={\n        <span>\n          {t('Edit Dataset ')}\n          <strong>{currentDatasource.table_name}</strong>\n        </span>\n      }\n      maskClosable={!isEditing}\n      footer={\n        <>\n          {showLegacyDatasourceEditor && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"default\"\n              data-test=\"datasource-modal-legacy-edit\"\n              className=\"m-r-5\"\n              onClick={() => {\n                window.location.href =\n                  currentDatasource.edit_url || currentDatasource.url;\n              }}\n            >\n              {t('Use legacy datasource editor')}\n            </Button>\n          )}\n          <Button\n            data-test=\"datasource-modal-cancel\"\n            buttonSize=\"small\"\n            className=\"m-r-5\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            data-test=\"datasource-modal-save\"\n            onClick={onClickSave}\n            disabled={\n              isSaving ||\n              errors.length > 0 ||\n              currentDatasource.is_managed_externally\n            }\n            tooltip={\n              currentDatasource.is_managed_externally\n                ? t(\n                    \"This dataset is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <DatasourceEditor\n        showLoadingForImport\n        height={500}\n        datasource={currentDatasource}\n        onChange={onDatasourceChange}\n        setIsEditing={setIsEditing}\n        currencies={currencies}\n      />\n      {contextHolder}\n    </StyledDatasourceModal>\n  );\n};\n\nexport default withToasts(DatasourceModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, SafeMarkdown } from '@superset-ui/core';\nimport Icons, { IconType } from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\n\nexport interface WarningIconWithTooltipProps {\n  warningMarkdown: string;\n  size?: IconType['iconSize'];\n  marginRight?: number;\n}\n\nfunction WarningIconWithTooltip({\n  warningMarkdown,\n  size,\n  marginRight,\n}: WarningIconWithTooltipProps) {\n  const theme = useTheme();\n  return (\n    <Tooltip\n      id=\"warning-tooltip\"\n      title={<SafeMarkdown source={warningMarkdown} />}\n    >\n      <Icons.AlertSolid\n        iconColor={theme.colors.alert.base}\n        iconSize={size}\n        css={{ marginRight: marginRight ?? theme.gridUnit * 2 }}\n      />\n    </Tooltip>\n  );\n}\n\nexport default WarningIconWithTooltip;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const PAGE_SIZE = 25;\nexport const SORT_BY = [{ id: 'changed_on_delta_humanized', desc: true }];\nexport const PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the datasets. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nexport const CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more datasets that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n"],"names":["CONFIRM_WARNING_MESSAGE","t","CHANGE_WARNING_MSG","Modal","styled","StyledModal","ConfirmModalStyled","div","StyledSpan","span","theme","colors","primary","dark1","dark2","withToasts","ChangeDatasourceModal","addDangerToast","addSuccessToast","onChange","onDatasourceSave","onHide","show","filter","setFilter","useState","undefined","pageIndex","setPageIndex","sortBy","setSortBy","DATASET_SORT_BY","confirmChange","setConfirmChange","confirmedDataset","setConfirmedDataset","searchRef","useRef","state","loading","resourceCollection","resourceCount","fetchData","useListViewResource","selectDatasource","useCallback","datasource","fetchDatasetPayload","pageSize","DATASET_PAGE_SIZE","filters","useDebouncedEffect","id","operator","value","SLOW_DEBOUNCE","useEffect","async","setTimeout","_searchRef$current","current","focus","onEnterModal","columns","Cell","row","original","___EmotionJSX","role","tabIndex","onClick","type","table_name","Header","accessor","disableSortBy","owners","FacePile","users","responsive","title","width","height","hideFooter","footer","React","className","Button","handlerCancelConfirm","buttonStyle","handleChangeConfirm","SupersetClient","get","endpoint","then","json","result","catch","response","getClientErrorObject","error","message","errorMessage","statusText","Alert","roomBelow","css","marginBottom","gridUnit","Input","ref","placeholder","event","_event$target$value","searchValue","target","Loading","TableView","data","initialPageIndex","initialSortBy","totalCount","onServerPagination","args","length","emptyWrapperType","EmptyWrapperType","Small","serverPagination","isPaginationSticky","scrollTable","DatasourceEditor","AsyncEsmComponent","StyledDatasourceModal","buildExtraJsonObject","item","certification","certified_by","certification_details","details","JSON","stringify","warning_markdown","DatasourceModal","_datasource$metrics","currentDatasource","setCurrentDatasource","metrics","map","metric","currency","parse","currencies","useSelector","_state$common","common","errors","setErrors","isSaving","setIsSaving","isEditing","setIsEditing","dialog","modal","contextHolder","useModal","onConfirmSave","_currentDatasource$ta","_currentDatasource$da","_currentDatasource$da2","_currentDatasource$me","_currentDatasource$co","schema","tableSelector","databaseSelector","put","jsonPayload","database_id","database","sql","filter_select_enabled","fetch_values_predicate","description","main_dttm_col","normalize_columns","always_filter_main_dttm","offset","default_endpoint","cache_timeout","is_sqllab_view","template_params","extra","is_managed_externally","external_url","metricBody","expression","metric_name","metric_type","d3format","isDefined","verbose_name","warning_text","uuid","Number","isNaN","column","column_name","advanced_data_type","filterable","groupby","is_active","is_dttm","python_date_format","o","_error$errors","errorResponse","errorText","okButtonProps","danger","content","ErrorMessageWithStackTrace","source","fallback","showLegacyDatasourceEditor","isFeatureEnabled","FeatureFlag","DisableLegacyDatasourceEditor","maskClosable","buttonSize","window","location","href","edit_url","url","onClickSave","confirm","marginTop","showIcon","onOk","icon","okText","cancelText","disabled","tooltip","showLoadingForImport","onDatasourceChange","err","is_certified","warningMarkdown","size","marginRight","useTheme","Tooltip","SafeMarkdown","Icons","AlertSolid","iconColor","alert","base","iconSize","_css","PAGE_SIZE","SORT_BY","desc","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE"],"sourceRoot":""}