"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[2932],{79543:(t,e,i)=>{i.d(e,{K:()=>n,P:()=>o});const n=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function o(t,e=!1,i=Float32Array){let n;if(Number.isFinite(t[0]))n=new i(t);else{n=new i(4*t.length);let e=0;for(let i=0;i<t.length;i++){const o=t[i];n[e++]=o[0],n[e++]=o[1],n[e++]=o[2],n[e++]=Number.isFinite(o[3])?o[3]:255}}if(e)for(let t=0;t<n.length;t++)n[t]/=255;return n}},13717:(t,e,i)=>{i.d(e,{Z:()=>o});const n={pickingSelectedColor:null,pickingHighlightColor:new Uint8Array([0,255,255,255]),pickingActive:!1,pickingAttribute:!1},o={inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:#decl":"\nuniform bool picking_uAttribute;\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}},name:"picking",vs:"uniform bool picking_uActive;\nuniform bool picking_uAttribute;\nuniform vec3 picking_uSelectedColor;\nuniform bool picking_uSelectedColorValid;\n\nout vec4 picking_vRGBcolor_Avalid;\n\nconst float COLOR_SCALE = 1. / 255.;\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.001;\n}\n\nbool isVertexPicked(vec3 vertexColor) {\n  return\n    picking_uSelectedColorValid &&\n    !picking_isColorValid(abs(vertexColor - picking_uSelectedColor));\n}\n\nvoid picking_setPickingColor(vec3 pickingColor) {\n  if (picking_uActive) {\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!picking_uAttribute) {\n      picking_vRGBcolor_Avalid.rgb = pickingColor * COLOR_SCALE;\n    }\n  } else {\n    picking_vRGBcolor_Avalid.a = float(isVertexPicked(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\nvoid picking_setPickingAttribute(vec2 value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\nvoid picking_setPickingAttribute(vec3 value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n",fs:"uniform bool picking_uActive;\nuniform vec3 picking_uSelectedColor;\nuniform vec4 picking_uHighlightColor;\n\nin vec4 picking_vRGBcolor_Avalid;\nvec4 picking_filterHighlightColor(vec4 color) {\n  if (picking_uActive) {\n    return color;\n  }\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    float highLightAlpha = picking_uHighlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking_uHighlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\nvec4 picking_filterPickingColor(vec4 color) {\n  if (picking_uActive) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\nvec4 picking_filterColor(vec4 color) {\n  vec4 highightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highightColor);\n}\n\n",getUniforms:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n;const e={};if(void 0!==t.pickingSelectedColor)if(t.pickingSelectedColor){const i=t.pickingSelectedColor.slice(0,3);e.picking_uSelectedColorValid=1,e.picking_uSelectedColor=i}else e.picking_uSelectedColorValid=0;if(t.pickingHighlightColor){const i=Array.from(t.pickingHighlightColor,(t=>t/255));Number.isFinite(i[3])||(i[3]=1),e.picking_uHighlightColor=i}return void 0!==t.pickingActive&&(e.picking_uActive=Boolean(t.pickingActive),e.picking_uAttribute=Boolean(t.pickingAttribute)),e}}},32103:(t,e,i)=>{i.d(e,{Kv:()=>l,T4:()=>s,Ul:()=>c,Z6:()=>a,ZU:()=>g}),i(67294);var n=i(68924),o=i(11965);const r=new n.FilterXSS({whiteList:{...(0,n.getDefaultWhiteList)(),span:["style","class","title"],div:["style","class"],a:["style","class","href","title","target"],img:["style","class","src","alt","title","width","height"],video:["autoplay","controls","loop","preload","src","height","width","muted"]},stripIgnoreTag:!0,css:!1});function a(t){return r.process(t)}function l(t){return Array.from((new DOMParser).parseFromString(t,"text/html").body.childNodes).some((({nodeType:t})=>1===t))}function s(t){return l(t)?a(t):t}function c(t){return l(t)?(0,o.tZ)("span",{className:"safe-html-wrapper",dangerouslySetInnerHTML:{__html:a(t)}}):t}function g(t){return t.replace(/<[^>]*>/g,"")}},34634:(t,e,i)=>{i.d(e,{F:()=>f});var n=i(18446),o=i.n(n),r=i(67294),a=i(90530),l=i(10025),s=i(85716),c=i(51995),g=i(32103),u=i(11965);const p=c.iK.div`
  ${({theme:t,top:e,left:i})=>`\n    position: absolute;\n    top: ${e}px;\n    left: ${i}px;\n    padding: ${2*t.gridUnit}px;\n    margin: ${2*t.gridUnit}px;\n    background: ${t.colors.grayscale.dark2};\n    color: ${t.colors.grayscale.light5};\n    maxWidth: 300px;\n    fontSize: ${t.typography.sizes.s}px;\n    zIndex: 9;\n    pointerEvents: none;\n  `}
`;function d(t){const{tooltip:e}=t;if(null==e)return null;const{x:i,y:n,content:o}=e,r="string"==typeof o?(0,g.Ul)(o):o;return(0,u.tZ)(p,{top:n,left:i},r)}const h=(0,r.memo)((0,r.forwardRef)(((t,e)=>{const[i,n]=(0,r.useState)(null),[c,g]=(0,r.useState)(null),[p,h]=(0,r.useState)(t.viewport),f=(0,s.D)(t.viewport);(0,r.useImperativeHandle)(e,(()=>({setTooltip:n})),[]);const m=(0,r.useCallback)((()=>{if(c&&Date.now()-c>250){const e=t.setControlValue;e&&e("viewport",p),g(null)}}),[c,t.setControlValue,p]);(0,r.useEffect)((()=>{const t=setInterval(m,250);return clearInterval(t)}),[m]),(0,r.useEffect)((()=>{o()(t.viewport,f)||h(t.viewport)}),[f,t.viewport]);const v=(0,r.useCallback)((({viewState:t})=>{h(t),g(Date.now())}),[]),C=(0,r.useCallback)((()=>t.layers.some((t=>"function"==typeof t))?t.layers.map((t=>"function"==typeof t?t():t)):t.layers),[t.layers]),{children:x=null,height:_,width:k}=t;return(0,u.tZ)(r.Fragment,null,(0,u.tZ)("div",{style:{position:"relative",width:k,height:_}},(0,u.tZ)(l.Z,{controller:!0,width:k,height:_,layers:C(),viewState:p,glOptions:{preserveDrawingBuffer:!0},onViewStateChange:v},(0,u.tZ)(a.Z3,{preserveDrawingBuffer:!0,mapStyle:t.mapStyle||"light",mapboxApiAccessToken:t.mapboxApiAccessToken})),x),(0,u.tZ)(d,{tooltip:i}))}))),f=(0,c.iK)(h)`
  .deckgl-tooltip > div {
    overflow: hidden;
    text-overflow: ellipsis;
  }
`},51805:(t,e,i)=>{i.d(e,{Z:()=>o}),i(67294);var n=i(11965);const o=({label:t,value:e})=>(0,n.tZ)("div",null,t,(0,n.tZ)("strong",null,e))},42932:(t,e,i)=>{i.r(e),i.d(e,{default:()=>I,getLayer:()=>U});var n=i(50308),o=i.n(n),r=i(67294),a=i(4942),l=i(41576),s=i(72958),c=i(44059),g=i(44211),u=i(6948),p=i(39769),d=i(53982),h=i(5259),f=i(13717),m=i(79543);const v=[0,0,0,0],C=[0,255,0,255],x=["minColor","maxColor","colorRange","colorDomain"],_={cellSizePixels:{value:100,min:1},cellMarginPixels:{value:2,min:0,max:5},colorDomain:null,colorRange:m.K};class k extends h.Z{constructor(...t){super(...t),(0,a.Z)(this,"state",void 0)}static isSupported(t){return(0,g.ag)(t,[u.h.TEXTURE_FLOAT])}getShaders(){return{vs:"#define SHADER_NAME screen-grid-layer-vertex-shader\n#define RANGE_COUNT 6\n\nattribute vec3 positions;\nattribute vec3 instancePositions;\nattribute vec4 instanceCounts;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform vec3 cellScale;\nuniform vec4 minColor;\nuniform vec4 maxColor;\nuniform vec4 colorRange[RANGE_COUNT];\nuniform vec2 colorDomain;\nuniform bool shouldUseMinMax;\nuniform sampler2D maxTexture;\n\nvarying vec4 vColor;\nvarying float vSampleCount;\n\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\n  vec4 outColor = vec4(0., 0., 0., 0.);\n  if (value >= domain.x && value <= domain.y) {\n    float domainRange = domain.y - domain.x;\n    if (domainRange <= 0.) {\n      outColor = colorRange[0];\n    } else {\n      float rangeCount = float(RANGE_COUNT);\n      float rangeStep = domainRange / rangeCount;\n      float idx = floor((value - domain.x) / rangeStep);\n      idx = clamp(idx, 0., rangeCount - 1.);\n      int intIdx = int(idx);\n      outColor = colorRange[intIdx];\n    }\n  }\n  outColor = outColor / 255.;\n  return outColor;\n}\n\nvoid main(void) {\n  vSampleCount = instanceCounts.a;\n\n  float weight = instanceCounts.r;\n  float maxWeight = texture2D(maxTexture, vec2(0.5)).r;\n\n  float step = weight / maxWeight;\n  vec4 minMaxColor = mix(minColor, maxColor, step) / 255.;\n\n  vec2 domain = colorDomain;\n  float domainMaxValid = float(colorDomain.y != 0.);\n  domain.y = mix(maxWeight, colorDomain.y, domainMaxValid);\n  vec4 rangeColor = quantizeScale(domain, colorRange, weight);\n\n  float rangeMinMax = float(shouldUseMinMax);\n  vec4 color = mix(rangeColor, minMaxColor, rangeMinMax);\n  vColor = vec4(color.rgb, color.a * opacity);\n  picking_setPickingColor(instancePickingColors);\n\n  gl_Position = vec4(instancePositions + positions * cellScale, 1.);\n}\n",fs:"#define SHADER_NAME screen-grid-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying float vSampleCount;\n\nvoid main(void) {\n  if (vSampleCount <= 0.0) {\n    discard;\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[f.Z]}}initializeState(){const{gl:t}=this.context;this.getAttributeManager().addInstanced({instancePositions:{size:3,update:this.calculateInstancePositions},instanceCounts:{size:4,noAlloc:!0}}),this.setState({model:this._getModel(t)})}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState(t){super.updateState(t);const{oldProps:e,props:i,changeFlags:n}=t,o=this.getAttributeManager();i.numInstances!==e.numInstances?o.invalidateAll():e.cellSizePixels!==i.cellSizePixels&&o.invalidate("instancePositions"),this._updateUniforms(e,i,n)}draw({uniforms:t}){const{parameters:e,maxTexture:i}=this.props,n=this.props.minColor||v,o=this.props.maxColor||C,r=this.props.colorDomain||[1,0],{model:a}=this.state;a.setUniforms(t).setUniforms({minColor:n,maxColor:o,maxTexture:i,colorDomain:r}).draw({parameters:{depthTest:!1,depthMask:!1,...e}})}calculateInstancePositions(t,{numInstances:e}){const{width:i,height:n}=this.context.viewport,{cellSizePixels:o}=this.props,r=Math.ceil(i/o),{value:a,size:l}=t;for(let t=0;t<e;t++){const e=t%r,s=Math.floor(t/r);a[t*l+0]=e*o/i*2-1,a[t*l+1]=1-s*o/n*2,a[t*l+2]=0}}_getModel(t){return new p.Z(t,{...this.getShaders(),id:this.props.id,geometry:new d.Z({drawMode:6,attributes:{positions:new Float32Array([0,0,0,1,0,0,1,1,0,0,1,0])}}),isInstanced:!0})}_shouldUseMinMax(){const{minColor:t,maxColor:e,colorDomain:i,colorRange:n}=this.props;return t||e?(l.Z.deprecated("ScreenGridLayer props: minColor and maxColor","colorRange, colorDomain")(),!0):!i&&!n}_updateUniforms(t,e,i){const{model:n}=this.state;if(x.some((i=>t[i]!==e[i]))&&n.setUniforms({shouldUseMinMax:this._shouldUseMinMax()}),t.colorRange!==e.colorRange&&n.setUniforms({colorRange:(0,m.P)(e.colorRange)}),t.cellMarginPixels!==e.cellMarginPixels||t.cellSizePixels!==e.cellSizePixels||i.viewportChanged){const{width:t,height:e}=this.context.viewport,{cellSizePixels:i,cellMarginPixels:o}=this.props,r=i>o?o:0,a=new Float32Array([(i-r)/t*2,-(i-r)/e*2,1]);n.setUniforms({cellScale:a})}}}(0,a.Z)(k,"layerName","ScreenGridCellLayer"),(0,a.Z)(k,"defaultProps",_);var b=i(92026),A=i(21900);const S={...k.defaultProps,getPosition:{type:"accessor",value:t=>t.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"},y="positions",w={data:{props:["cellSizePixels"]},weights:{props:["aggregation"],accessors:["getWeight"]}};class P extends b.Z{constructor(...t){super(...t),(0,a.Z)(this,"state",void 0)}initializeState(){const{gl:t}=this.context;if(!k.isSupported(t))return this.setState({supported:!1}),void l.Z.error("ScreenGridLayer: ".concat(this.id," is not supported on this browser"))();super.initializeAggregationLayer({dimensions:w,getCellSize:t=>t.cellSizePixels});const e={count:{size:1,operation:c.KM.SUM,needMax:!0,maxTexture:(0,A.hq)(t,{id:"".concat(this.id,"-max-texture")})}};this.setState({supported:!0,projectPoints:!0,weights:e,subLayerData:{attributes:{}},maxTexture:e.count.maxTexture,positionAttributeName:"positions",posOffset:[0,0],translation:[1,-1]}),this.getAttributeManager().add({[y]:{size:3,accessor:"getPosition",type:5130,fp64:this.use64bitPositions()},count:{size:3,accessor:"getWeight"}})}shouldUpdateState({changeFlags:t}){return this.state.supported&&t.somethingChanged}updateState(t){super.updateState(t)}renderLayers(){if(!this.state.supported)return[];const{maxTexture:t,numRow:e,numCol:i,weights:n}=this.state,{updateTriggers:o}=this.props,{aggregationBuffer:r}=n.count;return new(this.getSubLayerClass("cells",k))(this.props,this.getSubLayerProps({id:"cell-layer",updateTriggers:o}),{data:{attributes:{instanceCounts:r}},maxTexture:t,numInstances:e*i})}finalizeState(t){super.finalizeState(t);const{aggregationBuffer:e,maxBuffer:i,maxTexture:n}=this.state;null==e||e.delete(),null==i||i.delete(),null==n||n.delete()}getPickingInfo({info:t}){const{index:e}=t;if(e>=0){const{gpuGridAggregator:i,gpuAggregation:n,weights:o}=this.state,r=n?i.getData("count"):o.count;t.object=s.Z.getAggregationData({pixelIndex:e,...r})}return t}updateResults({aggregationData:t,maxData:e}){const{count:i}=this.state.weights;i.aggregationData=t,i.aggregationBuffer.setData({data:t}),i.maxData=e,i.maxTexture.setImageData({data:e})}updateAggregationState(t){const e=t.props.cellSizePixels,i=t.oldProps.cellSizePixels!==e,{viewportChanged:n}=t.changeFlags;let o=t.props.gpuAggregation;this.state.gpuAggregation!==t.props.gpuAggregation&&o&&!s.Z.isSupported(this.context.gl)&&(l.Z.warn("GPU Grid Aggregation not supported, falling back to CPU")(),o=!1);const r=o!==this.state.gpuAggregation;this.setState({gpuAggregation:o});const a=this.isAttributeChanged(y),{dimensions:c}=this.state,{data:g,weights:u}=c,p=a||r||n||this.isAggregationDirty(t,{compareAll:o,dimension:g}),d=this.isAggregationDirty(t,{dimension:u});this.setState({aggregationDataDirty:p,aggregationWeightsDirty:d});const{viewport:h}=this.context;if(n||i){const{width:t,height:i}=h,n=Math.ceil(t/e),o=Math.ceil(i/e);this.allocateResources(o,n),this.setState({scaling:[t/2,-i/2,1],gridOffset:{xOffset:e,yOffset:e},width:t,height:i,numCol:n,numRow:o})}d&&this._updateAccessors(t),(p||d)&&this._resetResults()}_updateAccessors(t){const{getWeight:e,aggregation:i,data:n}=t.props,{count:o}=this.state.weights;o&&(o.getWeight=e,o.operation=c.KM[i]),this.setState({getValue:(0,c._D)(i,e,{data:n})})}_resetResults(){const{count:t}=this.state.weights;t&&(t.aggregationData=null)}}(0,a.Z)(P,"layerName","ScreenGridLayer"),(0,a.Z)(P,"defaultProps",S);var R=i(61988),Z=i(63241),M=i(58371),D=i(51805),L=i(40461),T=i(34634),z=i(11965);function G(t){var e,i,n;return(0,z.tZ)("div",{className:"deckgl-tooltip"},(0,z.tZ)(D.Z,{label:(0,R.t)("Longitude and Latitude")+": ",value:`${null==t||null==(e=t.coordinate)?void 0:e[0]}, ${null==t||null==(i=t.coordinate)?void 0:i[1]}`}),(0,z.tZ)(D.Z,{label:(0,R.t)("Weight")+": ",value:`${null==(n=t.object)?void 0:n.cellWeight}`}))}function U(t,e,i,n){const o=t,r=o.color_picker;let a=e.data.features.map((t=>({...t,color:[r.r,r.g,r.b,255*r.a]})));return o.js_data_mutator&&(a=(0,Z.Z)(o.js_data_mutator)(a)),new P({id:`screengrid-layer-${o.slice_id}`,data:a,cellSizePixels:o.grid_size,minColor:[r.r,r.g,r.b,0],maxColor:[r.r,r.g,r.b,255*r.a],outline:!1,getWeight:t=>t.weight||0,...(0,M.N)(o,n,G)})}const E=t=>{const e=(0,r.useRef)(),i=(0,r.useCallback)((()=>{const e=t.payload.data.features||[],{width:i,height:n,formData:o}=t;return o.autozoom?(0,L.Z)(t.viewport,{width:i,height:n,points:(r=e,r.map((t=>t.position)))}):t.viewport;var r}),[t]),[n,a]=(0,r.useState)(t.payload.form_data),[l,s]=(0,r.useState)(i());(0,r.useEffect)((()=>{t.payload.form_data!==n&&(s(i()),a(t.payload.form_data))}),[i,t.payload.form_data,n]);const c=(0,r.useCallback)((t=>{const{current:i}=e;i&&i.setTooltip(t)}),[]),g=(0,r.useCallback)((()=>[U(t.formData,t.payload,o(),c)]),[t.formData,t.payload,c]),{formData:u,payload:p,setControlValue:d}=t;return(0,z.tZ)("div",null,(0,z.tZ)(T.F,{ref:e,viewport:l,layers:g(),setControlValue:d,mapStyle:u.mapbox_style,mapboxApiAccessToken:p.data.mapboxApiKey,width:t.width,height:t.height}))},I=(0,r.memo)(E)},58371:(t,e,i)=>{i.d(e,{N:()=>r,Z:()=>l});var n=i(4065),o=i(63241);function r(t,e,i,n){const r=t;let a,l,s=i;return r.js_tooltip&&(s=(0,o.Z)(r.js_tooltip)),s&&(a=t=>(t.picked?e({content:s(t),x:t.x,y:t.y}):e(null),!0)),r.js_onclick_href?l=t=>{const e=(0,o.Z)(r.js_onclick_href)(t);return window.open(e),!0}:r.table_filter&&void 0!==n&&(l=t=>(n(t.object[r.line_column]),!0)),{onClick:l,onHover:a,pickable:Boolean(a)}}const a={p1:.01,p5:.05,p95:.95,p99:.99};function l(t="sum",e=null){if("count"===t)return t=>t.length;let i;return i=t in a?(i,o)=>{let r;return r=e?i.sort(((t,i)=>n.ascending(e(t),e(i)))):i.sort(n.ascending),n.quantile(r,a[t],o)}:n[t],e?t=>i(t.map((t=>e(t)))):t=>i(t)}},89503:(t,e,i)=>{i.r(e),i.d(e,{hexToRGB:()=>o});var n=i(50667);function o(t,e=255){if(!t)return[0,0,0,e];const{r:i,g:o,b:r}=(0,n.B8)(t);return[i,o,r,e]}},40461:(t,e,i)=>{i.d(e,{Z:()=>s});var n=i(17013),o=i(4065);const r=[-90,90],a=[-180,180];function l([t,e],[i,n],o=.25){return t<e?[t,e]:[Math.max(i,t-o),Math.min(n,e+o)]}function s(t,{points:e,width:i,height:s,minExtent:c,maxZoom:g,offset:u,padding:p=20}){const{bearing:d,pitch:h}=t,f=function(t){const e=l((0,o.extent)(t,(t=>t[1])),r),i=l((0,o.extent)(t,(t=>t[0])),a);return[[i[0],e[0]],[i[1],e[1]]]}(e);try{return{...(0,n.Xg)({bounds:f,width:i,height:s,minExtent:c,maxZoom:g,offset:u,padding:p}),bearing:d,pitch:h}}catch(t){console.error("Could not fit viewport",t)}return t}},63241:(t,e,i)=>{i.d(e,{Z:()=>c});var n=i(55140),o=i.n(n),r=i(59050),a=i(4065),l=i(89503);const s={console,_:r.ZP,colors:l,d3array:a};function c(t,e,i){const n={},r=`SAFE_EVAL_${Math.floor(1e6*Math.random())}`;n[r]={};const a=`${r}=${t}`,l={...s,...e};Object.keys(l).forEach((t=>{n[t]=l[t]}));try{return o().runInNewContext(a,n,i),n[r]}catch(t){return()=>t}}}}]);
//# sourceMappingURL=2aa28cd68f9c66a8d8b3.chunk.js.map