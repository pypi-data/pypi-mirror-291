{"version":3,"file":"72a99dca645a41c45694.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/features/tags/TagModal.tsx","webpack://superset/./src/features/allEntities/AllEntitiesTable.tsx","webpack://superset/./src/pages/AllEntities/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, useState, useEffect } from 'react';\nimport rison from 'rison';\nimport Modal from 'src/components/Modal';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FormLabel } from 'src/components/Form';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport { Input } from 'antd';\nimport { Divider } from 'src/components';\nimport Button from 'src/components/Button';\nimport { Tag } from 'src/views/CRUD/types';\nimport { fetchObjectsByTagIds } from 'src/features/tags/tags';\n\nconst StyledModalBody = styled.div`\n  .ant-select-dropdown {\n    max-height: ${({ theme }) => theme.gridUnit * 40}px;\n  }\n  .tag-input {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport interface TaggableResourceOption {\n  label: string;\n  value: number;\n  key: number;\n}\n\nexport enum TaggableResources {\n  Chart = 'chart',\n  Dashboard = 'dashboard',\n  SavedQuery = 'query',\n}\n\ninterface TagModalProps {\n  onHide: () => void;\n  refreshData: () => void;\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  show: boolean;\n  clearOnHide?: boolean;\n  editTag?: Tag | null;\n}\n\nconst TagModal: React.FC<TagModalProps> = ({\n  show,\n  onHide,\n  editTag,\n  refreshData,\n  addSuccessToast,\n  addDangerToast,\n  clearOnHide = false,\n}) => {\n  const [dashboardsToTag, setDashboardsToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n  const [chartsToTag, setChartsToTag] = useState<TaggableResourceOption[]>([]);\n  const [savedQueriesToTag, setSavedQueriesToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n\n  const [tagName, setTagName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  const isEditMode = !!editTag;\n  const modalTitle = isEditMode ? 'Edit Tag' : 'Create Tag';\n\n  const clearResources = () => {\n    setDashboardsToTag([]);\n    setChartsToTag([]);\n    setSavedQueriesToTag([]);\n  };\n\n  const clearTagForm = () => {\n    setTagName('');\n    setDescription('');\n    setDashboardsToTag([]);\n    setChartsToTag([]);\n    setSavedQueriesToTag([]);\n  };\n\n  useEffect(() => {\n    const resourceMap: { [key: string]: TaggableResourceOption[] } = {\n      [TaggableResources.Dashboard]: [],\n      [TaggableResources.Chart]: [],\n      [TaggableResources.SavedQuery]: [],\n    };\n\n    const updateResourceOptions = ({ id, name, type }: Tag) => {\n      const resourceOptions = resourceMap[type];\n      if (resourceOptions) {\n        resourceOptions.push({\n          value: id,\n          label: name,\n          key: id,\n        });\n      }\n    };\n    clearResources();\n    if (isEditMode) {\n      fetchObjectsByTagIds(\n        { tagIds: [editTag.id], types: null },\n        (data: Tag[]) => {\n          data.forEach(updateResourceOptions);\n          setDashboardsToTag(resourceMap[TaggableResources.Dashboard]);\n          setChartsToTag(resourceMap[TaggableResources.Chart]);\n          setSavedQueriesToTag(resourceMap[TaggableResources.SavedQuery]);\n        },\n        (error: Response) => {\n          addDangerToast('Error Fetching Tagged Objects');\n        },\n      );\n      setTagName(editTag.name);\n      setDescription(editTag.description);\n    }\n  }, [editTag]);\n\n  const loadData = async (\n    search: string,\n    page: number,\n    pageSize: number,\n    columns: string[],\n    filterColumn: string,\n    orderColumn: string,\n    endpoint: string,\n  ) => {\n    const queryParams = rison.encode({\n      columns,\n      filters: [\n        {\n          col: filterColumn,\n          opr: 'ct',\n          value: search,\n        },\n      ],\n      page,\n      order_column: orderColumn,\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/${endpoint}/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n\n    return {\n      data: result.map((item: { id: number }) => ({\n        value: item.id,\n        label: item[filterColumn],\n      })),\n      totalCount: count,\n    };\n  };\n\n  const loadCharts = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'slice_name'],\n      'slice_name',\n      'slice_name',\n      'chart',\n    );\n\n  const loadDashboards = async (\n    search: string,\n    page: number,\n    pageSize: number,\n  ) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'dashboard_title'],\n      'dashboard_title',\n      'dashboard_title',\n      'dashboard',\n    );\n\n  const loadQueries = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'label'],\n      'label',\n      'label',\n      'saved_query',\n    );\n\n  const handleOptionChange = (resource: TaggableResources, data: any) => {\n    if (resource === TaggableResources.Dashboard) setDashboardsToTag(data);\n    else if (resource === TaggableResources.Chart) setChartsToTag(data);\n    else if (resource === TaggableResources.SavedQuery)\n      setSavedQueriesToTag(data);\n  };\n\n  const handleTagNameChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setTagName(ev.target.value);\n  const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setDescription(ev.target.value);\n\n  const onSave = () => {\n    const dashboards = dashboardsToTag.map(dash => ['dashboard', dash.value]);\n    const charts = chartsToTag.map(chart => ['chart', chart.value]);\n    const savedQueries = savedQueriesToTag.map(q => ['query', q.value]);\n\n    if (isEditMode) {\n      SupersetClient.put({\n        endpoint: `/api/v1/tag/${editTag.id}`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      })\n        .then(({ json = {} }) => {\n          refreshData();\n          clearTagForm();\n          addSuccessToast(t('Tag updated'));\n          onHide();\n        })\n        .catch(err => {\n          addDangerToast(err.message || 'Error Updating Tag');\n        });\n    } else {\n      SupersetClient.post({\n        endpoint: `/api/v1/tag/`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      })\n        .then(({ json = {} }) => {\n          refreshData();\n          clearTagForm();\n          addSuccessToast(t('Tag created'));\n          onHide();\n        })\n        .catch(err => addDangerToast(err.message || 'Error Creating Tag'));\n    }\n  };\n\n  return (\n    <Modal\n      title={modalTitle}\n      onHide={() => {\n        if (clearOnHide) clearTagForm();\n        onHide();\n      }}\n      show={show}\n      footer={\n        <div>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"secondary\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"primary\"\n            onClick={onSave}\n          >\n            {t('Save')}\n          </Button>\n        </div>\n      }\n    >\n      <StyledModalBody>\n        <FormLabel>{t('Tag name')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleTagNameChange}\n          placeholder={t('Name of your tag')}\n          value={tagName}\n        />\n        <FormLabel>{t('Description')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleDescriptionChange}\n          placeholder={t('Add description of your tag')}\n          value={description}\n        />\n        <Divider />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select dashboards')}\n          mode=\"multiple\"\n          name=\"dashboards\"\n          // @ts-ignore\n          value={dashboardsToTag}\n          options={loadDashboards}\n          onChange={value =>\n            handleOptionChange(TaggableResources.Dashboard, value)\n          }\n          header={<FormLabel>{t('Dashboards')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select charts')}\n          mode=\"multiple\"\n          name=\"charts\"\n          // @ts-ignore\n          value={chartsToTag}\n          options={loadCharts}\n          onChange={value => handleOptionChange(TaggableResources.Chart, value)}\n          header={<FormLabel>{t('Charts')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select saved queries')}\n          mode=\"multiple\"\n          name=\"savedQueries\"\n          // @ts-ignore\n          value={savedQueriesToTag}\n          options={loadQueries}\n          onChange={value =>\n            handleOptionChange(TaggableResources.SavedQuery, value)\n          }\n          header={<FormLabel>{t('Saved queries')}</FormLabel>}\n          allowClear\n        />\n      </StyledModalBody>\n    </Modal>\n  );\n};\n\nexport default TagModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport moment from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { TagsList } from 'src/components/Tags';\nimport FacePile from 'src/components/FacePile';\nimport Tag from 'src/types/TagType';\nimport Owner from 'src/types/Owner';\nimport { EmptyStateBig } from 'src/components/EmptyState';\n\nconst MAX_TAGS_TO_SHOW = 3;\nconst PAGE_SIZE = 10;\n\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${({ theme }) => theme.gridUnit * 1}px 0;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n  .entity-title {\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.typography.sizes.m}px;\n    font-weight: ${({ theme }) => theme.typography.weights.medium};\n    line-height: 17px;\n    letter-spacing: 0px;\n    text-align: left;\n    margin: ${({ theme }) => theme.gridUnit * 4}px 0;\n  }\n`;\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nexport interface TaggedObjects {\n  dashboard: TaggedObject[];\n  chart: TaggedObject[];\n  query: TaggedObject[];\n}\n\ninterface AllEntitiesTableProps {\n  search?: string;\n  setShowTagModal: (show: boolean) => void;\n  objects: TaggedObjects;\n}\n\nexport default function AllEntitiesTable({\n  search = '',\n  setShowTagModal,\n  objects,\n}: AllEntitiesTableProps) {\n  type objectType = 'dashboard' | 'chart' | 'query';\n\n  const showListViewObjs =\n    objects.dashboard.length > 0 ||\n    objects.chart.length > 0 ||\n    objects.query.length > 0;\n\n  const renderTable = (type: objectType) => {\n    const data = objects[type].map((o: TaggedObject) => ({\n      [type]: <a href={o.url}>{o.name}</a>,\n      modified: moment.utc(o.changed_on).fromNow(),\n      tags: o.tags,\n      owners: o.owners,\n    }));\n\n    return (\n      <TableView\n        className=\"table-condensed\"\n        emptyWrapperType={EmptyWrapperType.Small}\n        data={data}\n        pageSize={PAGE_SIZE}\n        columns={[\n          {\n            accessor: type,\n            Header: 'Title',\n          },\n          {\n            Cell: ({\n              row: {\n                original: { tags = [] },\n              },\n            }: {\n              row: {\n                original: {\n                  tags: Tag[];\n                };\n              };\n            }) => (\n              // Only show custom type tags\n              <TagsList\n                tags={tags.filter(\n                  (tag: Tag) =>\n                    tag.type === 'TagTypes.custom' || tag.type === 1,\n                )}\n                maxTags={MAX_TAGS_TO_SHOW}\n              />\n            ),\n            Header: t('Tags'),\n            accessor: 'tags',\n            disableSortBy: true,\n          },\n          {\n            Cell: ({\n              row: {\n                original: { owners = [] },\n              },\n            }: any) => <FacePile users={owners} />,\n            Header: t('Owners'),\n            accessor: 'owners',\n            disableSortBy: true,\n            size: 'xl',\n          },\n        ]}\n      />\n    );\n  };\n\n  return (\n    <AllEntitiesTableContainer>\n      {showListViewObjs ? (\n        <>\n          <div className=\"entity-title\">{t('Dashboards')}</div>\n          {renderTable('dashboard')}\n          <div className=\"entity-title\">{t('Charts')}</div>\n          {renderTable('chart')}\n          <div className=\"entity-title\">{t('Queries')}</div>\n          {renderTable('query')}\n        </>\n      ) : (\n        <EmptyStateBig\n          image=\"dashboard.svg\"\n          title={t('No entities have this tag currently assigned')}\n          buttonAction={() => setShowTagModal(true)}\n          buttonText={t('Add tag to entities')}\n        />\n      )}\n    </AllEntitiesTableContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, t, css, SupersetTheme } from '@superset-ui/core';\nimport { NumberParam, useQueryParam } from 'use-query-params';\nimport AllEntitiesTable, {\n  TaggedObjects,\n} from 'src/features/allEntities/AllEntitiesTable';\nimport Button from 'src/components/Button';\nimport MetadataBar, {\n  MetadataType,\n  Description,\n  Owner,\n  LastModified,\n} from 'src/components/MetadataBar';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport { Tag } from 'src/views/CRUD/types';\nimport TagModal from 'src/features/tags/TagModal';\nimport withToasts, { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { fetchObjectsByTagIds, fetchSingleTag } from 'src/features/tags/tags';\nimport Loading from 'src/components/Loading';\nimport getOwnerName from 'src/utils/getOwnerName';\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nconst additionalItemsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nconst AllEntitiesContainer = styled.div`\n  ${({ theme }) => `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }\n  .entities {\n    margin: ${theme.gridUnit * 6}px; 0px;\n  }\n  .pagination-container {\n    background-color: transparent;\n  }\n  `}\n`;\n\nconst AllEntitiesNav = styled.div`\n  ${({ theme }) => `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }\n  .header {\n    font-weight: ${theme.typography.weights.bold};\n    margin-right:  ${theme.gridUnit * 3}px;\n    text-align: left;\n    font-size: ${theme.gridUnit * 4.5}px;\n    padding: ${theme.gridUnit * 3}px;\n    display: inline-block;\n    line-height: ${theme.gridUnit * 9}px;\n  }\n  `};\n`;\n\nfunction AllEntities() {\n  const [tagId] = useQueryParam('id', NumberParam);\n  const [tag, setTag] = useState<Tag | null>(null);\n  const [showTagModal, setShowTagModal] = useState<boolean>(false);\n  const { addSuccessToast, addDangerToast } = useToasts();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [objects, setObjects] = useState<TaggedObjects>({\n    dashboard: [],\n    chart: [],\n    query: [],\n  });\n\n  const editableTitleProps = {\n    title: tag?.name || '',\n    placeholder: 'testing',\n    onSave: (newDatasetName: string) => {},\n    canEdit: false,\n    label: t('dataset name'),\n  };\n\n  const items = [];\n  if (tag?.description) {\n    const description: Description = {\n      type: MetadataType.Description,\n      value: tag?.description || '',\n    };\n    items.push(description);\n  }\n\n  const owner: Owner = {\n    type: MetadataType.Owner,\n    createdBy: getOwnerName(tag?.created_by),\n    createdOn: tag?.created_on_delta_humanized || '',\n  };\n  items.push(owner);\n\n  const lastModified: LastModified = {\n    type: MetadataType.LastModified,\n    value: tag?.changed_on_delta_humanized || '',\n    modifiedBy: getOwnerName(tag?.changed_by),\n  };\n  items.push(lastModified);\n\n  const fetchTaggedObjects = () => {\n    setLoading(true);\n    if (!tag) {\n      addDangerToast('Error tag object is not referenced!');\n      return;\n    }\n    fetchObjectsByTagIds(\n      { tagIds: [tag?.id] || '', types: null },\n      (data: TaggedObject[]) => {\n        const objects = { dashboard: [], chart: [], query: [] };\n        data.forEach(function (object) {\n          const object_type = object.type;\n          objects[object_type].push(object);\n        });\n        setObjects(objects);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast('Error Fetching Tagged Objects');\n        setLoading(false);\n      },\n    );\n  };\n\n  const fetchTag = (tagId: number) => {\n    fetchSingleTag(\n      tagId,\n      (tag: Tag) => {\n        setTag(tag);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast(t('Error Fetching Tagged Objects'));\n        setLoading(false);\n      },\n    );\n  };\n\n  useEffect(() => {\n    // fetch single tag met\n    if (tagId) {\n      setLoading(true);\n      fetchTag(tagId);\n    }\n  }, [tagId]);\n\n  useEffect(() => {\n    if (tag) fetchTaggedObjects();\n  }, [tag]);\n\n  if (isLoading) return <Loading />;\n  return (\n    <AllEntitiesContainer>\n      <TagModal\n        show={showTagModal}\n        onHide={() => {\n          setShowTagModal(false);\n        }}\n        editTag={tag}\n        addSuccessToast={addSuccessToast}\n        addDangerToast={addDangerToast}\n        refreshData={() => {\n          fetchTaggedObjects();\n          if (tagId) fetchTag(tagId);\n        }}\n      />\n      <AllEntitiesNav>\n        <PageHeaderWithActions\n          additionalActionsMenu={<></>}\n          editableTitleProps={editableTitleProps}\n          faveStarProps={{ itemId: 1, saveFaveStar: () => {} }}\n          showFaveStar={false}\n          showTitlePanelItems\n          titlePanelAdditionalItems={\n            <div css={additionalItemsStyles}>\n              <MetadataBar items={items} tooltipPlacement=\"bottom\" />\n            </div>\n          }\n          rightPanelAdditionalItems={\n            <>\n              <Button\n                data-test=\"bulk-select-action\"\n                buttonStyle=\"secondary\"\n                onClick={() => setShowTagModal(true)}\n                showMarginRight={false}\n              >\n                {t('Edit Tag')}{' '}\n              </Button>\n            </>\n          }\n          menuDropdownProps={{\n            disabled: true,\n          }}\n          showMenuDropdown={false}\n        />\n      </AllEntitiesNav>\n      <div className=\"entities\">\n        <AllEntitiesTable\n          search={tag?.name || ''}\n          setShowTagModal={setShowTagModal}\n          objects={objects}\n        />\n      </div>\n    </AllEntitiesContainer>\n  );\n}\n\nexport default withToasts(AllEntities);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["StyledTag","styled","AntdTag","theme","gridUnit","typography","sizes","s","Tag","name","id","index","onDelete","editable","onClick","toolTipTitle","tagDisplay","useMemo","length","slice","___EmotionJSX","React","Tooltip","title","key","closable","onClose","handleClose","color","role","href","target","rel","TagsDiv","div","TagsList","tags","maxTags","tempMaxTags","setTempMaxTags","useState","handleDelete","tagsIsLong","extraTags","className","map","tag","expand","undefined","t","join","collapse","StyledModalBody","TaggableResources","TagModal","show","onHide","editTag","refreshData","addSuccessToast","addDangerToast","clearOnHide","dashboardsToTag","setDashboardsToTag","chartsToTag","setChartsToTag","savedQueriesToTag","setSavedQueriesToTag","tagName","setTagName","description","setDescription","isEditMode","modalTitle","clearTagForm","useEffect","resourceMap","Dashboard","Chart","SavedQuery","updateResourceOptions","type","resourceOptions","push","value","label","fetchObjectsByTagIds","tagIds","types","data","forEach","error","loadData","async","search","page","pageSize","columns","filterColumn","orderColumn","endpoint","queryParams","rison","filters","col","opr","order_column","json","SupersetClient","get","result","count","item","totalCount","handleOptionChange","resource","Modal","footer","Button","buttonStyle","onSave","dashboards","dash","charts","chart","savedQueries","q","put","jsonPayload","objects_to_tag","then","catch","err","message","post","FormLabel","Input","onChange","ev","placeholder","Divider","AsyncSelect","ariaLabel","mode","options","header","allowClear","AllEntitiesTableContainer","m","weights","medium","AllEntitiesTable","setShowTagModal","objects","showListViewObjs","dashboard","query","renderTable","o","url","modified","moment","changed_on","fromNow","owners","TableView","emptyWrapperType","EmptyWrapperType","Small","accessor","Header","Cell","row","original","filter","disableSortBy","FacePile","users","size","EmptyStateBig","image","buttonAction","buttonText","additionalItemsStyles","css","AllEntitiesContainer","colors","grayscale","light4","base","AllEntitiesNav","light5","bold","withToasts","tagId","useQueryParam","NumberParam","setTag","showTagModal","useToasts","isLoading","setLoading","setObjects","editableTitleProps","newDatasetName","canEdit","items","MetadataType","Description","owner","Owner","createdBy","getOwnerName","created_by","createdOn","created_on_delta_humanized","lastModified","LastModified","changed_on_delta_humanized","modifiedBy","changed_by","fetchTaggedObjects","object","object_type","fetchTag","fetchSingleTag","Loading","PageHeaderWithActions","additionalActionsMenu","faveStarProps","itemId","saveFaveStar","showFaveStar","showTitlePanelItems","titlePanelAdditionalItems","MetadataBar","tooltipPlacement","rightPanelAdditionalItems","showMarginRight","menuDropdownProps","disabled","showMenuDropdown","first_name","last_name"],"sourceRoot":""}