language = "R"
parent = "r.devtools"
name = "roxygen2"
title = "roxygen2"


[basic]
section = "Basic documentation"

[basic.title]
action = "Title"
code = "@title Title here"

[basic._description]
action = "Description"
code = "@description Description here"

[basic.param]
action = "Parameter"
code = "@param data The dataset"

[basic.dotparam]
action = "Dot parameters"
code = "@param ... Additional arguments"

[basic.return]
action = "Return"
code = "@return Return value description here"

[basic.slot]
action = "Class slot"
code = "@slot slotName Description here"

[basic._details]
action = "Details"
code = "@details Details here"

[basic.note]
action = "Note"
code = "@note Notes here"

[basic.format]
action = "Data format"
code = "@format Format description here"


[format]
section = "Text formatting"

[format.md]
action = "Enable markdown"
code = "@md"

[format.emph]
action = "Emphasis"
code = "_wow_"

[format.bold]
action = "Bold"
code = "*wow*"

[format.eq]
action = "In-line equation"
code = "\\eqn{a + b}"

[format.deq]
action = "Display equation"
code = "\\deqn{a + b}"

[format._code]
action = "Code"
code = "`mu <- mean(data)`"

[format._code.2]
code = "\\code{mu <- mean(data)}"

[format.codeblock]
action = "Code block"
code = """
```
mu <- mean(data)
```
"""

[format.monospace]
action = "Monospace font (looks like code)"
code = """
\\preformatted{
    text
}
"""

[format.pkg]
action = "Package name"
code = "\\pkg{stats}"

[format.list.unordered]
action = "Unordered list"
code = """
\\itemize{
    \\item Option A
    \\item Option B
}
"""

[format.list.ordered]
action = "Ordered list"
code = """
\\enumerate{
    \\item First item
    \\item Second item
}
"""

[format.list.named]
action = "Named list"
code = """
\\describe{
    \\item{Opt A}{Describe option A}<
    \\item{Opt B}{Describe option B}
}
"""

[format.table]
action = "Table"
code = "?"
details = "Use markdown?"

[format._details._section]
action = "Sections"
code = """
@details First part
@details Second part (will be a new section)
"""

[format._section]
action = "Arbitrary sections"
code = """
@section Title:
Text here
"""

[format.subsection]
action = "Subsections"
code = """
@details
## This is a subsection
With text
#### Subsubsection here
With text
"""


[format.link]
section = "Link"

[format.link.url]
action = "Website"
code = "<https://r-project.org>"

[format.link.url.label]
action = "With different text"
code = "[text](link)"

[format.link.internal.topic]
action = "To internal topic defined by @name _name_"
code = "[name]"

[format.link.pkg.topic]
action = "To external package"
code = "[stats][stats-package]"

[format.link.pkg.fun]
action = "To external package function"
code = "[stats::predict]"

[format.link.fun]
action = "To internal or global function"
code = "[predict()]"

[format.link.fun.pkg]
action = "To package function"
code = "[stats::predict()]"

[format.link.fun.pkg.label]
action = "To function with different text"
code = "[fancyName()][stats::predict()]"

[format.link.class]
action = "To class"
code = "[Time]"

[format.link.class.ext]
action = "To external class"
code = "[stats::Time]"

[format.link.s4]
action = "To S4 class"
code = "\\linkS4class{lcModel}"

[format.link.special]
action = "With special characters"
code = "\\code{\\link[magrittr]{\\%>\\%}}"

[format.link.seealso]
action = "See-also"
code = "@seealso [mean] [stats::median]"

[format.link.seealso.vignette]
action = "See-also vignette"
code = "@seealso browseVignettes('roxygen2')"

[format.link.family]
action = "Family"
code = "@family sharedNames"

[format.link._source]
action = "Specify source"
code = "@source This dataset was generated using [generateData]"

[format.link.refs]
action = "References"
code = """
@references
\\insertRef{benaglia2009mixtools}{latrend}
"""

[format.link.email]
action = "E-mail"
code = "\\email{example@@example.com}"


[examples]
section = "Examples"
description = "Documenting code examples"

[examples._code]
action = "Examples"
code = """
@examples
1 + 1
mean(1:9)
"""

[examples.dontrun]
action = "Examples that should not be run"
code = """
@examples
1 + 1
\\dontrun{
    stop('oops')
}
"""

[examples.donttest]
action = "Examples that should not be tested"
code = """
@examples
\\donttest{
    stop('oops')
}
"""

[examples.interactive]
action = "Examples for interactive usage only"
code = """
@examples
if interactive()
    browseURL("https://roxygen2.r-lib.org")
"""


[dynamic]
section = "Dynamic content"

[dynamic._code]
action = "In-line code evaluation"
code = "`r getRversion()`"
details = "Evaluated during every roxygenize call"

[dynamic.codeblock]
action = "Code block evaluation"
code = """
```{r}
1 + 1
```
"""
details = "Code blocks cannot refer to each other"

[dynamic.figure]
action = "Generate figure"
code = """
```{r iris-pairs-plot}
pairs(iris[1:4])[unclass(iris$Species)])
```
"""

[dynamic.doc]
action = "Dynamic documentation"
code = "![image](https://example.com)"


[generate]
section = "Generating documentation"



[topic]
section = "Topics"

[topic.skip]
action = "Don't generate topic"
code = "@noRd"

[topic.new]
action = "Create stand-alone topic"
code = """
@name docname
@title Topic title
NULL
"""

[topic.pkg]
action = "Package topic"
code = """
@details
Package documentation here.
@keywords internal
"_PACKAGE"
"""

[topic._name]
action = "Topic name"
code = "@name simpleName"

[topic.file]
action = "Topic file name"
code = "@rdname simpleName"

[topic.order]
action = "Specify doc inclusion order"
code = "@order 1"
details = "Then @order 2 for the second doc"

[topic.alias]
action = "Define alias"
code = "@aliases shortName"

[topic.s4.alias]
action = "Define alias for S4 method"
code = "@aliases predictForCluster,lcModel-method"

[topic.inherit]
action = "Inherit doc"
code = "@inherit docName"

[topic.inherit.com]
action = "Inherit doc components"
code = "@inherit docName details return"

[topic.inherit._section]
action = "Inherit section"
code = "@inheritSection docName Section title"

[topic.inherit.param]
action = "Inherit param descriptions from another internal function"
code = "@inheritParams internalFun"

[topic.inherit.param.pkg]
action = "Inherit param descriptions from an external function"
code = "@inheritParams stats::predict"

[topic.inherit.dotparam]
action = "Inherit dot parameters"
code = "@inheritDotParams"

[topic.hide]
action = "Hide documentation"
code = "@keywords internal"


[namespace]
section = "Namespace generation"

[namespace.import.pkg]
action = "Import package"
code = "@import stats"

[namespace.import.pkgs]
action = "Import packages"
code = "@import stats splines"

[namespace.import.funs]
action = "Import function(s) from package"
code = "@importFrom stats predict fitted"

[namespace.import.s3]
action = "Import S3 generic"
code = "@importFrom pkg generic"

[namespace.import.s4]
action = "Import S4 classes from package"
code = "@importClassesFrom stats Time"

[namespace.import.s4.methods]
action = "Import S4 methods from package"
code = "@importMethodsFrom stats time time2"

[namespace.collate]
action = "Collate / ensure other R files are loaded first"
code = "@include first.R second.R"

[namespace.export.fun]
action = "Export function"
code = "@export"

[namespace.export.s4]
action = "Export class and methods"
code = """
@export
setClass(â€¦)
"""

[namespace.export.class]
action = "Export class"
code = "@exportClass lcModel"

[namespace.export.method]
action = "Export class method"
code = "@exportMethod evaluate"


[generate.docs]
action = "Generate docs"
code = "roxygen2::roxygenise()"
details = "Ctrl+Shift+D"

[generate.clean]
action = "Clean files, then generate docs"
code = "roxygen2::roxygenise(clean = TRUE)"
