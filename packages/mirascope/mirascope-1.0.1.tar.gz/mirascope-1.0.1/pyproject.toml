[tool.poetry]
name = "mirascope"
version = "1.0.1"
description = "LLM abstractions that aren't obstructions"
license = "MIT"
authors = [
    "William Bakst <william@mirascope.io>",
    "Brendan Kao <brendan@mirascope.io>",
]
readme = "README.md"
packages = [{ include = "mirascope" }]
repository = "https://github.com/Mirascope/mirascope"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = "^2.7.4"
docstring-parser = ">=0.15,<1.0"
jiter = "^0.5.0"

# A list of optional dependencies that are required for certain features
anthropic = { version = ">=0.29.0,<1.0.0", optional = true }
cohere = { version = "^5.5.8", optional = true }
google-generativeai = { version = ">=0.4.0,<1.0.0", optional = true }
groq = { version = "^0.9.0", optional = true }
tenacity = { version = "^8.4.2", optional = true }
hyperdx-opentelemetry = { version = "^0.1.0", optional = true }
langfuse = { version = "^2.30.0", optional = true }
litellm = { version = "^1.41.4", optional = true }
logfire = { version = ">=0.41.0,<1.0.0", optional = true }
mistralai = { version = "^0.4.2", optional = true }
openai = { version = "^1.6.0", optional = true }
opentelemetry-api = { version = "^1.22.0", optional = true }
opentelemetry-sdk = { version = "^1.22.0", optional = true }
pillow = { version = "^10.4.0", optional = true }

[tool.poetry.extras]
anthropic = ["anthropic"]
cohere = ["cohere"]
gemini = ["google-generativeai", "pillow"]
groq = ["groq"]
tenacity = ["tenacity"]
hyperdx = ["hyperdx-opentelemetry"]
langfuse = ["langfuse"]
litellm = ["litellm", "openai"]
logfire = ["logfire"]
mistral = ["mistralai"]
openai = ["openai"]
opentelemetry = ["opentelemetry-api", "opentelemetry-sdk"]
all = [
    "google-generativeai",
    "openai",
    "tenacity",
    "hyperdx",
    "langfuse",
    "logfire",
    "opentelemetry",
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pyright = "^1.1.372"
ruff = "^0.4.9"
pytest-asyncio = "^0.23.7"
pytest-cov = "^4.1.0"

[tool.poetry.group.docs.dependencies]
mike = "^2.0.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.28"
mkdocstrings = ">0.25.1,<1.0.0"
mkdocstrings-python = "^1.10.5"
black = "^24.8.0"


[tool.poetry.group.beta.dependencies]
weaviate-client = "^4.6.5"
chromadb = "^0.5.4"
pinecone-client = "^4.1.2"


[tool.poetry.group.examples.dependencies]
scikit-learn = "^1.5.1"
duckduckgo-search = "^6.2.6"
requests = "^2.32.3"
beautifulsoup4 = "^4.12.3"
matplotlib = "^3.9.1"
networkx = "^3.2.1"
pandas = "^2.2.2"
llama-index = "^0.10.65"
llama-index-llms-ollama = "^0.2.2"
llama-index-embeddings-huggingface = "^0.2.3"
slack-bolt = "^1.20.0"
sqlmodel = "^0.0.21"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
exclude = ["mirascope/beta"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
