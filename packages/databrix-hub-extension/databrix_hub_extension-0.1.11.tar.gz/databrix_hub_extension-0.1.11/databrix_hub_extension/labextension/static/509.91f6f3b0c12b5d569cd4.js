"use strict";(self.webpackChunkdatabrix_hub_extension=self.webpackChunkdatabrix_hub_extension||[]).push([[509],{509:(e,t,o)=>{o.r(t),o.d(t,{default:()=>s});var n=o(974),i=o(607),a=o(605);function r(){window.location.href="https://databrix.org"}const s=[{id:"databrix-hub-extension:connectionlost",description:"Provides a service to be notified when the connection to the hub server is lost.",requires:[n.JupyterFrontEnd.IPaths,a.ITranslator],optional:[n.JupyterLab.IInfo],activate:(e,t,o,n)=>{const a=o.load("jupyterlab");return async(e,t)=>{const o=await(0,i.showDialog)({title:a.__("Server unavailable or unreachable"),body:a.__("Your server is not running.\nYou have been inactive for a long time, or Jupyterhub has shut down your server.\nPlease Login again!"),buttons:[i.Dialog.okButton({label:a.__("Restart")})]});n&&(n.isConnected=!0),o.button.accept&&(window.location.href="")}},autoStart:!0,provides:n.IConnectionLost},{id:"idle-culler-warning",autoStart:!0,requires:[a.ITranslator],activate:(e,t)=>{const o=t.load("jupyterlab");let n,a;console.log("JupyterLab extension idle-culler-warning is activated!");const s=()=>{n&&(clearTimeout(n),clearTimeout(a)),n=window.setTimeout((async()=>{(await(0,i.showDialog)({title:o.__("Are you still online?"),body:o.__("Your session will be stopped if no activity is detected in the next minute."),buttons:[i.Dialog.okButton({label:o.__("YES")})]})).button.accept&&(clearTimeout(n),console.log("User is still online."))}),6e4),a=window.setTimeout(r,12e4)};window.addEventListener("mousemove",s),window.addEventListener("keydown",s),window.addEventListener("click",s),window.addEventListener("scroll",s)}}]}}]);