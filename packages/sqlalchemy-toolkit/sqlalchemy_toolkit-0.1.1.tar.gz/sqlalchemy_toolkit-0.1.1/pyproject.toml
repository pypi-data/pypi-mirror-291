[tool.poetry]
name = "sqlalchemy-toolkit"
version = "0.1.1"
description = "Simplify SQLAlchemy 2.0+ usage."
authors = ["Javier Valero Cejudo <javalce29@gmail.com>"]
readme = "README.md"
repository = "https://github.com/javalce/sqlalchemy-toolkit"
homepage = "https://github.com/javalce/sqlalchemy-toolkit"
license = "MIT"
keywords = ["sqlalchemy"]

[tool.poetry.dependencies]
python = "^3.8"
sqlalchemy = ">=2.0.0,<2.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
mypy = "^1.9.0"
black = "^24.4.0"
ruff = "^0.3.7"
coverage = { extras = ["toml"], version = ">=6.2,<8.0" }
fastapi = "^0.110.1"
httpx = "^0.27.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
parallel = true
source = ["tests", "sqlalchemy_repository"]
context = '${CONTEXT}'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.8"
strict = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
# "__init__.py" = ["F401"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
