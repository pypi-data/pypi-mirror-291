{"version":3,"file":"lib_index_js.4e04db1b3d4f4d7407af.js","mappings":"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","sources":["webpack://jupyterlab-gridwidth/./src/index.ts"],"sourcesContent":["/*\n * for attaching keybindings later on, see\n * https://towardsdatascience.com/how-to-customize-jupyterlab-keyboard-shortcuts-72321f73753d\n */\n\n/* eslint-disable prettier/prettier */\n\nimport { Menu } from '@lumino/widgets'\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application'\nimport { ICommandPalette, ToolbarButton } from '@jupyterlab/apputils'\nimport { INotebookTracker } from '@jupyterlab/notebook'\nimport { ISettingRegistry } from '@jupyterlab/settingregistry'\nimport { Cell } from '@jupyterlab/cells'\n\nimport { Scope, apply_on_cells } from 'jupyterlab-celltagsclasses'\nimport { md_toggle_multi } from 'jupyterlab-celltagsclasses'\n\nconst PLUGIN_ID = 'jupyterlab-gridwidth:plugin'\n\nconst ALL_GRIDWIDTHS = [\n  '1-2',\n  '1-3',\n  '2-3',\n  '1-4',\n  '2-4',\n  '3-4',\n  '1-5',\n  '2-5',\n  '3-5',\n  '4-5',\n  '1-6',\n  '2-6',\n  '3-6',\n  '4-6',\n  '5-6',\n]\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker, ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry\n  ) => {\n    console.log('extension jupyterlab-gridwidth is activating')\n\n    const adjust_windowing_mode = () => {\n      // force notebook windowing-mode to 'defer'\n      // will be done - or not, depending on turn_off_windowing_mode\n      // once our settings are loaded\n      settingRegistry.load('@jupyterlab/notebook-extension:tracker').then(\n        (nbSettings: ISettingRegistry.ISettings) => {\n          const former = nbSettings.get('windowingMode').composite as string\n          if (former === 'full') {\n            nbSettings.set('windowingMode', 'defer'),\n            console.warn('jupyterlab-gridwidth: windowing mode FORCED back to \"defer\"')\n          } else {\n            console.log(`jupyterlab-gridwidth: windowing mode already ${former} - unchanged`)\n          }\n        },\n        (err: Error) =>\n            console.error(`jupyterlab-gridwidth: Could not set windowing mode: ${err}`)\n      )\n    }\n\n    let command\n\n    // gridwidth-1-2..gridwidth-1-6\n    const ALL_GRIDWIDTHS_FULL = ALL_GRIDWIDTHS.map(\n      gridwidth => `gridwidth-${gridwidth}`\n    )\n    for (const gridwidth of ALL_GRIDWIDTHS) {\n      const [num, den] = gridwidth.split('-')\n      command = `gridwidth:toggle-${num}-${den}`\n      app.commands.addCommand(command, {\n        label: `Toogle Cell to ${num}/${den} of Full Width`,\n        execute: () =>\n          apply_on_cells(notebookTracker, Scope.Multiple, (cell: Cell) => {\n            md_toggle_multi(\n              cell,\n              'tags',\n              `gridwidth-${gridwidth}`,\n              ALL_GRIDWIDTHS_FULL\n            )\n          })\n      })\n      palette.addItem({ command, category: 'gridwidth' })\n      app.commands.addKeyBinding({\n        command,\n        keys: [`Alt ${num}`, `Alt ${den}`],\n        selector: '.jp-Notebook'\n      })\n    }\n    // a shortcut to cancel all gridwidths\n    command = 'gridwidth:cancel'\n    app.commands.addCommand(command, {\n      label: 'Restore Full Cell Width',\n      execute: () =>\n        apply_on_cells(notebookTracker, Scope.Multiple, (cell: Cell) => {\n          md_toggle_multi(cell, 'tags', '', ALL_GRIDWIDTHS_FULL)\n        })\n    })\n    palette.addItem({ command, category: 'gridwidth' })\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Alt 0'],\n      selector: '.jp-Notebook'\n    })\n\n    notebookTracker.widgetAdded.connect((tracker, panel) => {\n      let button: ToolbarButton | undefined\n\n      function loadSetting(setting: ISettingRegistry.ISettings): void {\n        // Read the settings and convert to the correct type\n        const show_toolbar_button = setting.get('show_toolbar_button')\n          .composite as boolean\n\n        // actually this is typed as MenuBar\n        const menubar = panel.toolbar\n\n        if (show_toolbar_button) {\n          if (button) {\n            console.debug('gridwidth: button already on')\n            return\n          }\n          console.debug('gridwidth: adding button', panel.content.node)\n          button = new CellWidthMenu(app, tracker).button\n          menubar.insertItem(10, 'gridWidth', button)\n        } else {\n          if (button === undefined) {\n            console.debug('gridwidth: button already off')\n            return\n          }\n          console.debug('gridwidth: disposing button', panel.content.node)\n          button.dispose()\n          button = undefined\n        }\n        const windowing_mode_defer = setting.get('windowing_mode_defer')\n          .composite as boolean\n        if (windowing_mode_defer) {\n          adjust_windowing_mode()\n        }\n      }\n\n      Promise.all([app.restored, settingRegistry.load(PLUGIN_ID)]).then(\n        ([_, setting]) => {\n          loadSetting(setting)\n          setting.changed.connect(loadSetting)\n        }\n      )\n    })\n  }\n}\n\n// a lumino menu & a toolbar button to invoke the menu\nclass CellWidthMenu {\n  private menuOpen: boolean\n  private preventOpen: boolean\n  public button: ToolbarButton\n\n  constructor(app: JupyterFrontEnd, notebookTracker: INotebookTracker) {\n    this.menuOpen = false\n    this.preventOpen = false\n    this.button = this.createButton(app, notebookTracker)\n  }\n\n  createButton(app: JupyterFrontEnd, notebookTracker: INotebookTracker) {\n    // create a lumino menu\n    const menu = new Menu({ commands: app.commands })\n    menu.title.label = 'Cell Width'\n\n    ALL_GRIDWIDTHS.forEach(gridwidth => {\n      const command = `gridwidth:toggle-${gridwidth}`\n      menu.addItem({ command })\n    })\n\n    menu.addItem({ type: 'separator' })\n    menu.addItem({ command: 'gridwidth:cancel' })\n\n    /** About to Close Event: When the aboutToClose event of the menu is emitted\n     * (which happens just before the menu is actually closed),\n     * the this.menuOpen property is set to false to indicate the menu is not open.\n     * Simultaneously, this.preventOpen is set to true to prevent the menu from immediately reopening due to subsequent events.\n     * A setTimeout call is used to reset this.preventOpen to false in the next event loop cycle. */\n    menu.aboutToClose.connect(() => {\n      this.menuOpen = false\n      this.preventOpen = true\n      // console.log('menu about to close event');\n      setTimeout(() => {\n        this.preventOpen = false\n        // console.log('menu successfully closed and can be opened again.');\n      }, 0)\n      // console.log('menu is waiting to be closed... prevent it to open...');\n    })\n\n    // create a toolbar button to envok the menu\n    const button = new ToolbarButton({\n      // the icon is similar to the previous split-cell extension button icon\n      iconClass: 'fa fa-arrows-h',\n      /** Button Click Event: When the toolbar button is clicked, the click event handler checks the state of this.menuOpen.\n       * The this.menuOpen is then set to true, indicating the menu is now open.\n       * If it's true, the menu is currently open and should be closed.\n       * If this.menuOpen is false and this.preventOpen is also false, the menu is not open and should be opened.\n       * The rect object represents the button's position, and menu.open positions the menu at the bottom-left of the button.*/\n      onClick: () => {\n        // console.log('button clicked');\n        if (this.menuOpen) {\n          // Actually not envoked most of the time, no need to manually close the menu here,\n          // because the menu will be closed automatically when this onClick event emits.\n          menu.close()\n          // console.log('menu closed');\n        } else if (!this.preventOpen) {\n          const rect = button.node.getBoundingClientRect()\n          menu.open(rect.left, rect.bottom)\n          this.menuOpen = true\n          // console.log('menu opened');\n        }\n      },\n      tooltip: 'Toogle Cell Width'\n    })\n    return button\n  }\n}\n\nexport default plugin\n"],"names":[],"sourceRoot":""}