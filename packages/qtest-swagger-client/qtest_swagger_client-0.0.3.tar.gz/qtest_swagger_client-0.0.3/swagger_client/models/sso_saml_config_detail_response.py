# coding: utf-8

"""
    qTest Manager API Version 11.0.0 - 2023.6

    qTest Manager API Version 11.0.0 - 2023.6  # noqa: E501

    OpenAPI spec version: 11.0.0 - 2023.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class SSOSamlConfigDetailResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'is_activated': 'bool',
        'auth_type': 'str',
        'name': 'str',
        'metadata_link': 'str',
        'auto_create_user': 'bool',
        'metadata_filename': 'str'
    }

    attribute_map = {
        'id': 'id',
        'is_activated': 'is_activated',
        'auth_type': 'auth_type',
        'name': 'name',
        'metadata_link': 'metadata_link',
        'auto_create_user': 'auto_create_user',
        'metadata_filename': 'metadata_filename'
    }

    def __init__(self, id=None, is_activated=False, auth_type=None, name=None, metadata_link=None, auto_create_user=False, metadata_filename=None, _configuration=None):  # noqa: E501
        """SSOSamlConfigDetailResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._is_activated = None
        self._auth_type = None
        self._name = None
        self._metadata_link = None
        self._auto_create_user = None
        self._metadata_filename = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if is_activated is not None:
            self.is_activated = is_activated
        if auth_type is not None:
            self.auth_type = auth_type
        if name is not None:
            self.name = name
        if metadata_link is not None:
            self.metadata_link = metadata_link
        if auto_create_user is not None:
            self.auto_create_user = auto_create_user
        if metadata_filename is not None:
            self.metadata_filename = metadata_filename

    @property
    def id(self):
        """Gets the id of this SSOSamlConfigDetailResponse.  # noqa: E501


        :return: The id of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SSOSamlConfigDetailResponse.


        :param id: The id of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def is_activated(self):
        """Gets the is_activated of this SSOSamlConfigDetailResponse.  # noqa: E501


        :return: The is_activated of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_activated

    @is_activated.setter
    def is_activated(self, is_activated):
        """Sets the is_activated of this SSOSamlConfigDetailResponse.


        :param is_activated: The is_activated of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: bool
        """

        self._is_activated = is_activated

    @property
    def auth_type(self):
        """Gets the auth_type of this SSOSamlConfigDetailResponse.  # noqa: E501

        Type of authentication system  # noqa: E501

        :return: The auth_type of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this SSOSamlConfigDetailResponse.

        Type of authentication system  # noqa: E501

        :param auth_type: The auth_type of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["INTERNAL", "LDAP", "SSO_SAML2", "TUA_OPENID"]  # noqa: E501
        if (self._configuration.client_side_validation and
                auth_type not in allowed_values):
            raise ValueError(
                "Invalid value for `auth_type` ({0}), must be one of {1}"  # noqa: E501
                .format(auth_type, allowed_values)
            )

        self._auth_type = auth_type

    @property
    def name(self):
        """Gets the name of this SSOSamlConfigDetailResponse.  # noqa: E501


        :return: The name of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SSOSamlConfigDetailResponse.


        :param name: The name of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def metadata_link(self):
        """Gets the metadata_link of this SSOSamlConfigDetailResponse.  # noqa: E501

        Metadata link of SSO system  # noqa: E501

        :return: The metadata_link of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._metadata_link

    @metadata_link.setter
    def metadata_link(self, metadata_link):
        """Sets the metadata_link of this SSOSamlConfigDetailResponse.

        Metadata link of SSO system  # noqa: E501

        :param metadata_link: The metadata_link of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: str
        """

        self._metadata_link = metadata_link

    @property
    def auto_create_user(self):
        """Gets the auto_create_user of this SSOSamlConfigDetailResponse.  # noqa: E501

        Auto create user or not  # noqa: E501

        :return: The auto_create_user of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: bool
        """
        return self._auto_create_user

    @auto_create_user.setter
    def auto_create_user(self, auto_create_user):
        """Sets the auto_create_user of this SSOSamlConfigDetailResponse.

        Auto create user or not  # noqa: E501

        :param auto_create_user: The auto_create_user of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: bool
        """

        self._auto_create_user = auto_create_user

    @property
    def metadata_filename(self):
        """Gets the metadata_filename of this SSOSamlConfigDetailResponse.  # noqa: E501


        :return: The metadata_filename of this SSOSamlConfigDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._metadata_filename

    @metadata_filename.setter
    def metadata_filename(self, metadata_filename):
        """Sets the metadata_filename of this SSOSamlConfigDetailResponse.


        :param metadata_filename: The metadata_filename of this SSOSamlConfigDetailResponse.  # noqa: E501
        :type: str
        """

        self._metadata_filename = metadata_filename

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SSOSamlConfigDetailResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SSOSamlConfigDetailResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SSOSamlConfigDetailResponse):
            return True

        return self.to_dict() != other.to_dict()
