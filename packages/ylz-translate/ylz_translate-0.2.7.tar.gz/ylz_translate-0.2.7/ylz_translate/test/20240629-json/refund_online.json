{  "openapi": "3.0.0",  "x-idocs": "1.0.0",  "info": {    "title": "idocs api document",    "version": "1.0.0",    "description": "<p><span style=\"color: rgb(51,51,51);font-size: 14px;\">Use this API to initiate a refund against a successful payment. The refund can be full or partial. A transaction can have multiple refunds as long as the total refund amount is less than or equal to the original transaction amount. If </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">the refund request is out of </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">the refund window </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">determined in the contract</span><span style=\"color: rgb(51,51,51);font-size: 14px;\">, the refund request will be declined.</span></p>\n<p></p>\n<p><span style=\"color: rgb(51,51,51);font-size: 14px;\"><strong>Note</strong>: Use the same <em>refundRequestId</em> field to retry a refund in case of timeout or when the returned <em>resultStatus</em> is </span><span style=\"color: rgb(51,51,51);background-color: rgb(241,241,241);font-size: 14px;font-family: monospace;\">U</span><span style=\"color: rgb(51,51,51);font-size: 14px;\">. The <em>refundRequestId</em> field is designed to be idempotent.</span>&nbsp;</p>\n<p></p>\n<p></p>\n<h1 style=\"margin-left:0px;\"><span style=\"font-size: 28px;\">Structure</span></h1>\n<p style=\"text-align:left;\">A message consists of a header and body. The following sections are focused on the body structure. For the header structure, see£º&nbsp;</p>\n<ul>\n<li><a href=\"https://global.alipay.com/docs/ac/ams/api_fund#ML5ur\" target=\"_blank\">Request header</a></li>\n<li><a href=\"https://global.alipay.com/docs/ac/ams/api_fund#WWH90\" target=\"_blank\">Response header</a></li>\n</ul>\n<p style=\"margin-left:0px;\"><br></p>\n<p style=\"text-align:left;\"><strong>Note</strong>: Set the data type of each field (except array) as String. This means that you must use double quotation marks (\" \") to enclose the field value. Examples:</p>\n<ul>\n<li>If the data type of a field is Integer and its value is 20, set it as \"20\".&nbsp;</li>\n<li>If the data type of a field is Boolean and its value is <span style=\"background-color: rgb(241,241,241);\">true</span>, set it as \"true\".&nbsp;</li>\n</ul>\n<p></p>\n<p></p>\n",    "descriptionLake": "<p><span style=\"color: rgb(51,51,51);font-size: 14px;\">Use this API to initiate a refund against a successful payment. The refund can be full or partial. A transaction can have multiple refunds as long as the total refund amount is less than or equal to the original transaction amount. If </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">the refund request is out of </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">the refund window </span><span style=\"color: rgb(51,51,51);font-size: 14px;\">determined in the contract</span><span style=\"color: rgb(51,51,51);font-size: 14px;\">, the refund request will be declined.</span></p>\n<p></p>\n<p><span style=\"color: rgb(51,51,51);font-size: 14px;\"><strong>Note</strong>: Use the same <em>refundRequestId</em> field to retry a refund in case of timeout or when the returned <em>resultStatus</em> is </span><span style=\"color: rgb(51,51,51);background-color: rgb(241,241,241);font-size: 14px;font-family: monospace;\">U</span><span style=\"color: rgb(51,51,51);font-size: 14px;\">. The <em>refundRequestId</em> field is designed to be idempotent.</span>&nbsp;</p>\n<p></p>\n<p></p>\n<h1 style=\"margin-left:0px;\"><span style=\"font-size: 28px;\">Structure</span></h1>\n<p style=\"text-align:left;\">A message consists of a header and body. The following sections are focused on the body structure. For the header structure, see£º&nbsp;</p>\n<ul>\n<li><a href=\"https://global.alipay.com/docs/ac/ams/api_fund#ML5ur\" target=\"_blank\">Request header</a></li>\n<li><a href=\"https://global.alipay.com/docs/ac/ams/api_fund#WWH90\" target=\"_blank\">Response header</a></li>\n</ul>\n<p style=\"margin-left:0px;\"><br></p>\n<p style=\"text-align:left;\"><strong>Note</strong>: Set the data type of each field (except array) as String. This means that you must use double quotation marks (\" \") to enclose the field value. Examples:</p>\n<ul>\n<li>If the data type of a field is Integer and its value is 20, set it as \"20\".&nbsp;</li>\n<li>If the data type of a field is Boolean and its value is <span style=\"background-color: rgb(241,241,241);\">true</span>, set it as \"true\".&nbsp;</li>\n</ul>\n<p></p>\n<p></p>\n",    "x-bizType": "GOL",    "x-titleTag": ""  },  "paths": {    "/v1/payments/refund": {      "post": {        "requestBody": {          "content": {            "application/json": {              "schema": {                "type": "object",                "properties": {                  "refundRequestId": {                    "type": "string",                    "description": "<p>The unique ID assigned by the merchant to identify a refund request.</p>\n",                    "descriptionLake": "<p>The unique ID assigned by the merchant to identify a refund request.</p>\n",                    "maxLength": 64,                    "x-descType": "String",                    "x-idempotencyDescription": "The merchant uses the refundRequestId field for idempotency control. For payment requests that are initiated with the same value of refundRequestId and reach a final status (S or F), the same result is to be returned for the request. ",                    "x-order": "0"                  },                  "paymentId": {                    "type": "string",                    "description": "<p>The unique ID assigned by Alipay for the original payment to be refunded.</p>\n",                    "descriptionLake": "<p>The unique ID assigned by Alipay for the original payment to be refunded.</p>\n",                    "maxLength": 64,                    "x-descType": "String",                    "x-order": "1"                  },                  "referenceRefundId": {                    "type": "string",                    "description": "<p>The unique ID to identify a refund, which is assigned by the merchant that directly provides services or goods to the customer.</p>\n<p>Note: Specify this field if this value is needed for internal use or reconciliation.</p>\n",                    "descriptionLake": "<p>The unique ID to identify a refund, which is assigned by the merchant that directly provides services or goods to the customer.</p>\n<p>Note: Specify this field if this value is needed for internal use or reconciliation.</p>\n",                    "maxLength": 64,                    "x-descType": "String",                    "x-order": "2"                  },                  "refundAmount": {                    "properties": {                      "currency": {                        "type": "string",                        "description": "<p>The currency used for the corresponding payment of the refund. The value is a 3-letter currency code that follows the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> standard.</p>\n",                        "descriptionLake": "<p>The currency used for the corresponding payment of the refund. The value is a 3-letter currency code that follows the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> standard.</p>\n",                        "maxLength": 3,                        "x-descType": "String",                        "x-order": "0"                      },                      "value": {                        "type": "string",                        "description": "<p><span style=\"color: var(--font-color);font-size: 14px;\">The value of the amount as a positive integer in the </span><span style=\"font-size: 14px;\">smallest currency unit</span><span style=\"color: var(--font-color);font-size: 14px;\">. For example, if the currency is USD and the amount is $1.00, set the value of this parameter to <code>100</code>; or if the currency is JPY and the amount is £¤1, set the value of this parameter to <code>1</code>. </span>&nbsp;</p>\n<p><span style=\"color: var(--font-color);font-size: 14px;\">For details about the smallest currency unit, see </span><a href=\"https://global.alipay.com/docs/ac/ref/cc#ONkIe\" target=\"_blank\">Smallest unit of the currency</a><span style=\"color: var(--font-color);font-size: 14px;\"> .</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 14px;\">For details about the minimum payment amount</span><span style=\"color: var(--font-color);font-size: 14px;\"> allowed for each payment method, see </span><a href=\"https://global.alipay.com/docs/ac/ref/cc#q9R5A\" target=\"_blank\">Minimum amount rules</a><span style=\"color: var(--font-color);font-size: 14px;\">.</span>&nbsp;</p>\n",                        "descriptionLake": "<p><span style=\"color: var(--font-color);font-size: 14px;\">The value of the amount as a positive integer in the </span><span style=\"font-size: 14px;\">smallest currency unit</span><span style=\"color: var(--font-color);font-size: 14px;\">. For example, if the currency is USD and the amount is $1.00, set the value of this parameter to <code>100</code>; or if the currency is JPY and the amount is £¤1, set the value of this parameter to <code>1</code>. </span>&nbsp;</p>\n<p><span style=\"color: var(--font-color);font-size: 14px;\">For details about the smallest currency unit, see </span><a href=\"https://global.alipay.com/docs/ac/ref/cc#ONkIe\" target=\"_blank\">Smallest unit of the currency</a><span style=\"color: var(--font-color);font-size: 14px;\"> .</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 14px;\">For details about the minimum payment amount</span><span style=\"color: var(--font-color);font-size: 14px;\"> allowed for each payment method, see </span><a href=\"https://global.alipay.com/docs/ac/ref/cc#q9R5A\" target=\"_blank\">Minimum amount rules</a><span style=\"color: var(--font-color);font-size: 14px;\">.</span>&nbsp;</p>\n",                        "x-descType": "Integer",                        "x-range": "1 - unlimited",                        "x-warning": "<p><span style=\"font-size: 14px;\">Due to the currency practices in Indonesia, when the currency is IDR, round the amount with banker's rounding and fix the last two digits of this parameter as <code>00.</code></span>&nbsp;&nbsp;</p>\n",                        "x-warning-lake": "<p><span style=\"font-size: 14px;\">Due to the currency practices in Indonesia, when the currency is IDR, round the amount with banker's rounding and fix the last two digits of this parameter as <code>00.</code></span>&nbsp;&nbsp;</p>\n",                        "x-order": "1"                      }                    },                    "type": "object",                    "description": "<p>The refund amount that is initiated by the merchant.</p>\n",                    "descriptionLake": "<p>The refund amount that is initiated by the merchant.</p>\n",                    "x-descType": "Amount",                    "x-order": "3",                    "required": [                      "currency",                      "value"                    ]                  },                  "refundReason": {                    "type": "string",                    "description": "<p>The refund reason.</p>\n<p>Note: Specify this field if you want to provide the refund reason to the user and payment method.</p>\n",                    "descriptionLake": "<p>The refund reason.</p>\n<p>Note: Specify this field if you want to provide the refund reason to the user and payment method.</p>\n",                    "maxLength": 256,                    "x-descType": "String",                    "x-order": "4"                  },                  "refundNotifyUrl": {                    "type": "string",                    "description": "<div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B1%2C0%2C0%2C182%5D%2C%5B1%2C0%2C0%2C182%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"bb17e9728ce467b9f907bc6655f8b701_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin-top: 0px; margin-bottom: 16px;\"><span>The URL that is used to receive the refund result notification. The URL must be either specified in the request or set in Antom Dashboard.</span></p><p style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin-top: 0px; margin-bottom: 16px;\" data-lake-id=\"dfd28b5ea90af41b6e40e8ec0254aa46_p_1\"><span>Note: Specify this field if you want to receive an asynchronous notification of the refund result. If the refund notification URL is specified in both the request and Antom Dashboard, the value specified in the request takes precedence. </span></p></div>",                    "descriptionLake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"bb17e9728ce467b9f907bc6655f8b701_p_0\"><span>The URL that is used to receive the refund result notification. The URL must be either specified in the request or set in Antom Dashboard.</span></p><p data-lake-id=\"dfd28b5ea90af41b6e40e8ec0254aa46_p_1\" style=\"text-align: left;\"><span>Note: Specify this field if you want to receive an asynchronous notification of the refund result. If the refund notification URL is specified in both the request and Antom Dashboard, the value specified in the request takes precedence. </span></p>",                    "maxLength": 1024,                    "x-descType": "String",                    "x-warning": "",                    "x-warning-lake": "",                    "x-order": "5"                  }                },                "required": [                  "refundRequestId",                  "paymentId",                  "refundAmount"                ],                "x-idempotency": [                  "refundRequestId"                ],                "x-order": "0"              },              "examples": {                "": {                  "x-scene": [],                  "x-order": 0,                  "value": {                    "paymentId": "20181129190741010007000000XXXX",                    "refundRequestId": "20181129190741020007000000XXXX",                    "refundAmount": {                      "value": "100",                      "currency": "USD"                    }                  }                }              }            }          }        },        "responses": {          "200": {            "description": "",            "content": {              "application/json": {                "schema": {                  "type": "object",                  "properties": {                    "result": {                      "properties": {                        "resultCode": {                          "type": "string",                          "description": "<p>Result code. Possible values are listed in the Result/Error codes table on this page.</p>\n",                          "descriptionLake": "<p>Result code. Possible values are listed in the Result/Error codes table on this page.</p>\n",                          "maxLength": 64,                          "x-descType": "String",                          "x-order": "0"                        },                        "resultStatus": {                          "type": "string",                          "description": "<p>Result status. Valid values are:</p>\n<ul>\n<li><code>S</code>: Indicates that the refund succeeded.</li>\n<li><code>F</code>: Indicates that the refund failed.</li>\n<li><code>U</code>: Indicates that the refund result is unknown.&nbsp;</li>\n</ul>\n",                          "descriptionLake": "<p>Result status. Valid values are:</p>\n<ul>\n<li><code>S</code>: Indicates that the refund succeeded.</li>\n<li><code>F</code>: Indicates that the refund failed.</li>\n<li><code>U</code>: Indicates that the refund result is unknown.&nbsp;</li>\n</ul>\n",                          "x-descType": "String",                          "x-order": "1"                        },                        "resultMessage": {                          "type": "string",                          "description": "<p>Result message that explains the result code.</p>\n",                          "descriptionLake": "<p>Result message that explains the result code.</p>\n",                          "maxLength": 256,                          "x-descType": "String",                          "x-order": "2"                        }                      },                      "type": "object",                      "description": "<p>Indicates whether this API is called successfully. If this API is successfully called, the refund succeeds.</p>\n",                      "descriptionLake": "<p>Indicates whether this API is called successfully. If this API is successfully called, the refund succeeds.</p>\n",                      "x-descType": "Result",                      "x-order": "0",                      "required": [                        "resultCode",                        "resultStatus",                        "resultMessage"                      ]                    },                    "refundRequestId": {                      "type": "string",                      "description": "<p>The unique ID that is assigned by the merchant to identify a refund request.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "descriptionLake": "<p>The unique ID that is assigned by the merchant to identify a refund request.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "maxLength": 64,                      "x-descType": "String",                      "x-order": "1"                    },                    "refundId": {                      "type": "string",                      "description": "<p>The unique ID that is assigned by Alipay to identify a refund. A one-to-one correspondence between <em>refundId </em>and <em>refundRequestId</em> exists.&nbsp;</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "descriptionLake": "<p>The unique ID that is assigned by Alipay to identify a refund. A one-to-one correspondence between <em>refundId </em>and <em>refundRequestId</em> exists.&nbsp;</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "maxLength": 64,                      "x-descType": "String",                      "x-order": "2"                    },                    "paymentId": {                      "type": "string",                      "description": "<p>The unique ID assigned by Alipay for the original payment to be refunded.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "descriptionLake": "<p>The unique ID assigned by Alipay for the original payment to be refunded.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "maxLength": 64,                      "x-descType": "String",                      "x-order": "3"                    },                    "acquirerReferenceNo": {                      "type": "string",                      "description": "<p>The unique ID assigned by the non-Alipay acquirer for the transaction.</p>\n",                      "descriptionLake": "<p>The unique ID assigned by the non-Alipay acquirer for the transaction.</p>\n",                      "maxLength": 64,                      "x-descType": "String",                      "x-order": "4"                    },                    "refundAmount": {                      "properties": {                        "currency": {                          "type": "string",                          "description": "<p>The transaction currency that is specified in the contract. The value is a 3-letter currency code that follows the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> standard.</p>\n",                          "descriptionLake": "<p>The transaction currency that is specified in the contract. The value is a 3-letter currency code that follows the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> standard.</p>\n",                          "maxLength": 3,                          "x-descType": "String",                          "x-order": "0"                        },                        "value": {                          "type": "string",                          "description": "<p>The amount to charge as a positive integer in the smallest currency unit. (That is, 100 cents to charge $1.00, or 100 to charge JPY £¤100, a 0-decimal currency).</p>\n<p>#REUSE#valuenote#IDc344b6d4-f831-4bd2-adf3-d47b575d00a4#</p>\n",                          "descriptionLake": "<p>The amount to charge as a positive integer in the smallest currency unit. (That is, 100 cents to charge $1.00, or 100 to charge JPY £¤100, a 0-decimal currency).</p>\n<p>#REUSE#valuenote#IDc344b6d4-f831-4bd2-adf3-d47b575d00a4#</p>\n",                          "x-descType": "Integer",                          "x-range": "1 - unlimited",                          "x-order": "1"                        }                      },                      "type": "object",                      "description": "<p>The refund amount collected by the payer for this refund.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "descriptionLake": "<p>The refund amount collected by the payer for this refund.</p>\n<p>Note: This field is returned when the refund succeeds (the value of <em>result.resultStatus</em> is <code>S</code>).</p>\n",                      "x-descType": "Amount",                      "x-order": "5",                      "required": [                        "currency",                        "value"                      ]                    },                    "refundTime": {                      "type": "string",                      "description": "<p>The date and time when the refund reaches the state of success, failure, or unknown.</p>\n",                      "descriptionLake": "<p>The date and time when the refund reaches the state of success, failure, or unknown.</p>\n",                      "x-descType": "Datetime",                      "x-order": "6"                    },                    "grossSettlementAmount": {                      "properties": {                        "#REUSE#grossSettlementAmount#ID15b8e8e2-63af-4877-9470-f19ec0de8ef4#": {                          "x-reuseContentId": "#REUSE#grossSettlementAmount#ID15b8e8e2-63af-4877-9470-f19ec0de8ef4#",                          "x-order": "0"                        }                      },                      "type": "object",                      "description": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">The refund settlement amount, which equals the refund amount multiplied by the value of</span> <em>settlementQuote</em><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">. This field is returned when the currency exchange is predetermined and the exchange rate is locked at the time of the transaction.</span>&nbsp;</p>\n",                      "descriptionLake": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">The refund settlement amount, which equals the refund amount multiplied by the value of</span> <em>settlementQuote</em><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">. This field is returned when the currency exchange is predetermined and the exchange rate is locked at the time of the transaction.</span>&nbsp;</p>\n",                      "x-descType": "Amount",                      "x-order": "7"                    },                    "settlementQuote": {                      "properties": {                        "#REUSE#settlementQuote#IDfe1bd21c-71e0-4c71-a340-8b4bab3f593f#": {                          "x-reuseContentId": "#REUSE#settlementQuote#IDfe1bd21c-71e0-4c71-a340-8b4bab3f593f#",                          "x-order": "0"                        }                      },                      "type": "object",                      "description": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">The exchange rate between the settlement currency and transaction currency. This field is returned when</span> <em>grossSettlementAmount</em> <span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">is returned.</span>&nbsp;</p>\n",                      "descriptionLake": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">The exchange rate between the settlement currency and transaction currency. This field is returned when</span> <em>grossSettlementAmount</em> <span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">is returned.</span>&nbsp;</p>\n",                      "x-descType": "Quote",                      "x-order": "8"                    }                  },                  "required": [                    "result"                  ],                  "x-ISO8601": [                    "refundTime"                  ],                  "x-order": "0"                },                "examples": {                  "SUCCESS": {                    "x-scene": [                      "SUCCESS"                    ],                    "x-order": 0,                    "value": {                      "result": {                        "resultCode": "SUCCESS",                        "resultStatus": "S",                        "resultMessage": "Success"                      },                      "refundAmount": {                        "value": "100",                        "currency": "USD"                      },                      "refundTime": "2020-10-10T12:01:01+08:30",                      "paymentId": "20181129190741010007000000XXXX",                      "refundRequestId": "20181129190741020007000000XXXX",                      "refundId": "40181129190741020007000000XXXX"                    }                  },                  "CURRENCY_INCONSISTENT": {                    "x-scene": [                      "CURRENCY_INCONSISTENT"                    ],                    "x-order": 1,                    "value": {                      "result": {                        "resultCode": "CURRENCY_NOT_SUPPORT",                        "resultMessage": "The currency is not supported.",                        "resultStatus": "F"                      }                    }                  },                  "REFUND_LIMIT_EXCEEDED": {                    "x-scene": [                      "REFUND_LIMIT_EXCEEDED"                    ],                    "x-order": 2,                    "value": {                      "result": {                        "resultCode": "REFUND_AMOUNT_EXCEED",                        "resultMessage": "The total refund amount exceeds the payment amount.",                        "resultStatus": "F"                      }                    }                  },                  "REFUNDREQUESTID_REPEAT": {                    "x-scene": [                      "REFUNDREQUESTID_REPEAT"                    ],                    "x-order": 3,                    "value": {                      "result": {                        "resultCode": "REPEAT_REQ_INCONSISTENT",                        "resultMessage": "The amount or currency is different from the previous request.",                        "resultStatus": "F"                      }                    }                  },                  "TRANSACTION_INVALID": {                    "x-scene": [                      "TRANSACTION_INVALID"                    ],                    "x-order": 4,                    "value": {                      "result": {                        "resultCode": "PROCESS_FAIL",                        "resultMessage": "A general business failure occurred.",                        "resultStatus": "F"                      }                    }                  }                }              }            }          }        },        "x-result": [          {            "code": "SUCCESS",            "value": "S",            "message": "Success",            "action": "<p>The refund is successful, no further action is needed.</p>\n",            "actionLake": "<p>The refund is successful, no further action is needed.</p>\n"          },          {            "code": "ACCESS_DENIED",            "value": "F",            "message": "Access is denied.",            "action": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n",            "actionLake": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n"          },          {            "code": "INVALID_API",            "value": "F",            "message": "The called API is invalid or not active.",            "action": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">Contact Alipay Technical Support to resolve the issue. </span>&nbsp;</p>\n",            "actionLake": "<p><span style=\"color: rgba(4,15,36,0.85);font-size: 14px;\">Contact Alipay Technical Support to resolve the issue. </span>&nbsp;</p>\n"          },          {            "code": "CURRENCY_NOT_SUPPORT",            "value": "F",            "message": "The currency is not supported.",            "action": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n",            "actionLake": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n"          },          {            "code": "INVALID_MERCHANT_STATUS",            "value": "F",            "message": "The merchant status is abnormal because restrictions exist.",            "action": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n",            "actionLake": "<p>Contact Alipay Technical Support for detailed reasons.&nbsp;</p>\n"          },          {            "code": "KEY_NOT_FOUND",            "value": "F",            "message": "The private key or public key of Alipay or the merchant is not found.",            "action": "<div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C101%5D%2C%5B0%2C0%2C101%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"42927541bfdae49c90ad682d1e7136f9_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin-top: 0px; margin-bottom: 16px;\">Check whether the private key or public key exists. If not, upload the private key in Antom Dashboard.&nbsp;</p></div>",            "actionLake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"42927541bfdae49c90ad682d1e7136f9_p_0\">Check whether the private key or public key exists. If not, upload the private key in Antom Dashboard. </p>"          },          {            "code": "MERCHANT_BALANCE_NOT_ENOUGH",            "value": "F",            "message": "The merchant balance is insufficient.",            "action": "<p>Call the interface again after the merchant has sufficient balance. The <em>refundRequestId</em> field needs to be changed when you try again.</p>\n",            "actionLake": "<p>Call the interface again after the merchant has sufficient balance. The <em>refundRequestId</em> field needs to be changed when you try again.</p>\n"          },          {            "code": "MULTIPLE_REFUNDS_NOT_SUPPORTED",            "value": "F",            "message": "Multiple refunds are not supported because restrictions exist in the contract.",            "action": "<p>Check whether multiple refunds exist. Do not call the refund interface anymore. For each refund, o<span style=\"font-size: 14px;\">nly call the interface once</span>.&nbsp;</p>\n",            "actionLake": "<p>Check whether multiple refunds exist. Do not call the refund interface anymore. For each refund, o<span style=\"font-size: 14px;\">nly call the interface once</span>.&nbsp;</p>\n"          },          {            "code": "NO_INTERFACE_DEF",            "value": "F",            "message": "API is not defined.",            "action": "<p>Check whether the URL is correct. Please refer to the endpoint in the API documentation.&nbsp;</p>\n",            "actionLake": "<p>Check whether the URL is correct. Please refer to the endpoint in the API documentation.&nbsp;</p>\n"          },          {            "code": "ORDER_IS_CLOSED",            "value": "F",            "message": "The request you initiated has the same paymentRequestId as that of the existed transaction, which is closed.",            "action": "<p>Use a new <em>paymentRequestId</em> to initiate the refund again.&nbsp;</p>\n",            "actionLake": "<p>Use a new <em>paymentRequestId</em> to initiate the refund again.&nbsp;</p>\n"          },          {            "code": "ORDER_NOT_EXIST",            "value": "F",            "message": "The order does not exist.",            "action": "<p>Check whether <em>paymentId</em> is correct. If correct, contact Alipay Technical Support for specific reasons.</p>\n",            "actionLake": "<p>Check whether <em>paymentId</em> is correct. If correct, contact Alipay Technical Support for specific reasons.</p>\n"          },          {            "code": "ORDER_STATUS_INVALID",            "value": "F",            "message": "The order status is invalid. The transaction is under process or the transaction is failed.",            "action": "<p>Check the order status and take corresponding actions. Wait if the transaction is under process. Do not initiate the refund if the transaction failed. Contact Alipay Technical Support for specific reasons.</p>\n",            "actionLake": "<p>Check the order status and take corresponding actions. Wait if the transaction is under process. Do not initiate the refund if the transaction failed. Contact Alipay Technical Support for specific reasons.</p>\n"          },          {            "code": "PARAM_ILLEGAL",            "value": "F",            "message": "The required parameters are not passed, or illegal parameters exist. For example, a non-numeric input, an invalid date, or the length and type of the parameter are wrong.",            "action": "<p>Check and verify whether the required request fields (including the header fields and body fields) of the current API are correctly passed and valid.&nbsp;</p>\n",            "actionLake": "<p>Check and verify whether the required request fields (including the header fields and body fields) of the current API are correctly passed and valid.&nbsp;</p>\n"          },          {            "code": "PROCESS_FAIL",            "value": "F",            "message": "A general business failure occurred.",            "action": "<p>Do not retry. Human intervention is usually needed. It is recommended that you contact Alipay Technical Support to troubleshoot the issue.&nbsp;</p>\n",            "actionLake": "<p>Do not retry. Human intervention is usually needed. It is recommended that you contact Alipay Technical Support to troubleshoot the issue.&nbsp;</p>\n"          },          {            "code": "REFUND_AMOUNT_EXCEED",            "value": "F",            "message": "The total refund amount exceeds the payment amount.",            "action": "<p>Confirm whether the total refund amount exceeds the payment amount. Create a new refund by using an amount less than or equal to the payment amount, or contact Alipay Technical Support.&nbsp;</p>\n",            "actionLake": "<p>Confirm whether the total refund amount exceeds the payment amount. Create a new refund by using an amount less than or equal to the payment amount, or contact Alipay Technical Support.&nbsp;</p>\n"          },          {            "code": "REFUND_WINDOW_EXCEED",            "value": "F",            "message": "The refund date exceeds the refundable period that is agreed in the contract.",            "action": "<p>Confirm whether the refund date exceeds the refundable period. Check the refundable period in the contract or contact Alipay Technical Support for the specific refundable period.</p>\n",            "actionLake": "<p>Confirm whether the refund date exceeds the refundable period. Check the refundable period in the contract or contact Alipay Technical Support for the specific refundable period.</p>\n"          },          {            "code": "REPEAT_REQ_INCONSISTENT",            "value": "F",            "message": "The amount or currency is different from the previous request.",            "action": "<p>Ensure all the fields in the requests are the same or use a new <em>paymentRequestId</em> to initiate the refund again.&nbsp;</p>\n",            "actionLake": "<p>Ensure all the fields in the requests are the same or use a new <em>paymentRequestId</em> to initiate the refund again.&nbsp;</p>\n"          },          {            "code": "SYSTEM_ERROR",            "value": "F",            "message": "A system error occurred.",            "action": "<p>Do not retry, and contact Alipay Technical Support for more details.&nbsp;</p>\n",            "actionLake": "<p>Do not retry, and contact Alipay Technical Support for more details.&nbsp;</p>\n"          },          {            "code": "REFUND_IN_PROCESS",            "value": "U",            "message": "The refund is being processed.",            "action": "<p><span style=\"font-size: 14px;\">Wait for the asynchronous notification or call the <strong>inquiryRefund</strong> interface to query the final refund status. Do not retry the refund request. </span>&nbsp;</p>\n",            "actionLake": "<p><span style=\"font-size: 14px;\">Wait for the asynchronous notification or call the <strong>inquiryRefund</strong> interface to query the final refund status. Do not retry the refund request. </span>&nbsp;</p>\n"          },          {            "code": "REFUND_NOT_SUPPORTED",            "value": "F",            "message": "Refunds are not supported for this transaction.",            "action": "<p>Check the transaction status and the refund policy in the contract. If the transaction is successful and the contract allows refunds, contact Alipay Technical Support.&nbsp;</p>\n",            "actionLake": "<p>Check the transaction status and the refund policy in the contract. If the transaction is successful and the contract allows refunds, contact Alipay Technical Support.&nbsp;</p>\n"          },          {            "code": "REQUEST_TRAFFIC_EXCEED_LIMIT",            "value": "U",            "message": "The request traffic exceeds the limit.",            "action": "<p>Call the interface again to resolve the issue. If not resolved, contact Alipay Technical Support.&nbsp;</p>\n",            "actionLake": "<p>Call the interface again to resolve the issue. If not resolved, contact Alipay Technical Support.&nbsp;</p>\n"          },          {            "code": "PARTIAL_REFUND_NOT_SUPPORTED",            "value": "F",            "message": "A partial refund is not supported for this transaction.",            "action": "<p>Make a full refund or contact the buyer for an offline refund.&nbsp;&nbsp;</p>\n",            "actionLake": "<p>Make a full refund or contact the buyer for an offline refund.&nbsp;&nbsp;</p>\n"          },          {            "code": "PAYMENT_METHOD_NOT_SUPPORTED",            "value": "F",            "message": "The payment method does not support canceling or refunding transactions if the payment status is successful. ",            "action": "<p>Do not retry. Contact Alipay Technical Support to get more information.&nbsp;&nbsp;</p>\n",            "actionLake": "<p>Do not retry. Contact Alipay Technical Support to get more information.&nbsp;&nbsp;</p>\n"          },          {            "code": "ORDER_IS_CANCELED",            "value": "F",            "message": "The transaction is canceled.",            "action": "<div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C0%2C59%5D%2C%5B0%2C0%2C0%2C59%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" id=\"u9aef17c8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin-top: 0px; margin-bottom: 16px;\"><span id=\"u8779b0c4\" style=\"color: rgba(4, 15, 36, 0.85);\">You cannot refund the transaction because it is canceled.  </span></p></div>",            "actionLake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" id=\"u9aef17c8\"><span style=\"color: rgba(4, 15, 36, 0.85);\">You cannot refund the transaction because it is canceled.  </span></p>"          },          {            "code": "UNKNOWN_EXCEPTION",            "value": "U",            "message": "An API call has failed, which is caused by unknown reasons.",            "action": "<p>Call the interface again to resolve the issue. If not resolved, contact Alipay Technical Support.&nbsp;</p>\n",            "actionLake": "<p>Call the interface again to resolve the issue. If not resolved, contact Alipay Technical Support.&nbsp;</p>\n"          }        ],        "x-more": "<h2><span style=\"color: var(--font-color);font-size: 24px;\">Result process logic</span></h2>\n<p><span style=\"color: rgb(38,38,38);font-size: 14px;\">For different request results, different actions are to be performed. See the following list for details:</span></p>\n<ul>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>S</code>, the refund succeeds.</span></li>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>F</code>, the refund fails. Usually, the failure reason is that the refund is initiated when the refund window has passed (<em>result.resultCode</em>=<code>REFUND_WINDOW_EXCEED</code>). If the refund still needs to be processed, manual intervention is needed.</span></li>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>U</code>, the result is unknown. Processing failure might occur due to system or network issues. Retry with the same <em>refundRequestId</em> or use the <strong>inquiryRefund</strong> API to check the refund result.</span></li>\n</ul>\n",        "x-more-lake": "<h2><span style=\"color: var(--font-color);font-size: 24px;\">Result process logic</span></h2>\n<p><span style=\"color: rgb(38,38,38);font-size: 14px;\">For different request results, different actions are to be performed. See the following list for details:</span></p>\n<ul>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>S</code>, the refund succeeds.</span></li>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>F</code>, the refund fails. Usually, the failure reason is that the refund is initiated when the refund window has passed (<em>result.resultCode</em>=<code>REFUND_WINDOW_EXCEED</code>). If the refund still needs to be processed, manual intervention is needed.</span></li>\n<li><span style=\"color: rgb(38,38,38);font-size: 14px;\">If the value of <em>result.resultStatus</em> is <code>U</code>, the result is unknown. Processing failure might occur due to system or network issues. Retry with the same <em>refundRequestId</em> or use the <strong>inquiryRefund</strong> API to check the refund result.</span></li>\n</ul>\n",        "x-moreCodes": []      }    }  }}