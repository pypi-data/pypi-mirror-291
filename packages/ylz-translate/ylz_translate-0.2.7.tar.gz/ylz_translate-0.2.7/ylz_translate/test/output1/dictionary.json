{
    "APM payments (Android) | Checkout Payment | Alipay Docs\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2Fac%2Fcashierpay%2Fapm_android)\n\n[Go to Homepage](../../)\n\nCheckout Payment\n\n[Overview](/docs/ac/cashierpay/overview)\n\nAccept payments\n\nSDK integration\n\n[APM payments (Web/WAP)APM](/docs/ac/cashierpay/apm_ww)\n\n[APM payments (Android)APM](/docs/ac/cashierpay/apm_android)\n\n[APM payments (iOS)APM](/docs/ac/cashierpay/apm_ios)\n\n[Card payments (Web/WAP)Card](/docs/ac/cashierpay/wwcard)\n\n[Card payments (Android)Card](/docs/ac/cashierpay/adcard)\n\n[Card payments (iOS)Card](/docs/ac/cashierpay/ioscard)\n\nAPI-only integration\n\nAfter payments\n\nPayment methods\n\nOther resources\n\nAdvanced features\n\n[Pre-front solutionAPI](/docs/ac/cashierpay/prefront)\n\n[Buy now pay laterAPI](/docs/ac/cashierpay/bnpl)\n\n[Card vaultingAPI](/docs/ac/cashierpay/cv)\n\n[Card vaultingSDK](/docs/ac/cashierpay/cvsdk)\n\n[Card payment featuresAPISDK](/docs/ac/cashierpay/mf)\n\nAPM payments (Android)\n======================\n\n2024-05-28 09:40\n\nThe Antom SDK is a pre-built UI component that simplifies the process of integrating Antom payment services. This component offers a simple and quick way to integrate all payment methods supported by Antom, including credit cards, digital wallets, bank transfers, online banking, and more.\n\nThe SDK component can automatically adapt to the buyer's device and location, performing tasks such as information collection, redirection, switching between apps, displaying QR codes, and more based on the characteristics of the payment method. You can easily provide a comprehensive payment solution on your website or application, saving a significant amount of time and resources required to build each payment interface and process.\n\nUser experience\n===============\n\nThe following figures show the user journey of paying on an App:\n\n![Image 3: image.png](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1711090669407-35a293db-8e04-4e37-ad9a-625be59590a5.png)\n\nPayment flow\n============\n\nFor each payment method, the payment flow is composed of the following steps:\n\n![Image 4: 333.webp](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1713522463146-936e5fb8-537c-40af-bb7c-4a71020aeebb.webp)\n\n1.  **The buyer lands on the checkout page.**\n\n1.  **Create the** [**createPaymentSession**](https://global.alipay.com/docs/ac/ams/session_cashier) **request**  \n    After the buyer selects a payment method and submits the order, you can obtain the payment session by calling the [**createPaymentSession**](https://global.alipay.com/docs/ac/ams/session_cashier) interface.\n2.  **Invoke the client SDK**  \n    On the client side, invoke the SDK through the payment session. The SDK will handle information collection, redirection, app invocation, QR code display, verification, and other processes based on the payment method's characteristics.\n3.  **Get the payment result**  \n    Obtain the payment result by using one of the following two methods:\n\n*   Asynchronous Notification: Specify the _paymentNotifyUrl_ in the [**createPaymentSession**](https://global.alipay.com/docs/ac/ams/session_cashier) interface to set the address for receiving asynchronous notifications. When the payment is successful or expires, Antom will use [**notifyPayment**](https://global.alipay.com/docs/ac/ams/paymentrn_online) to send asynchronous notifications to you.\n*   Synchronous Inquiry: Call the [**inquiryPayment**](https://global.alipay.com/docs/ac/ams/paymentri_online) interface to check the payment status.\n\nIntegration steps\n=================\n\nStart your integration by taking the following steps:\n\n1.  Create a payment session\n2.  Create and invoke the SDK\n3.  Obtain payment result\n\nStep 1: Create a payment session Server-side\n--------------------------------------------\n\nWhen a buyer selects a payment method provided by Antom, you need to collect key information such as the payment request ID, order amount, payment method, order description, payment redirect URL, and payment result notification URL, call the **createPaymentSession** API to create a payment session, and return the payment session to the client.\n\nAntom provides server-side API libraries for multiple languages. The following codes use Java as an example. You need to install Java 6 or higher.\n\n### Install an API library\n\nYou can find the latest version on [GitHub](https://github.com/alipay/global-open-sdk-java).\n\ncopy\n\n    <dependency>\n    <groupId>com.alipay.global.sdk</groupId>\n    <artifactId>global-open-sdk-java</artifactId>\n    <version>2.0.21</version>\n    </dependency>\n\n### Initialize request instance\n\nCreate a singleton resource to make a request to Antom.\n\ncopy\n\n    String merchantPrivateKey = \"YOUR PRIVATE KEY\";\n    String alipayPublicKey = \"ALIPAY PUBLIC KEY\"\n    AlipayClient defaultAlipayClient = new DefaultAlipayClient(EndPointConstants.SG,\n                                                               merchantPrivateKey, alipayPublicKey);\n\n### Create a payment session\n\nCreating a payment session includes the following parameters:\n\n\n\n| **Parameter name** | **Required** | **Description** |\n| --- | --- | --- |\n| productCode | ✅ | The value is fixed to `CASHIER_PAYMENT`. |\n| paymentRequestId | ✅ | The unique ID generated by the merchant, a new ID is required every time a payment is initiated. |\n| paymentAmount | ✅ | Payment amount, should be set according to the smallest unit of the order currency, e.g. CNY for cents, KRW for dollars. |\n| paymentMethod | ✅ | Payment method enumeration |\n| paymentRedirectUrl | ✅ | Merchant's payment result page, according to the server-side results, not a fixed success page. |\n| order | ✅ | Order information, including order amount, order ID, and order description on the merchant side. |\n| paymentNotifyUrl |  | Payment result notification address, which can be passed in through the interface or set as a fixed value through the portal. |\n| settlementStrategy |  | Settlement currency of the payment, if the business has signed more than one settlement currency, you need to specify it in the interface. |\n\n\n\nThe above parameters are the basic parameters for creating a payment session, for full parameters and additional requirements for certain payment methods please refer to [**createPaymentSession (Checkout Payment)**](https://global.alipay.com/docs/ac/ams/session_cashier)**.**\n\n#### Sample code of calling the createPaymentSession API\n\nThe following sample code shows how to call the **createPaymentSession** API:\n\ncopy\n\n    \n    AlipayPaymentSessionRequest alipayPaymentSessionRequest = new AlipayPaymentSessionRequest();\n    alipayPaymentSessionRequest.setClientId(CLIENT_ID);\n    alipayPaymentSessionRequest.setPath(\"/ams/sandbox/api/v1/payments/createPaymentSession\");\n    alipayPaymentSessionRequest.setProductCode(ProductCodeType.CASHIER_PAYMENT);\n    \n    // replace to your paymentRequestId\n    alipayPaymentSessionRequest.setPaymentRequestId(\"paymentRequestId01\");\n    // set amount\n    Amount amount = new Amount();\n    amount.setCurrency(\"MYR\");\n    amount.setValue(\"4200\");\n    alipayPaymentSessionRequest.setPaymentAmount(amount);\n    \n    // set paymentMethod\n    PaymentMethod paymentMethod = new PaymentMethod();\n    paymentMethod.setPaymentMethodType(\"ONLINEBANKING_FPX\");\n    alipayPaymentSessionRequest.setPaymentMethod(paymentMethod);\n    \n    // set order Info\n    Order order = new Order();\n    order.setReferenceOrderId(\"referenceOrderId01\");\n    order.setOrderDescription(\"antom sdk test order\");\n    order.setOrderAmount(amount);\n    Buyer buyer = new Buyer();\n    buyer.setReferenceBuyerId(\"yourBuyerId\");\n    order.setBuyer(buyer);\n    order.setOrderAmount(amount);\n    alipayPaymentSessionRequest.setOrder(order);\n    \n    // replace to your redirect url\n    alipayPaymentSessionRequest.setPaymentRedirectUrl(\"https://www.yourMerchantWeb.com\");\n    alipayPaymentSessionRequest.setPaymentNotifyUrl(\"https://www.yourNotifyUrl\");\n    \n    AlipayPaymentSessionResponse alipayPaymentSessionResponse = null;\n    try {\n        alipayPaymentSessionResponse = defaultAlipayClient.execute(alipayPaymentSessionRequest);\n    } catch (AlipayApiException e) {\n        String errorMsg = e.getMessage();\n        // handle error condition\n    }\n\nThe following code shows a sample of the request message:\n\ncopy\n\n    {\n      \"paymentNotifyUrl\": \"https://www.yourNotifyUrl\",\n      \"paymentRequestId\": \"paymentRequestId01\",\n      \"paymentAmount\": {\n        \"currency\": \"MYR\",\n        \"value\": \"4200\"\n      },\n      \"productCode\": \"CASHIER_PAYMENT\",\n      \"paymentRedirectUrl\": \"https://www.yourMerchantWeb.com\",\n      \"paymentMethod\": {\n        \"paymentMethodType\": \"ONLINEBANKING_FPX\"\n      },\n      \"order\": {\n        \"orderAmount\": {\n          \"currency\": \"MYR\",\n          \"value\": \"4200\"\n        },\n        \"referenceOrderId\": \"referenceOrderId01\",\n        \"orderDescription\": \"antom sdk test order\",\n        \"buyer\": {\n          \"referenceBuyerId\": \"yourBuyerId\"\n        }\n      }\n    }\n\nThe following code shows a sample of the response, which contains the following parameters:\n\n*   _paymentSessionData_: the payment session to be returned to the frontend\n*   _paymentSessionExpiryTime_: the expiration time of the payment session.\n\ncopy\n\n    {\n      \"paymentSessionData\": \"UNvjVWnWPXJA4BgW+vfjsQj7PbOraafHY19X+6EqMz6Kvvmsdk+akdLvoShW5avHX8e8J15P8uNVEf/PcCMyXg==&&SG&&111\",\n      \"paymentSessionExpiryTime\": \"2023-04-06T03:28:49Z\",\n      \"paymentSessionId\": \"UNvjVWnWPXJA4BgW+vfjsQj7PbOraafHY19X+6EqMz6Ikyj9FPVUOpv+DjiIZqMe\",\n      \"result\": {\n        \"resultCode\": \"SUCCESS\",\n        \"resultMessage\": \"success.\",\n        \"resultStatus\": \"S\"\n      }\n    }\n\n### FAQs\n\n#### Can Chinese characters be used in the request?\n\nDo not use Chinese characters for the fields in the request including _paymentRequestId_, _referenceOrderId_, _orderDescription_, and _goods_ to avoid incompatible payment methods, such as QRIS and Mastercard.\n\n#### How to set the payment result notification address?\n\nAntom will send the payment result through the [**notifyPayment**](https://global.alipay.com/docs/ac/ams/paymentrn_online), which you can specify in the **createPaymentSession** API via the _paymentNotifyUrl_ parameter. If the address of each payment is the same, you can also configure it in the Antom Dashboard. If you have configured the address and set the parameter in the API, Antom will use the address set in the AP\n\nStep 2: Create and invoke the SDK Client-side\n---------------------------------------------\n\nThe Antom SDK is a component used for handling payment processes. You initiate the SDK by creating a payment session to collect information, switch between apps, and display QR codes based on the payment method specified in **createPaymentSession** API.\n\nAfter the buyer selects a payment method on the page, you need to create the SDK and initiate it with a payment session.\n\n### Install\n\nVersion Requirements: target at least Android 4.4 (API level 19) or higher.\n\nTo integrate the SDK package, please refer to [Integrate the SDK Package](https://global.alipay.com/docs/ac/antom_sdk/android_en).\n\n### Instantiate the SDK\n\nCreate the SDK instance by using the `AMSCashierPayment` and specify basic configurations. Creating a configuration object includes the following methods:\n\n\n\n| **Method name** | **Required** | **Description** |\n| --- | --- | --- |\n| *setLocale* |  | It is used to pass in language information. Valid values are listed as follows. You can choose the value to pass based on the region of the payment method. If other values are passed, the local language is used by default:* `en_US`: English * `pt_BR`: Portuguese * `ko_KR`: Korean * `es_ES`: Spanish * `ms_MY`: Malay * `in_ID`: Indonesian * `tl_PH`: Tagalog * `th_TH`: Thai * `vi_VN`: Vietnamese * `fr_FR`: French * `nl_NL`: Dutch * `it_IT`: Italian * `de_DE`: German * `zh_CN`: Simplified Chinese * `zh_HK`: Traditional Chinese |\n| *setOption* |  | It is used to specify whether to use the default loading pattern and the sandbox environment. Valid values are:* `\"sandbox\", \"true\"`: Sandbox environment * `\"sandbox\", \"false\"`: Production environment * `\"showLoading\", \"true\"`: Use the default loading pattern. * `\"showLoading\", \"false\"`: Do not use the default loading pattern. |\n| *setOnCheckoutListener* |  | Create an instance of the **OnCheckoutListener** API, which is used for event handling in the subsequent process. The API includes the following method:* `onEventCallback`: Required. A callback function that monitors payment events on the checkout page, returning *eventCode* and *eventResult*. |\n\n\n\nThe following sample code shows how to instantiate the SDK:\n\ncopy\n\n    AMSCashierPaymentConfiguration configuration = new AMSCashierPaymentConfiguration();\n    configuration.setLocale(new Locale(\"en\", \"US\"));\n    // Specify showLoading as true (default value) to use the default loading pattern. Specify it as false to customize the loading animation based on onEventCallback.\n    configuration.setOption(\"showLoading\", \"true\");\n    onfiguration.setOption(\"showLoading\", \"true\");\n    // Set the sandbox environment. If you leave it empty, the production environment is used by default.\n    configuration.setOption(\"sandbox\", \"true\");\n    // Set the callback to monitor payment events on the checkout page.\n    configuration.setOnCheckoutListener(new OnCheckoutListener() {\n        @Override\n        public void onEventCallback(String eventCode, AMSEventResult eventResult) {\n            Log.e(TAG, \"onEventCallback eventCode=\" + eventCode + \" eventResult=\" + eventResult.toString());\n        }\n    });\n    // Instantiate AMSCashierPayment.\n    AMSCashierPayment checkout = new AMSCashierPayment.Builder(activity, configuration).build();\n\n### Invoke the SDK\n\nCall the `createComponent` method:\n\n\n\n| **Parameter name** | **Required** | **Description** |\n| --- | --- | --- |\n| *sessionData* | ✅ | Create a configuration object by using the *sessionData* parameter: Pass the complete data in the *paymentSessionData* parameter obtained in the response through the **createpaymentSession (Checkout Payment)** API to the *sessionData* parameter. |\n\n\n\nCall the `onDestroy` method to free SDK component resources in the following situations:\n\n*   When the buyer exits the checkout page, free the component resources created in the **createPaymentSession**.\n*   When the buyer initiates multiple payments, free the component resources created in the previous **createPaymentSession**.\n\nThe following sample code shows how to invoke the SDK:\n\ncopy\n\n    checkout.createComponent(activity, sessionData);\n    \n    //Free SDK component resources\n    checkout.onDestroy();\n\n### Display payment results\n\nYou can use the payment component to handle payment methods which require a redirect (asynchronous payments), and those that do not (synchronous payments).\n\n#### Redirect payment\n\nThe payment process of some payment methods needs to leave the original web page and jump to the organization's page to complete the payment, such as the payment method of online banking. In this case, the buyer is redirected to the _paymentRedirectUrl_ that you provided in **createPaymentSession** API after completing the payment. You can obtain the payment result by active query and and show it to the buyer in that URL.\n\n#### Non-redirect payment\n\nFor payment without redirection, the payment result will be given through the `onEventCallback` function. The payment result here is only for front-end display, and the final order status is subject to the server side. You need to customize the processing flow you want for each payment result through the data in the result of `onEventCallback`.\n\nThe following are the possible event codes of the payment result returned by `onEventCallback`.\n\n\n\n| **Event code** | **Message** | **Solution** |\n| --- | --- | --- |\n| SDK\\_PAYMENT\\_SUCCESSFUL | Payment was successful. | Suggest redirecting buyers to the payment result page. |\n| SDK\\_PAYMENT\\_PROCESSING | Payment was being processed. | We suggest that you check the value of *paymentResultCode* in the onEventCallback result data for details. Guide buyers to retry the payment based on the provided information. |\n| SDK\\_PAYMENT\\_FAIL | Payment failed. | We suggest that you check the value of *paymentResultCode* in the onEventCallback result data for details. Guide buyers to retry the payment based on the provided information. |\n| SDK\\_PAYMENT\\_CANCEL | The buyer exits the payment page without submitting the order. | The SDK can be re-invoked with a *paymentSessionData* within the validity period; if it has expired, the *paymentSessionData* needs to be re-requested. |\n| SDK\\_PAYMENT\\_ERROR | The payment status was abnormal. | We suggest that you check the value of *paymentResultCode* in the onEventCallback result data for details. Guide buyers to retry the payment based on the provided information. |\n\n\n\nThe following sample code shows how to process the `onEventCallback`:\n\ncopy\n\n    @Override\n    public void onEventCallback(String eventCode, AMSEventResult eventResult) {\n        AlipayLog.e(TAG, \"onEventCallback eventCode=\" + eventCode + \" eventResult=\" + eventResult.toString());\n    \n        if (!TextUtils.isEmpty(eventCode)) {\n            if (\"SDK_PAYMENT_SUCCESSFUL\".equals(eventCode)) {\n                // Payment was successful. Redirect buyers to the payment result page.\n            } else if (\"SDK_PAYMENT_PROCESSING\".equals(eventCode)) {\n                // Payment was being processed. Guide buyers to retry the payment based on the provided information.\n            } else if (\"SDK_PAYMENT_FAIL\".equals(eventCode)) {\n                // Payment failed. Guide buyers to retry the payment based on the provided information.\n            }else if (\"SDK_PAYMENT_CANCEL\".equals(eventCode)) {\n                // Guide buyers to retry the payment.\n            } else if (\"SDK_PAYMENT_ERROR\".equals(eventCode)) {\n                // The payment status was abnormal. Guide buyers to retry the payment based on the provided information.\n            } else if (\"SDK_END_OF_LOADING\".equals(eventCode)) {\n                // End your custom loading animation.\n            }\n        }\n    }\n\nStep 3: Obtain payment result Server-side\n-----------------------------------------\n\nAfter the buyer completes the payment or the payment times out, Antom sends the corresponding payment results to you through server interactions, you can obtain the payment result by one of the following methods:\n\n*   Receive the asynchronous notification\n*   Inquire about the result\n\n### Receive the asynchronous notification\n\nWhen the payment reaches a final status of success or failure, Antom sends an asynchronous notification to the _paymentNotifyUrl_ specified in the **createPaymentSession** API through the [**notifyPayment**](https://global.alipay.com/docs/ac/ams/paymentrn_online) API. When you receive the notification from Antom, you are required to return a response as instructed in [Requirements](https://global.alipay.com/docs/ac/cashier_payment_cn/notification).\n\nAntom allows you to specify the URL in the _paymentNotifyUrl_ parameter within the **createPaymentSession** API. If the URL for each payment is the same, you can also configure it in the Antom Dashboard.\n\nThe following code shows a sample of notification request:\n\ncopy\n\n    {\n      \"notifyType\": \"PAYMENT_RESULT\",\n      \"result\": {\n        \"resultCode\": \"SUCCESS\",\n        \"resultStatus\": \"S\",\n        \"resultMessage\": \"success\"\n      },\n      \"paymentRequestId\": \"paymentRequestId01\",\n      \"paymentId\": \"2020010123456789XXXX\",\n      \"paymentAmount\": {\n        \"value\": \"4200\",\n        \"currency\": \"MYR\"\n      },\n      \"paymentCreateTime\": \"2020-01-01T12:01:00+08:30\",\n      \"paymentTime\": \"2020-01-01T12:01:01+08:30\"\n    }\n\nHow to verify the signature of the notification and make a response to the notification, see [Use SDK to sign a request and verify the signature](https://global.alipay.com/docs/ac/ams/signature_sdk).\n\n#### FAQs\n\n##### When will the notification be sent?\n\nIt depends on whether the payment is completed:\n\n*   If the payment is successfully completed, Antom will usually send you an asynchronous notification within 3 to 5 seconds. For some payment methods like OTC, the notification might take a bit longer.\n*   If the payment is not completed, Antom needs to close the order first before sending an asynchronous notification. The time it takes for different payment methods to close the order varies, usually defaulting to 14 minutes.\n\n##### Will the asynchronous notification be re-sent?\n\nIf you receive an asynchronous notification from Antom, you are required to return the response in the [Sample code](https://global.alipay.com/docs/ac/cashier_payment_cn/notification) format. If you do not respond to the asynchronous notification as required, or the asynchronous notification is not delivered due to network reasons, the notification will be automatically resent within 24 hours. The notification can be resent up to 8 times or until a correct response is received to terminate delivery. The sending intervals are as follows: 0 minutes, 2 minutes, 10 minutes, 10 minutes, 1 hour, 2 hours, 6 hours, and 15 hours.\n\n##### Do I need to add a digital signature to the response?\n\nIf you receive an asynchronous notification from Antom, you are required to return the response in the [Sample code](https://global.alipay.com/docs/ac/cashier_payment_cn/notification) format, but you do not need to add a digital signature to your response.\n\n##### How do I understand the meaning of the following key fields?\n\n*   _result_: the payment result of the order.\n*   _paymentRequestId_: the payment request ID generated by the merchant used for querying, canceling, and reconciliation.\n*   _paymentId_: the payment order ID generated by Antom used for refund and reconciliation.\n*   _paymentAmount_: if there is a need for amount reconciliation, you can consume this field.\n\n### Inquire about the result\n\nYou can call the **inquiryPayment** API to initiate a query on the result of an order.\n\n\n\n| **Parameter name** | **Required** | **Description** |\n| --- | --- | --- |\n| *paymentRequestId* |  | The payment request ID generated by the merchant. |\n\n\n\nThe parameter is not a full set of parameters, please refer to the [**inquiryPayment**](https://global.alipay.com/docs/ac/ams/paymentri_online) API for full set of parameters and additional requirements for certain payment methods.\n\nThe following sample code shows how to call the **inquiryPayment** API:\n\ncopy\n\n    \n    AlipayClient defaultAlipayClient = new DefaultAlipayClient(EndPointConstants.SG,\n                                                               merchantPrivateKey, alipayPublicKey);\n    \n    AlipayPayQueryRequest alipayPayQueryRequest = new AlipayPayQueryRequest();\n    alipayPayQueryRequest.setClientId(CLIENT_ID);\n    alipayPayQueryRequest.setPath(\"/ams/sandbox/api/v1/payments/inquiryPayment\");\n    alipayPayQueryRequest.setPaymentRequstId(\"paymentRequestId01\");\n    \n    AlipayPayQueryResponse alipayPayQueryResponse;\n    try {\n        alipayPayQueryResponse = defaultAlipayClient.execute(alipayPayQueryRequest);\n    } catch (AlipayApiException e) {\n        String errorMsg = e.getMessage();\n        // handle error condition\n    }\n\nThe following code shows a sample of the request message:\n\ncopy\n\n    {\n      \"paymentRequestId\": \"paymentRequestId01\"\n    }\n\nThe following code shows a sample of the response message:\n\ncopy\n\n    {\n      \"result\": {\n        \"resultCode\": \"SUCCESS\",\n        \"resultStatus\": \"S\",\n        \"resultMessage\": \"Success\"\n      },\n      \"paymentStatus\": \"SUCCESS\",\n      \"paymentRequestId\": \"paymentRequestId01\",\n      \"paymentId\": \"2019060811401080010018882020035XXXX\",\n      \"paymentAmount\": {\n        \"value\": \"4200\",\n        \"currency\": \"MYR\"\n      },\n      \"paymentCreateTime\": \"2019-06-01T12:01:01+08:30\",\n      \"paymentTime\": \"2019-06-01T12:01:01+08:30\",\n      \"transactions\": null\n    }\n\n#### FAQs\n\n##### How do I understand the meaning of the following key fields?\n\n*   _result_: the result of the API call. It only indicates the result of the **inquiryPayment** API call. The order result should be determined based on the _paymentStatus_. `SUCCESS` and `FAIL` indicate final results, while `PROCESSING` indicates that the transaction is still in progress.\n*   _paymentAmount_: amount verification. If there is a need for amount verification, this field can be used.\n\n##### How frequently should I initiate the query?\n\nIt is recommended to initiate a round-robin query at an interval of 2 seconds until either the final payment result is retrieved or an asynchronous payment notification is received.\n\nSample codes\n============\n\nFull sample codes for front-end:\n\ncopy\n\n    AMSCashierPaymentConfiguration configuration = new AMSCashierPaymentConfiguration();\n    configuration.setLocale(new Locale(\"en\", \"US\"));\n    // Specify showLoading as true (default value) to use the default loading pattern. Specify it as false to customize the loading animation based on onEventCallback.\n    configuration.setOption(\"showLoading\", \"true\");\n    // Set the sandbox environment. If you leave it empty, the production environment is used by default.\n    configuration.setOption(\"sandbox\", \"true\");\n    // Set the callback to monitor payment events on the checkout page.\n    configuration.setOnCheckoutListener(new OnCheckoutListener() {\n        @Override\n        public void onEventCallback(String eventCode, AMSEventResult eventResult) {\n            AlipayLog.e(TAG, \"onEventCallback eventCode=\" + eventCode + \" eventResult=\" + eventResult.toString());\n    \n            if (!TextUtils.isEmpty(eventCode)) {\n                if (\"SDK_PAYMENT_SUCCESSFUL\".equals(eventCode)) {\n                    // Payment was successful. Redirect buyers to the payment result page.\n                } else if (\"SDK_PAYMENT_PROCESSING\".equals(eventCode)) {\n                    // Payment was being processed. Guide buyers to retry the payment based on the provided information.\n                } else if (\"SDK_PAYMENT_FAIL\".equals(eventCode)) {\n                    // Payment failed. Guide buyers to retry the payment based on the provided information.\n                }else if (\"SDK_PAYMENT_CANCEL\".equals(eventCode)) {\n                    // Guide buyers to retry the payment.\n                } else if (\"SDK_PAYMENT_ERROR\".equals(eventCode)) {\n                    // The payment status was abnormal. Guide buyers to retry the payment based on the provided information.\n                } else if (\"SDK_END_OF_LOADING\".equals(eventCode)) {\n                    // End your custom loading animation.\n                }\n            }\n        }\n    });\n    // Instantiate AMSCashierPayment.\n    AMSCashierPayment checkout = new AMSCashierPayment.Builder(activity, configuration).build();\n    \n    checkout.createComponent(activity, sessionData);\n    \n    checkout.onDestroy();\n\nEvent codes\n===========\n\nYou might see two types of event codes:\n\n*   Status codes: Returned by `onEventCallback` during the component's runtime lifecycle.\n*   Error codes: Returned by `onEventCallback` or `onError` during the component initialization phase.\n\n\n\n| **Type** | **Code** | **Description** | **Further action** |\n| --- | --- | --- | --- |\n| Status codes | SDK\\_START\\_OF\\_LOADING | The loading animation starts to play during the payment component creation. | No further action. |\n| SDK\\_END\\_OF\\_LOADING | The loading animation ends during the payment component creation. | No further action. |\n| Error codes | SDK\\_INTERNAL\\_ERROR | The internal error of the SDK occurs. | Contact Antom Technical Support to resolve the issue. |\n| SDK\\_CREATEPAYMENT\\_PARAMETER\\_ERROR | The parameters passed into the createComponent method are incorrect. | Ensure the parameters are passed correctly and send a new request. |\n| SDK\\_CALL\\_URL\\_ERROR | Represents one of the following cases:* The redirection to the merchant page failed to be executed. * The parameter *paymentRedirectUrl*in your **createpaymentSession (Cashier Payment)** request is not passed or passed incorrectly. | Contact Antom Technical Support to resolve the issue. |\n| SDK\\_INTEGRATION\\_ERROR | Dependencies are not found. | Ensure that the dependencies are added correctly and retry the integration process. |\n\n\n\nTo view the latest updates to the documentation, visit [Release notes](https://global.alipay.com/docs/releasenotes).\n\n![Image 5](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 6](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)\n\n#### Is this page helpful?\n\n#### On this page\n\n[User experience](#BkD7T \"User experience\")\n\n[Payment flow](#eLZVd \"Payment flow\")\n\n[Integration steps](#QLFGi \"Integration steps\")\n\n[Step 1: Create a payment session](#zhBSk \"Step 1: Create a payment session\")\n\n[Install an API library](#d3kyo \"Install an API library\")\n\n[Initialize request instance](#WLui0 \"Initialize request instance\")\n\n[Create a payment session](#Cwfah \"Create a payment session\")\n\n[Sample code of calling the createPaymentSession API](#3L7zQ \"Sample code of calling the createPaymentSession API\")\n\n[FAQs](#niSqk \"FAQs\")\n\n[Can Chinese characters be used in the request?](#Xz79a \"Can Chinese characters be used in the request?\")\n\n[How to set the payment result notification address?](#9JAyd \"How to set the payment result notification address?\")\n\n[Step 2: Create and invoke the SDK](#db6T7 \"Step 2: Create and invoke the SDK\")\n\n[Install](#JmurT \"Install\")\n\n[Instantiate the SDK](#KQO5X \"Instantiate the SDK\")\n\n[Invoke the SDK](#OXd8h \"Invoke the SDK\")\n\n[Display payment results](#9tXGT \"Display payment results\")\n\n[Redirect payment](#bj20g \"Redirect payment\")\n\n[Non-redirect payment](#NG8h1 \"Non-redirect payment\")\n\n[Step 3: Obtain payment result](#Mo7TZ \"Step 3: Obtain payment result\")\n\n[Receive the asynchronous notification](#WDV7j \"Receive the asynchronous notification\")\n\n[FAQs](#V1F5v \"FAQs\")\n\n[Inquire about the result](#pCGDb \"Inquire about the result\")\n\n[FAQs](#tkpZO \"FAQs\")\n\n[Sample codes](#OV6gg \"Sample codes\")\n\n[Event codes](#OlIKO \"Event codes\")": "[查询结果](#pCGDb \"查询结果\")\n\n[常见问题解答](#tkpZO \"常见问题解答\")\n\n[示例代码](#OV6gg \"示例代码\")\n\n[事件代码](#OlIKO \"事件代码\")",
    "Active subscription | Subscription Payment | Alipay Docs\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2Fac%2Fsubscriptionpay_en%2Factivation)\n\n[Go to Homepage](../../)\n\nSubscription Payment\n\n[Overview](/docs/ac/subscriptionpay_en/overview)\n\n[Active subscription](/docs/ac/subscriptionpay_en/activation?pageVersion=9)\n\n[Cancel subscription or refund](/docs/ac/subscriptionpay_en/cancel_refund)\n\n[Reconcile](/docs/ac/subscriptionpay_en/reconcile)\n\nActive subscription\n===================\n\n2024-05-09 03:17\n\nIn the Subscription Payment process, the buyer selects a plan and payment method, goes through authorization to confirm information, and is then redirected to the authorization result page. You need to develop the subscription activation page during integration, which displays payment methods, redirects users to checkout with an authorization URL, and handles payment callbacks to redirect buyers based on the subscription status.\n\nUser experience\n===============\n\nThe payment experience for Subscription Payment is as follows:\n\n![Image 3: Active subscription](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1693364623906-5dad7f2b-3e13-4049-892e-b60ba9e09559.jpeg)\n\nFigure 1. User experience for Subscription Payment\n\nThe function of each section are as follows:\n\n1.  **Subscription activation page**: The buyer selects the subscription plan and payment method and confirms activation. A subscription order is generated. The buyer enters the subscription authorization process.\n2.  **Authorization process**: Redirect the user to the payment method authorization page, where the buyer confirms information, verifies their identity, and completes the authorization. Then the buyer is redirected to the Antom intermediate page.\n3.  **Authorization result page**: After completing the authorization, the buyer is automatically redirected to the authorization result page.  \n    \n\nQuick start\n===========\n\nDuring the integration process, you need to focus efforts on developing the subscription activation page. This page serves the following purposes:\n\n*   **Display available payment methods**: Payment methods are sorted according to payment information, such as the payment amount and the buyer's region.\n*   **Redirect the user to authorize**: Redirect the buyer to the authorization page by using an authorization URL provided by Antom.\n*   **Receive payment callback (optional)**: Receive the payment callback by monitoring the invocation of the page or by using a lifecycle function. Then you can redirect the buyer to the subscription result page according to the subscription status.\n\nStep 1: Obtain and display available payment methods\n----------------------------------------------------\n\nGet the wallet name and logo, and display available payment methods on the page.\n\n#### Get the wallet name and wallet logo\n\nContact Antom Technical Support to obtain the wallet name and logo corresponding to each payment method.\n\n#### Filter payment methods\n\nBefore you display the payment methods, it is recommended not to display or disable payment methods that are undergoing maintenance to avoid subscription failures. You can contact Antom Technical Support to inquire about the maintenance status of payment methods.\n\n#### Display payment methods\n\nFor Alipay+ payment methods, you must display the Alipay+ Partner logo. You can choose one of the following styles, ensuring each payment method names and logos is used correctly:\n\n![Image 4: 订阅图片1.png](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1715224527938-ce910a61-e22a-4cf9-8f66-a34a5f779ef7.png)\n\nStep 2: Invoke the authorization process\n----------------------------------------\n\nYou need to obtain an authorization URL first and then invoke the authorization process.\n\n#### Intercept an invalid order\n\nTo avoid a repeated or expired subscription, it is recommended that you verify the status and validity period of the order after the buyer clicks or taps **Subscribe now**.\n\n![Image 5: image.png](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1693893273358-6a1fc2d2-1d48-4062-aed6-e87943e5d254.png)\n\nTo intercept an expired subscription authorization, you can set the subscription expiration time by specifying the _paymentExpiryTime_ parameter. If a buyer authorizes after the subscription expiration time, an error is reported. Setting the subscription expiration time also avoids repeated subscriptions, which might occur when the buyer authorizes long after they are redirected to the payment method page.\n\nThe time offset of a server can also lead to repeated subscription authorizations. It is recommended that you check statuses when receiving asynchronous notifications for subscription and payment statuses. If duplicate authorization occurs, use the [**cancel**](https://global.alipay.com/docs/ac/ams/cancel_sub) API to cancel the order.\n\n#### Obtain an authorization URL\n\nAfter the buyer clicks or taps **Subscribe now**, your client requests an authorization URL from your server, and then your server calls the [**create**](https://global.alipay.com/docs/ac/ams/create_sub) API to obtain an authorization URL and returns it to your client. Before the authorization URL is obtained after the request is sent, disable the **Subscribe now** button in case of repeated operations triggered by the user.\n\n![Image 6: image.png](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1693452989511-cb0d69f9-212c-4b4b-ad5e-152de8a24b77.png)\n\nDuring the process of requesting an authorization URL, both client-side and server-side requests may fail due to network issues. It is recommended to set a timeout for the HTTP request in the client-side request to prevent buyers from waiting too long. If you fail to obtain the authorization URL, buyers need to be allowed to initiate the subscription authorization again.\n\nThe key fields in the subscription authorization request are as follows.\n\n\n\n| **Field name** | **Description** |\n| --- | --- |\n| *subscriptionRequestId* | The unique ID assigned by a merchant to identify a subscription request. |\n| *env* | Specify *terminalType* according to the client type:* Web: Specify *terminalType*as `WEB`. * WAP: Specify *terminalType*as `WAP` and specify *osType*. * App: Specify *terminalType*as `APP` and specify *osType*. |\n| *subscriptionRedirectUrl* | The merchant page URL that the user is redirected to after authorizing the subscription.* Web: Pass in an H5 URL. * WAP: Pass in an H5 URL. * App: Pass in a deep link URL. |\n| *subscriptionNotifyUrl* | The URL that is used to receive the subscription result notification. Specify the value as an HTTPS URL. |\n| *paymentNotifyUrl* | The URL that is used to receive the payment result notification for each subscription period. Specify the value as an HTTPS URL. |\n\n\n\n#### Proceed with the authorization process\n\nThe user experience of the authorization process is as follows:\n\n\n\n| image.png | image.png |\n| --- | --- |\n\n\n\n#### Redirect to your result page\n\nIn the **create** API, you can set the authorization URL through the _subscriptionRedirectUrl_ parameter. Depending on the following _terminalType_ values, it is recommended to pass either an H5 URL or a deep link:\n\n\n\n| terminalType | subscriptionRedirectUrl |\n| --- | --- |\n| WEB | Pass in an H5 URL. |\n| WAP | Pass in an H5 URL. |\n| APP | Pass in a deep link URL. |\n\n\n\nWhen the buyer completes the authorization, they are first redirected to the Antom intermediate page before being redirected to the merchant's page.\n\n![Image 9: 订阅图片3.png](https://idocs-assets.marmot-cloud.com/storage/idocs87c36dc8dac653c1/1715224557113-a5a672e2-6e85-4995-8dbd-eac2f2e6d761.png)\n\nAfter the authorization is completed, Antom sends an asynchronous notification to _subscriptionNotifyUrl_ to inform you whether the authorization is successful or not.\n\nWhen you receive the notification from Antom, you must return a response by following the code sample of [**notifySubscription**](https://global.alipay.com/docs/ac/ams/notify_sub). If you do not return the response to Antom or the response is not received by Antom due to network issues, Antom automatically resends the asynchronous notification within 24 hours for up to eight times or until the correct response is received. The sending intervals are as follows: 0s, 2 min, 10 min, 10 min, 1 h, 2 h, 6 h, and 15 h.\n\nSubscription scenario samples\n=============================\n\nPay special attention to the parameters that are related to subscription periods and subscription starting time. These parameters define the subscription plan provided for the buyer.\n\nKey parameters\n--------------\n\nYou can manage the subscription period and recurring payment logic by configuring the following parameters in the **create** interface:\n\n\n\n| **Field name** | **Description** |\n| --- | --- |\n| *subscriptionStartTime* | The date and time when the subscription becomes active. You can set the parameter to a past time, but it cannot be earlier than one period before the subscription request is initiated. |\n| *subscriptionEndTime* | The date and time when the subscription ends. |\n| *paymentAmount* | The payment amount charged to the user per subscription period. |\n| *periodRule.periodType* | The subscription period type. Valid values are: `YEAR`, `MONTH`, `WEEK`, or `DAY`. |\n| *periodRule.periodCount* | The number of period types within one subscription period. For example, if the value of *periodType* is `MONTH` and the value of *periodCount* is 3, it means that the subscription period is three months. |\n| *trials.trialStartPeriod* | The start subscription period of the trial. |\n| *trials.trialAmount* | The discounted amount for each subscription trial period. |\n| *trials.trialEndPeriod* | The end subscription period of the trial. If you leave this parameter empty, the default value of this parameter is the same as the value of *trialStartPeriod*. |\n\n\n\nThe _subscriptionStartTime_ parameter sets the start time of subscription payments, while the _periodRule_ parameter defines the billing interval of the subscription, thereby delineating a billing cycle.\n\nAssuming _subscriptionStartTime_ is 2023-08-01T08:00:00+8:00, _periodRule_._periodType_ is `MONTH`, and _periodRule_._periodCount_ is 1, the billing period is one month and recurring payment details are as follows:\n\n\n\n| **Period no.** | **Subscription start time** | **Deduction time** | **If deduction failure occurs** |\n| --- | --- | --- | --- |\n| 1 | 2023-08-01T08:00:00+8:00 | The authorization completion time | Authorization failed |\n| 2 | 2023-09-01T08:00:00+8:00 | From 2023-08-31T08:00:00+8:00 to 2023-09-01T08:00:00+8:00 | No effect |\n| 3 | 2023-10-01T08:00:00+8:00 | From 2023-09-30T08:00:00+8:00 to2023-10-01T08:00:00+8:00 | No effect |\n| 4 | 2023-11-01T08:00:00+8:00 | From 2023-10-31T08:00:00+8:00 to2023-11-01T08:00:00+8:00 | No effect |\n| ... | ... | ... |  |\n\n\n\nIf the deduction for the first subscription period is successful, Antom initiates deductions starting 24 hours before the start of each subsequent period, until the deduction is successful or 24 hours elapse.\n\nIf you receive a deduction failure notification for the second subscription period, you cannot initiate a deduction request for this period on your own. You need to call the cancel interface to cancel the buyer's subsequent subscription service.\n\nThe first payment is always executed when the buyer completes the subscription authorization, regardless of whether subscriptionStartTime is before or after the completion of the subscription authorization. Subsequent payments follow the billing cycle schedule, with Antom initiating the deduction 24 hours before the start of each cycle. If the deduction fails, Antom continuously retries for 24 hours until the payment is successful or the 24-hour period ends.\n\nAfter a successful or failed deduction, you are to be notified with the payment status by an asynchronous notification. The address to receive the notification is specified in Antom Dashboard or the _paymentNotificationUrl_ parameter in the create request.\n\n> **Note**: About the deduction failure:\n> \n> *   If the first deduction fails: the subscription authorization will fail and the subscription will not take effect.\n> *   If the deduction fails in the subsequent payment cycles:\n> \n> *   The subscription status will not be changed and the subscription remains active.\n> *   For failed deductions in a particular period, you cannot retry the deduction. However, a failed deduction in the current period does not affect the deduction for next periods.\n\nSamples\n-------\n\nBy specifying the corresponding parameters, you can use Subscription Payment service for a lot of scenarios. The following samples show how to specify parameters in the create API for several typical subscription scenarios.\n\n#### Common subscription\n\nAfter a successful subscription authorization, the payment is deducted immediately. Subsequently, the payment is deducted every other period.\n\ncopy\n\n    {\n        \"...\": \"...\",\n        \"paymentAmount\": {\n            \"currency\": \"PHP\",\n            \"value\": \"1100\"\n        },\n        \"period\": {\n            \"periodCount\": 1,\n            \"periodType\": \"MONTH\"\n        },\n        \"subscriptionStartTime\": \"2023-08-01T08:00:00+8:00\"\n    }\n\n\n\n| **Period no.** | **Subscription start time** | **Payment amount** |\n| --- | --- | --- |\n| **1**`subscriptionStartTime` | **2023-08-01T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **2** | **2023-09-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **3** | **2023-10-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **4** | **2023-11-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| .... | | |\n\n\n\n#### Pre-sale\n\nAfter a successful subscription authorization, the payment is deducted immediately. However, the service will take effect at a future time, and subsequent payments are deducted every other period.\n\ncopy\n\n    {\n        \"...\": \"...\",\n        \"paymentAmount\": {\n            \"currency\": \"PHP\",\n            \"value\": \"1100\"\n        },\n        \"period\": {\n            \"periodCount\": 1,\n            \"periodType\": \"MONTH\"\n        },\n        \"subscriptionStartTime\": \"2023-08-08T08:00:00+8:00\"\n    }\n\n\n\n| **Period no.** | **Subscription start time** | **Payment amount** |\n| --- | --- | --- |\n| **1** | **2023-08-01T08:00:00+8:00** | **1100PHP** |\n| 1 week | | |\n| `subscriptionStartTime` | **2023-08-08T08:00:00+8:00** | \\ |\n| 1 month | | |\n| **2** | **2023-09-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **3** | **2023-10-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **4** | **2023-11-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| .... | | |\n\n\n\n#### Subscription promotion\n\nAfter a successful subscription authorization, the payment is deducted immediately and then following payments are to be deducted every subsequent month . The subscription fee for the first two periods is halved, and the subscription fee returns to normal from the third period.\n\ncopy\n\n    {\n        \"...\": \"...\",\n        \"paymentAmount\": {\n            \"currency\": \"PHP\",\n            \"value\": \"1100\"\n        },\n        \"period\": {\n            \"periodCount\": 1,\n            \"periodType\": \"MONTH\"\n        },\n        \"subscriptionStartTime\": \"2023-08-01T08:00:00+8:00\",\n        \"trials\": [\n            {\n                \"trialStartPeriod\": 1,\n                \"trialAmount\": {\n                    \"currency\": \"PHP\",\n                    \"value\": \"550\"\n                },\n                \"trialEndPeriod\": 2\n            }\n        ]\n    }\n\n\n\n| **Period no.** | **Subscription start time** | **Payment amount** |\n| --- | --- | --- |\n| **1**`subscriptionStartTime` | **2023-08-01T08:00:00+8:00** | **550PHP** |\n| 1 month | | |\n| **2** | **2023-09-08T08:00:00+8:00** | **550PHP** |\n| 1 month | | |\n| **3** | **2023-10-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **4** | **2023-11-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| .... | | |\n\n\n\n#### Seven-day trial\n\nThe service takes effect immediately when the subscription is initiated. However, the first deduction will occur one week later, followed by subsequent deductions once every month.\n\ncopy\n\n    {\n        \"...\": \"...\",\n        \"paymentAmount\": {\n            \"currency\": \"PHP\",\n            \"value\": \"1100\"\n        },\n        \"period\": {\n            \"periodCount\": 1,\n            \"periodType\": \"MONTH\"\n        },\n        \"subscriptionStartTime\": \"2023-07-08T08:00:00+8:00\",\n        \"trials\": [\n            {\n                \"trialStartPeriod\": 1,\n                \"trialAmount\": {\n                    \"currency\": \"PHP\",\n                    \"value\": \"0\"\n                },\n                \"trialEndPeriod\": 1\n            }\n        ]\n    }\n\n\n\n| **Period no.** | **Subscription start time** | **Payment amount** |\n| --- | --- | --- |\n| `subscriptionStartTime` | **2023-08-08T08:00:00+8:00** | \\ |\n| 1 month (Excluding first week) | | |\n| 1 | **2023-08-08T08:00:00+8:00** | **0PHP** |\n| 1 week | | |\n| **2** | **2023-09-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **3** | **2023-10-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| **4** | **2023-11-08T08:00:00+8:00** | **1100PHP** |\n| 1 month | | |\n| .... | | |\n\n\n\nTo view the latest updates to the documentation, visit [Release notes](https://global.alipay.com/docs/releasenotes).\n\n![Image 10](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 11](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)\n\n#### Is this page helpful?\n\n#### On this page\n\n[User experience](#mXFW1 \"User experience\")\n\n[Quick start](#4FTCv \"Quick start\")\n\n[Step 1: Obtain and display available payment methods](#Ay5X2 \"Step 1: Obtain and display available payment methods\")\n\n[Get the wallet name and wallet logo](#eh1CW \"Get the wallet name and wallet logo\")\n\n[Filter payment methods](#sowZF \"Filter payment methods\")\n\n[Display payment methods](#mexnM \"Display payment methods\")\n\n[Step 2: Invoke the authorization process](#Lqvs5 \"Step 2: Invoke the authorization process\")\n\n[Intercept an invalid order](#m7Vph \"Intercept an invalid order\")\n\n[Obtain an authorization URL](#NVls0 \"Obtain an authorization URL\")\n\n[Proceed with the authorization process](#Sa6jq \"Proceed with the authorization process\")\n\n[Redirect to your result page](#SlyB6 \"Redirect to your result page\")\n\n[Subscription scenario samples](#MhxAu \"Subscription scenario samples\")\n\n[Key parameters](#3oIun \"Key parameters\")\n\n[Samples](#uiqBb \"Samples\")\n\n[Common subscription](#ETeo0 \"Common subscription\")\n\n[Pre-sale](#d4hX8 \"Pre-sale\")\n\n[Subscription promotion](#zh0Of \"Subscription promotion\")\n\n[Seven-day trial](#KDWMe \"Seven-day trial\")": "[拦截无效订单](#m7Vph \"拦截无效订单\")\n\n[获取授权URL](#NVls0 \"获取授权URL\")\n\n[进行授权流程](#Sa6jq \"进行授权流程\")\n\n[重定向到结果页面](#SlyB6 \"重定向到结果页面\")\n\n[订阅场景示例](#MhxAu \"订阅场景示例\")\n\n[关键参数](#3oIun \"关键参数\")\n\n[示例](#uiqBb \"示例\")\n\n[普通订阅](#ETeo0 \"普通订阅\")\n\n[预售](#d4hX8 \"预售\")\n\n[订阅促销](#zh0Of \"订阅促销\")\n\n[七天试用](#KDWMe \"七天试用\")",
    "Documentation | Alipay, China's leading third-party online payment solution\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2F)\n\n[Home](/docs/)\n\n[Online payment](/docs/onlinepayment)\n\n[In-store payment](/docs/instorepayment)\n\n[Solutions](/docs/solutions)\n\n[Revenue Booster](/docs/ac/revenuebooster_en/overview)\n\n[Combined Payment](/docs/ac/combinedpay_en/overview)\n\n[Flexible Settlement](/docs/ac/flexiblesettlement_en/overview)\n\n[Integration guide](/docs/integration_guide_en)\n\n[Antom Dashboard](/docs/dashboard_en)\n\n[SDKs](/docs/sdks)\n\n[APIs](https://global.alipay.com/docs/ac/ams/api)\n\n[Reconciliation](https://global.alipay.com/docs/ac/reconcile)\n\n[Digital signature](https://global.alipay.com/docs/ac/ams/digital_signature)\n\n[Sandbox](https://global.alipay.com/docs/ac/ref/sandbox)\n\n[Tools](https://global.alipay.com/docs/ac/ref/key_config_en)\n\n[Test wallet](https://global.alipay.com/docs/ac/ref/testwallet)\n\n[Dispute](https://global.alipay.com/docs/ac/dispute)\n\n[Merchant service](https://global.alipay.com/docs/ac/merchant_service)\n\n[Release notes](/docs/releasenotes)\n\n[Support](/docs/support)\n\n[Glossary](/docs/glossary)\n\n[Help center](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)\n\n[Legacy documentation](https://global.alipay.com/docs/ac/legacy/legacydoc)\n\nDocumentation\n=============\n\n \n\nBefore you start developing Antom products and solutions, familiarize yourself with our latest documentation including developer guides, API reference, code samples, and more.\n\nSee [Legacy documentation](https://global.alipay.com/docs/ac/legacy/legacydoc) for previous versions of Antom documentation, including product docs, APIs, and release notes on Cross-border Payment Services, Face-to-face Payment Services, and others.\n\n [![Image 3: Online payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*z7S_RrVPCj8AAAAAAAAAAAAAARQnAQ) ![Image 4: Online payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*BI20Sp51C2EAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/onlinepayment)\n\n[Online payment](https://global.alipay.com/docs/onlinepayment)\n\nSupercharge your online business by accepting all e-wallets and alternative payment methods.\n\n*   [Checkout Payment](https://global.alipay.com/docs/ac/cashierpay/overview)\n*   [EasySafePay](https://global.alipay.com/docs/ac/easypay_en/overview_en)\n*   [Scan to Bind](https://global.alipay.com/docs/ac/scantopay_en/overview)\n*   [Auto Debit](https://global.alipay.com/docs/ac/autodebit_en/overview)\n*   [Subscription Payment](https://global.alipay.com/docs/ac/subscriptionpay_en/overview)\n\n [![Image 5: In-store payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*SGtiRq4cTQcAAAAAAAAAAAAAARQnAQ) ![Image 6: In-store payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*Ca17QKSEOkoAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/instorepayment)\n\n[In-store payment](https://global.alipay.com/docs/instorepayment)\n\nEnhance payment experience in your store with a secure and seamless digital payment service.\n\n*   [User-Presented Mode Payment](https://global.alipay.com/docs/ac/ams_upm/introduction)\n*   [Order Code Payment](https://global.alipay.com/docs/ac/ams_oc/introduction)\n*   [Entry Code Payment](https://global.alipay.com/docs/ac/ams_ec/introduction)\n\n [![Image 7: Solutions](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*9up-Q6qVdEQAAAAAAAAAAAAAARQnAQ) ![Image 8: Solutions](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*vr8PQIgOnKEAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/solutions)\n\n[Solutions](https://global.alipay.com/docs/solutions)\n\nInnovative industry-specific solutions to boost business opportunities and growth.\n\n*   [Smart Restaurants](https://global.alipay.com/docs/ac/restaurant/restaurantintroduction)\n*   [Retail Stores](https://global.alipay.com/docs/ac/retailstore/intro)\n*   [Tickets](https://global.alipay.com/docs/ac/tickets/ticketintroduction)\n\nServices\n--------\n\n[Revenue Booster Raise your transaction success rate with this all-in-one toolkit.](https://global.alipay.com/docs/ac/revenuebooster_en/overview)\n\n[Combined Payment Combine multiple orders in a single transaction with this e-commerce solution.](https://global.alipay.com/docs/ac/combinedpay_en)\n\n[Flexible Settlement Split payouts: the cost-efficient way to stakeholders in your e-commerce ecosystem.](https://global.alipay.com/docs/ac/flexiblesettlement_en)\n\nResources\n---------\n\n[Integration guide RECOMMENDED A comprehensive guide to end-to-end integration.](https://global.alipay.com/docs/integration_guide_en)\n\n[Antom Dashboard An all-in-one console that helps developers throughout the entire integration process.](https://global.alipay.com/docs/dashboard_en)\n\n[SDKs An installable package that contains all the resources needed for integration.](https://global.alipay.com/docs/sdks)\n\n[APIs A set of functions to develop high-availability applications.](https://global.alipay.com/docs/ac/ams/api)\n\n[Digital signature A signature algorithm required for API message transmission.](https://global.alipay.com/docs/ac/ams/digital_signature)\n\n[Tools A set of developer tools built directly into Antom Dashboard to simplify integration.](https://global.alipay.com/docs/ac/ref/key_config_en)\n\n[Test wallet Alipay-provided test wallet to facilitate your integration.](https://global.alipay.com/docs/ac/ref/testwallet)\n\n[Dispute A guide to understand, handle, and prevent disputes.](https://global.alipay.com/docs/ac/dispute)\n\n[Merchant service Tutorials about merchant operations.](https://global.alipay.com/docs/ac/merchant_service/videos)\n\n[Reconciliation RECOMMENDED Guides to learn about Alipay settlement rules and perform reconciliation.](https://global.alipay.com/docs/ac/reconcile)\n\nExplore more\n------------\n\n[Release notes Learn about new features and improvements in each release.](https://global.alipay.com/docs/releasenotes)\n\n[Support Reach us via email, online chat, or service requests.](https://global.alipay.com/docs/support)\n\n[Glossary Refer to our comprehensive list of terms and definitions.](https://global.alipay.com/docs/glossary)\n\n[Help center Find answers quickly by browsing these helpful articles.](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)\n\n[Promote Alipay Promote Red Packet QR Code and get a commission.](https://global.alipay.com/docs/ac/redpacket/scrzsv)\n\n![Image 9](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 10](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)": "测试钱包：支付宝提供的测试钱包，用于协助您的集成。[了解更多](https://global.alipay.com/docs/ac/ref/testwallet)  \n纠纷处理：关于理解和处理纠纷的指南。[了解更多](https://global.alipay.com/docs/ac/dispute)  \n商户服务：商户操作教程。[了解更多](https://global.alipay.com/docs/ac/merchant_service/videos)  \n对账：推荐的支付宝结算规则和对账指南。[了解更多](https://global.alipay.com/docs/ac/reconcile)  \n更多信息\n----------------  \n版本更新：了解每个版本的新功能和改进。[了解更多](https://global.alipay.com/docs/releasenotes)  \n支持服务：通过电子邮件、在线聊天或服务请求联系我们。[了解更多](https://global.alipay.com/docs/support)  \n词汇表：查阅我们的全面术语和定义列表。[了解更多](https://global.alipay.com/docs/glossary)  \n帮助中心：浏览这些有用的文章，快速找到答案。[了解更多](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)  \n推广支付宝：推广红包二维码并赚取佣金。[了解更多](https://global.alipay.com/docs/ac/redpacket/scrzsv)  \n![图片9](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png) ![图片10](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)  \n@2024 支付宝 [法律信息](https://global.alipay.com/docs/ac/platform/membership)",
    "Documentation | Alipay, China's leading third-party online payment solution\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2F)\n\n[Home](/docs/)\n\n[Online payment](/docs/onlinepayment)\n\n[In-store payment](/docs/instorepayment)\n\n[Solutions](/docs/solutions)\n\n[Revenue Booster](/docs/ac/revenuebooster_en/overview)\n\n[Combined Payment](/docs/ac/combinedpay_en/overview)\n\n[Flexible Settlement](/docs/ac/flexiblesettlement_en/overview)\n\n[Integration guide](/docs/integration_guide_en)\n\n[Antom Dashboard](/docs/dashboard_en)\n\n[SDKs](/docs/sdks)\n\n[APIs](https://global.alipay.com/docs/ac/ams/api)\n\n[Reconciliation](https://global.alipay.com/docs/ac/reconcile)\n\n[Digital signature](https://global.alipay.com/docs/ac/ams/digital_signature)\n\n[Sandbox](https://global.alipay.com/docs/ac/ref/sandbox)\n\n[Tools](https://global.alipay.com/docs/ac/ref/key_config_en)\n\n[Test wallet](https://global.alipay.com/docs/ac/ref/testwallet)\n\n[Dispute](https://global.alipay.com/docs/ac/dispute)\n\n[Merchant service](https://global.alipay.com/docs/ac/merchant_service)\n\n[Release notes](/docs/releasenotes)\n\n[Support](/docs/support)\n\n[Glossary](/docs/glossary)\n\n[Help center](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)\n\n[Legacy documentation](https://global.alipay.com/docs/ac/legacy/legacydoc)\n\nDocumentation\n=============\n\n \n\nBefore you start developing Antom products and solutions, familiarize yourself with our latest documentation including developer guides, API reference, code samples, and more.\n\nSee [Legacy documentation](https://global.alipay.com/docs/ac/legacy/legacydoc) for previous versions of Antom documentation, including product docs, APIs, and release notes on Cross-border Payment Services, Face-to-face Payment Services, and others.\n\n [![Image 3: Online payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*z7S_RrVPCj8AAAAAAAAAAAAAARQnAQ) ![Image 4: Online payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*BI20Sp51C2EAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/onlinepayment)\n\n[Online payment](https://global.alipay.com/docs/onlinepayment)\n\nSupercharge your online business by accepting all e-wallets and alternative payment methods.\n\n*   [Checkout Payment](https://global.alipay.com/docs/ac/cashierpay/overview)\n*   [EasySafePay](https://global.alipay.com/docs/ac/easypay_en/overview_en)\n*   [Scan to Bind](https://global.alipay.com/docs/ac/scantopay_en/overview)\n*   [Auto Debit](https://global.alipay.com/docs/ac/autodebit_en/overview)\n*   [Subscription Payment](https://global.alipay.com/docs/ac/subscriptionpay_en/overview)\n\n [![Image 5: In-store payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*SGtiRq4cTQcAAAAAAAAAAAAAARQnAQ) ![Image 6: In-store payment](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*Ca17QKSEOkoAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/instorepayment)\n\n[In-store payment](https://global.alipay.com/docs/instorepayment)\n\nEnhance payment experience in your store with a secure and seamless digital payment service.\n\n*   [User-Presented Mode Payment](https://global.alipay.com/docs/ac/ams_upm/introduction)\n*   [Order Code Payment](https://global.alipay.com/docs/ac/ams_oc/introduction)\n*   [Entry Code Payment](https://global.alipay.com/docs/ac/ams_ec/introduction)\n\n [![Image 7: Solutions](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*9up-Q6qVdEQAAAAAAAAAAAAAARQnAQ) ![Image 8: Solutions](https://gw.alipayobjects.com/mdn/rms_0f16c4/afts/img/A*vr8PQIgOnKEAAAAAAAAAAAAAARQnAQ)](https://global.alipay.com/docs/solutions)\n\n[Solutions](https://global.alipay.com/docs/solutions)\n\nInnovative industry-specific solutions to boost business opportunities and growth.\n\n*   [Smart Restaurants](https://global.alipay.com/docs/ac/restaurant/restaurantintroduction)\n*   [Retail Stores](https://global.alipay.com/docs/ac/retailstore/intro)\n*   [Tickets](https://global.alipay.com/docs/ac/tickets/ticketintroduction)\n\nServices\n--------\n\n[Revenue Booster Raise your transaction success rate with this all-in-one toolkit.](https://global.alipay.com/docs/ac/revenuebooster_en/overview)\n\n[Combined Payment Combine multiple orders in a single transaction with this e-commerce solution.](https://global.alipay.com/docs/ac/combinedpay_en)\n\n[Flexible Settlement Split payouts: the cost-efficient way to stakeholders in your e-commerce ecosystem.](https://global.alipay.com/docs/ac/flexiblesettlement_en)\n\nResources\n---------\n\n[Integration guide RECOMMENDED A comprehensive guide to end-to-end integration.](https://global.alipay.com/docs/integration_guide_en)\n\n[Antom Dashboard An all-in-one console that helps developers throughout the entire integration process.](https://global.alipay.com/docs/dashboard_en)\n\n[SDKs An installable package that contains all the resources needed for integration.](https://global.alipay.com/docs/sdks)\n\n[APIs A set of functions to develop high-availability applications.](https://global.alipay.com/docs/ac/ams/api)\n\n[Digital signature A signature algorithm required for API message transmission.](https://global.alipay.com/docs/ac/ams/digital_signature)\n\n[Tools A set of developer tools built directly into Antom Dashboard to simplify integration.](https://global.alipay.com/docs/ac/ref/key_config_en)\n\n[Test wallet Alipay-provided test wallet to facilitate your integration.](https://global.alipay.com/docs/ac/ref/testwallet)\n\n[Dispute A guide to understand, handle, and prevent disputes.](https://global.alipay.com/docs/ac/dispute)\n\n[Merchant service Tutorials about merchant operations.](https://global.alipay.com/docs/ac/merchant_service/videos)\n\n[Reconciliation RECOMMENDED Guides to learn about Alipay settlement rules and perform reconciliation.](https://global.alipay.com/docs/ac/reconcile)\n\nExplore more\n------------\n\n[Release notes Learn about new features and improvements in each release.](https://global.alipay.com/docs/releasenotes)\n\n[Support Reach us via email, online chat, or service requests.](https://global.alipay.com/docs/support)\n\n[Glossary Refer to our comprehensive list of terms and definitions.](https://global.alipay.com/docs/glossary)\n\n[Help center Find answers quickly by browsing these helpful articles.](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)\n\n[Promote Alipay Promote Red Packet QR Code and get a commission.](https://global.alipay.com/docs/ac/redpacket/scrzsv)\n\n![Image 9](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 10](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)\n\n      \n\nFeedback": "测试钱包：支付宝提供的测试钱包，用于协助您的集成。[了解更多](https://global.alipay.com/docs/ac/ref/testwallet)  \n争议处理：关于理解和处理争议的指南。[了解更多](https://global.alipay.com/docs/ac/dispute)  \n商户服务：商户操作教程。[观看视频](https://global.alipay.com/docs/ac/merchant_service/videos)  \n对账：推荐的对账指南，了解支付宝结算规则并进行对账。[了解更多](https://global.alipay.com/docs/ac/reconcile)  \n探索更多\n---------\n版本更新：了解每个版本的新功能和改进。[查看更新](https://global.alipay.com/docs/releasenotes)  \n支持服务：通过电子邮件、在线聊天或服务请求联系我们。[获取支持](https://global.alipay.com/docs/support)  \n词汇表：查阅我们的术语和定义综合列表。[查看词汇表](https://global.alipay.com/docs/glossary)  \n帮助中心：浏览这些有用的文章，快速找到答案。[访问帮助中心](https://cshall.alipay.com/enterprise/global/klgList?sceneCode=un_login&routerId=d9aa1f608c4145d6b3c8030c17cf6f9a000&categoryId=50479)  \n推广支付宝：推广红包二维码并赚取佣金。[了解更多](https://global.alipay.com/docs/ac/redpacket/scrzsv)  \n![图片9](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png) ![图片10](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)  \n@2024 支付宝 [法律信息](https://global.alipay.com/docs/ac/platform/membership)  \n反馈",
    "Sandbox | Development reference | Alipay Docs\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2Fac%2Fref%2Fsandbox)\n\n[Go to Homepage](../../)\n\nDevelopment reference\n\n[Sandbox](/docs/ac/ref/sandbox)\n\n[How to test card payments](/docs/ac/ref/card)\n\n[How to test Alipay+ payment methods](/docs/ac/ref/wallet)\n\n[How to test other payment methods](/docs/ac/ref/other)\n\n[Test wallet](/docs/ac/ref/testwallet)\n\n[Testing resources](/docs/ac/ref/test_resource)\n\n[Integration mode](/docs/ac/ref/oy9921)\n\n[Secure file transmission](/docs/ac/ref/xgcpey)\n\nFAQs\n\nAntom Dashboard\n\nTools\n\nOther references\n\n[MCC codes](/docs/ac/ref/mcccodes)\n\n[Usage rules of the Amount object](/docs/ac/ref/cc)\n\n[Payment methods](/docs/ac/ref/payment_method)\n\n[Risk management methods](/docs/ac/ref/risk_methods)\n\n[Brand asset](/docs/ac/ref/brandasset)\n\nSandbox\n=======\n\n2024-05-22 07:34\n\nHow to use sandbox\n==================\n\nThe sandbox provides you a testing environment to simulate payments and ensure seamless integration of their applications with Antom product. This topic will guide you through the process of using the sandbox effectively.\n\nBefore you begin\n----------------\n\nComplete the following steps before testing in the sandbox:\n\n1.  Login to [Antom Dashboard](https://dashboard.alipay.com/global-payments/home), switch to Test mode, go to **Developer** > **Quick start** > **Integration resources and tools**, and select **Integration resources** to get the sandbox client ID, domain and public key.\n2.  Download the test wallet app. Refer to the [Test wallet](https://global.alipay.com/docs/ac/ref/testwallet) for guidance.\n\nTest in sandbox\n---------------\n\nIn the sandbox, multiple ways are provided to make an API call simulation, and you can call each API multiple times. API calls are correlated with each other if you provide the corresponding information. For example, you first call the **pay** API to initiate a payment. Then you can call the **refund** API to initiate a refund against the payment by specifying the _paymentId_. Information about both the payment and related refund is provided in the sandbox environment.\n\nIn addition, when you call the **pay** or **consult** API in the sandbox, the sandbox also simulates the redirection process between the merchant side and the payment method side for different terminal types such as WEB, WAP, and APP.\n\n### For Checkout Payment/Auto Debit\n\nTo test Checkout Payment and Auto Debit, you can use the provided testing guides to simulate the payment and vaulting process across various payment methods. The sandbox can also simulate all error codes, even rare production environment scenarios via the tool [Error scenario simulation](https://global.alipay.com/docs/ac/ref/error_scenario_sim_en). This enables developers to work with consistent system logic processing during testing.\n\n#### Test for payment methods\n\n\n\n| **Payment method** | **Testing guide** |\n| --- | --- |\n| [Card](https://global.alipay.com/docs/ac/cashierpay/pay_type#DDFip) | [How to test card payments](https://global.alipay.com/docs/ac/ref/card) |\n| [Alipay+ payment method](https://global.alipay.com/docs/ac/cashierpay/pay_type#mt4eB) | [How to test the Alipay+ payment methods](https://global.alipay.com/docs/ac/ref/wallet) |\n| [Wallet](https://global.alipay.com/docs/ac/cashierpay/pay_type#IK789) | [How to test other payment methods](https://global.alipay.com/docs/ac/ref/other) |\n| [Mobile banking app](https://global.alipay.com/docs/ac/cashierpay/pay_type#KSRbI) |\n| [Bank transfer](https://global.alipay.com/docs/ac/cashierpay/pay_type#bR1hN) |\n| [Online banking](https://global.alipay.com/docs/ac/cashierpay/pay_type#llC45) |\n| [OTC](https://global.alipay.com/docs/ac/cashierpay/pay_type#FwduU) |\n\n\n\n#### Simulate error scenarios\n\nError scenario simulation provides simulations of different API results and returns the specified response for integration testing. Refer to [Error scenario simulation](https://global.alipay.com/docs/ac/ref/error_scenario_sim_en) for detailed information.\n\n### For Subscription Payment\n\nIn the sandbox, you can create, update, and cancel a subscription plan. The sandbox automatically speeds up the subscription deduction cycle to facilitate your verification process. The table below illustrates how it works.\n\n\n\n| **periodRule.periodType** | **periodRule.periodCount** | **Sandbox acceleration interval (min)** | **Acceleration frequency** |\n| --- | --- | --- | --- |\n| `DAY` | `31` | 3 | 12 |\n| `93` | 3 | 12 |\n| `366` | 3 | 12 |\n| `WEEK` | `1` | 3 | 12 |\n| `MONTH` | `1` | 3 | 12 |\n| `3` | 15 | 12 |\n| `6` | 30 | 12 |\n| `YEAR` | `1` | 60 | 12 |\n|  | | | |\n\n\n\nFor example, create a subscription plan with a subscription period of 31 days.\n\ncopy\n\n    {\n      \"subscriptionRequestId\": \"REQUEST_20240409141836419\",\n      \"subscriptionDescription\": \"Subscription test\",\n      \"paymentMethodType\": \"GCASH\",\n      \"env\": {\n        \"osType\": \"ANDROID\",\n        \"terminalType\": \"APP\"\n      },\n      \"orderInfo\": {\n        \"orderAmount\": {\n          \"currency\": \"PHP\",\n          \"value\": \"100\"\n        }\n      },\n      \"paymentAmount\": {\n        \"currency\": \"PHP\",\n        \"value\": \"100\"\n      },\n      \"periodRule\": {\n        \"periodCount\": 31,\n        \"periodType\": \"DAY\"\n      },\n      \"settlementStrategy\": {\n        \"settlementCurrency\": \"USD\"\n      },\n      \"subscriptionStartTime\": \"2024-04-09T14:18:36+08:00\",\n      \"subscriptionEndTime\": \"2074-04-09T14:18:36+08:00\",\n      \"subscriptionExpiryTime\": \"2024-04-09T14:48:36+08:00\",\n      \"subscriptionNotificationUrl\": \"https://www.baidu.com\",\n      \"subscriptionRedirectUrl\": \"https://alipay.com/subscriptionNotify\",\n      \"paymentNotificationUrl\": \"https://alipay.com/subscriptionPayNotify\"\n    }\n\nFollow the instructions of [How to test Alipay+ payment methods](https://global.alipay.com/docs/ac/ref/wallet) to complete the vaulting process in the sandbox, then you will start receiving deduction notifications every 3 minutes. The deduction cycle stops accelerating after the thirteenth deduction. The final deduction notification during the acceleration cycle is detailed below:\n\ncopy\n\n    {\n        \"paymentAmount\": {\n            \"currency\": \"PHP\",\n            \"value\": \"100\"\n        },\n        \"paymentCreateTime\": \"2024-04-08T23:59:00-07:00\",\n        \"paymentId\": \"202404091940108001001886J0299059200\",\n        \"paymentTime\": \"2024-04-08T23:59:03-07:00\",\n        \"periodEndTime\": \"2025-05-16T23:18:36-07:00\",\n        \"periodStartTime\": \"2025-04-15T23:18:36-07:00\",\n        \"phaseNo\": \"13\",\n        \"result\": {\n            \"resultCode\": \"SUCCESS\",\n            \"resultMessage\": \"success\",\n            \"resultStatus\": \"S\"\n        },\n        \"subscriptionId\": \"202404091900000000000009D0000004046\",\n        \"subscriptionRequestId\": \"REQUEST_20240409141836419\",\n        \"subscriptionNo\": \"13\"\n    }\n\nTo view the latest updates to the documentation, visit [Release notes](https://global.alipay.com/docs/releasenotes).\n\n![Image 3](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 4](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)\n\n#### Is this page helpful?\n\n#### On this page\n\n[How to use sandbox](#p9X19 \"How to use sandbox\")\n\n[Before you begin](#xh0P0 \"Before you begin\")\n\n[Test in sandbox](#hgYcM \"Test in sandbox\")\n\n[For Checkout Payment/Auto Debit](#A3VRp \"For Checkout Payment/Auto Debit\")\n\n[Test for payment methods](#IyR8b \"Test for payment methods\")\n\n[Simulate error scenarios](#nijOn \"Simulate error scenarios\")\n\n[For Subscription Payment](#RcC5W \"For Subscription Payment\")": "[支付结账/自动扣款](#A3VRp \"支付结账/自动扣款\")\n\n[支付方式测试](#IyR8b \"支付方式测试\")\n\n[模拟错误场景](#nijOn \"模拟错误场景\")\n\n[订阅支付](#RcC5W \"订阅支付\")",
    "URLs returned for payment methods | Checkout Payment | Alipay Docs\n===============\n                        \n\n[![Image 1: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![Image 2: Alipay, China's leading third-party online payment solution](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/)\n\n[Log In](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2Fac%2Fcashierpay%2Furls)\n\n[Go to Homepage](../../)\n\nCheckout Payment\n\n[Overview](/docs/ac/cashierpay/overview)\n\nAccept payments\n\nAfter payments\n\nPayment methods\n\nOther resources\n\n[How to properly use the payment continuation URL](/docs/ac/cashierpay/config)\n\n[URLs returned for payment methods](/docs/ac/cashierpay/urls)\n\n[Co-badged cards complianceCard](/docs/ac/cashierpay/co-badged_cards_compliance)\n\n[Production test cases](/docs/ac/cashierpay/testcases)\n\n[Payment status description](/docs/ac/cashierpay/payment_status_desc)\n\nAdvanced features\n\n[Pre-front solutionAPI](/docs/ac/cashierpay/prefront)\n\n[Buy now pay laterAPI](/docs/ac/cashierpay/bnpl)\n\n[Card vaultingAPI](/docs/ac/cashierpay/cv)\n\n[Card vaultingSDK](/docs/ac/cashierpay/cvsdk)\n\n[Card payment featuresAPISDK](/docs/ac/cashierpay/mf)\n\nURLs returned for payment methods\n=================================\n\n2024-05-09 10:28\n\nThis topic shows the URL types returned for some payment methods by the client type.\n\n### Alipay+ payment method\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| AlipayCN | Web | None | None | Code-scanning page |\n| WAP | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| BOOST | Web | None | None | Login page |\n| WAP | Intermediate page for invoking a payment method app | Login page | Login page |\n| App | Intermediate page for invoking a payment method app | Login page | Login page |\n| BPI | Web | None | None | Login page |\n| WAP | None | None | Intermediate page for invoking a login page |\n| App | None | None | Intermediate page for invoking a login page |\n| DANA | Web | None | None | Login page |\n| WAP | None | Intermediate page for invoking a payment method app | Login page |\n| App | None | Intermediate page for invoking a payment method app | Login page |\n| GCash | Web | None | None | Code-scanning page |\n| WAP | None | Login page | Login page |\n| App | None | Login page | Login page |\n| Rabbit LINE Pay | Web | None | None | Code-scanning page |\n| WAP | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| TrueMoney | Web | None | None | Code-scanning page |\n| WAP | None | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | None | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| Touch'n Go | Web | None | None | Code-scanning page |\n| WAP | None | Intermediate page for invoking a payment method app/Login page | Login page |\n| App | None | Intermediate page for invoking a payment method app/Login page | Login page |\n| KakaoPay | Web | None | None | Code-scanning page |\n| WAP | None | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | None | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| AlipayHK | Web | None | None | Code-scanning page |\n| WAP | None | Intermediate page for invoking a payment method app | Login page |\n| App | None | Intermediate page for invoking a payment method app | Login page |\n| Alipay+ unified payment cashier | Web | None | None | Alipay+ intermediate page (a code-scanning page or an intermediate page for invoking a login page) |\n| WAP | None | None | Alipay+ intermediate page for invoking a login page or a payment method app |\n| App | None | None | Alipay+ intermediate page for invoking a login page or a payment method app |\n| Akulaku PayLater PH | Web | None | None | Code-scanning page |\n| WAP | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| Billease | Web | None | None | Login page |\n| WAP | Intermediate page for invoking a payment method app | Login page | Login page |\n| App | Intermediate page for invoking a payment method app | Login page | Login page |\n| NAVER Pay | Web | None | None | Login page |\n| WAP | None | None | intermediate page for invoking a login page or a payment method app |\n| App | None | None | Alipay+ intermediate page for invoking a login page or a payment method app |\n| Toss Pay | Web | None | None | Code-scanning page/Login page |\n| WAP | None | Intermediate page for invoking a payment method app/Code-scanning page/Login page | Code-scanning page/Login page |\n| App | None | Intermediate page for invoking a payment method app/Code-scanning page/Login page | Code-scanning page/Login page |\n| Kredivo | Web | None | None | Code-scanning page |\n| WAP | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| KPLUS | Web | None | None | Code-scanning page |\n| WAP | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app | Intermediate page for invoking a payment method app |\n| DOKU | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n\n\n\n### Wallet\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| GrabPay | Web | None | None | login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| OVO | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| JKOPay | Web | None | None | Code-scanning page |\n| WAP | None | None | Intermediate page for invoking a payment method app |\n| App | None | None | Intermediate page for invoking a payment method app |\n| GRABPAY\\_MY | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| GRABPAY\\_PH | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| GRABPAY\\_SG | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| LINEPAY | Web | None | None | Code-scanning page /Login page |\n| WAP | None | None | Code-scanning page /Login page |\n| App | None | None | Code-scanning page /Login page |\n| MAYA | Web | None | None | Code-scanning page |\n| WAP | None | None | Code-scanning page |\n| App | None | None | Code-scanning page |\n| PAYNOW | Web | None | None | Code-scanning page |\n| WAP | None | None | Code-scanning page |\n| App | None | None | Code-scanning page |\n| PROMPTPAY | Web | None | None | Code-scanning page |\n| WAP | None | None | Code-scanning page |\n| App | None | None | Code-scanning page |\n| ZALOPAY | Web | None | None | Code-scanning page |\n| WAP | None | None | Intermediate page for invoking a payment method app |\n| App | None | None | Intermediate page for invoking a payment method app |\n\n\n\n### Mobile banking app\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| Bangkok Bank | Web | None | None | None |\n| WAP | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| Bank of Ayudhya | Web | None | None | None |\n| WAP | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| KrungThai Bank | Web | None | None | None |\n| WAP | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| Siam Commercial Bank | Web | None | None | None |\n| WAP | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n| App | Intermediate page for invoking a payment method app | None | Intermediate page for invoking a payment method app |\n\n\n\n### Bank transfer\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| Bangkok Bank | Web | None | None | Payment code or QR code page |\n| WAP | None | None | Payment code or QR code page |\n| App | None | None | Payment code or QR code page |\n| Bank of Ayudhya | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Krungthai Bank | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Siam Commercial Bank | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Government Savings Bank | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Kasikorn Bank | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| PromptPay | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n| Blik | Web | None | None | Blik code page |\n| WAP | None | None | Blik code page |\n| App | None | None | Blik code page |\n| Paynow | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n| Pix | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n| Bersama, PRIMA, and Alto ATM | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| BNI | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Mandiri | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Maybank | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| Permata | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| CIMB Niaga | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| BSI | Web | None | None | Payment code page |\n| WAP | None | None | Payment code page |\n| App | None | None | Payment code page |\n| QRIS | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n\n\n\n### Online banking\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| Bangkok Bank | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Bank of Ayudhya | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| KrungThai Bank | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Siam Commercial Bank | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Kasikorn Bank | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n| Bancontact | Web | None | None | QR code page/Login page |\n| WAP | None | None | QR code page/Login page |\n| App | None | None | QR code page/Login page |\n| Giropay | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| iDEAL | Web | None | None | QR code page |\n| WAP | None | None | QR code page |\n| App | None | None | QR code page |\n| PayU | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Przelewy24 | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Sofort | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| EPS | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| Pay-easy | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| BCA | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| BNI | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| BRI | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| FPX | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n| UBP | Web | None | None | Login page |\n| WAP | None | None | Login page |\n| App | None | None | Login page |\n\n\n\n### Card\n\n\n\n| **Payment method** | **Client type** | **schemeUrl** | **applinkUrl** | **normalUrl** |\n| --- | --- | --- | --- | --- |\n| Card | Web | None | None | Payment factor collection page |\n| WAP | None | None | Payment factor collection page |\n| App | None | None | Payment factor collection page |\n\n\n\nTo view the latest updates to the documentation, visit [Release notes](https://global.alipay.com/docs/releasenotes).\n\n![Image 3](https://ac.alipay.com/storage/2021/5/20/19b2c126-9442-4f16-8f20-e539b1db482a.png)![Image 4](https://ac.alipay.com/storage/2021/5/20/e9f3f154-dbf0-455f-89f0-b3d4e0c14481.png)\n\n@2024 Alipay [Legal Information](https://global.alipay.com/docs/ac/platform/membership)\n\n#### Is this page helpful?\n\n#### On this page\n\n[Alipay+ payment method](#llIDg \"Alipay+ payment method\")\n\n[Wallet](#lxCHZ \"Wallet\")\n\n[Mobile banking app](#kAUAW \"Mobile banking app\")\n\n[Bank transfer](#O473w \"Bank transfer\")\n\n[Online banking](#M8zbb \"Online banking\")\n\n[Card](#7Am8P \"Card\")": "支付方式返回的URL | 结账支付 | 支付宝文档\n==================\n\n[![图片1：中国领先的第三方在线支付解决方案 - 支付宝](https://ac.alipay.com/storage/2024/3/26/d66c43c0-440d-4c97-9976-f2028a2c8c5e.svg)![图片2：中国领先的第三方在线支付解决方案 - 支付宝](https://ac.alipay.com/storage/2024/3/26/a48bd336-aea0-4f16-bf83-616eacbb4434.svg)](/docs/zh-cn/)\n\n[登录](https://global.alipay.com/ilogin/account_login.htm?goto=https%3A%2F%2Fglobal.alipay.com%2Fdocs%2Fac%2Fcashierpay%2Furls)\n\n[返回首页](../../zh-cn/)\n\n结账支付\n\n[概述](/docs/zh-cn/ac/cashierpay/overview)\n\n- 接受支付\n- 支付后处理\n- 支付方式\n- 其他资源\n\n[如何正确使用支付继续URL](/docs/zh-cn/ac/cashierpay/config)\n\n[支付方式返回的URL](/docs/zh-cn/ac/cashierpay/urls)\n\n[联名卡合规性](/docs/zh-cn/ac/cashierpay/co-badged_cards_compliance)\n\n[生产测试用例](/docs/zh-cn/ac/cashierpay/testcases)"
}