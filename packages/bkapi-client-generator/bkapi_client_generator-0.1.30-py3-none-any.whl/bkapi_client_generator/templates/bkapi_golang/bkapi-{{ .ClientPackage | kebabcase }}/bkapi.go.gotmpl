// Code generated by apigateway. DO NOT EDIT.

package {{ kebabcase .Package | replace "-" "" }}

import (
	"github.com/TencentBlueKing/bk-apigateway-sdks/core/bkapi"
	"github.com/TencentBlueKing/bk-apigateway-sdks/core/define"
)

// VERSION for resource definitions
const VERSION = "{{ .Info.Version }}"

// Client for bkapi {{ .Package }}
type Client struct {
	define.BkApiClient
}

// New {{ .Package }} client
func New(configProvider define.ClientConfigProvider, opts ...define.BkApiClientOption) (*Client, error) {
	client, err := bkapi.NewBkApiClient("{{ kebabcase .Package }}", configProvider, opts...)
	if err != nil {
		return nil, err
	}

	return &Client{BkApiClient: client}, nil
}

{{ range .Operations }}
{{- $name := pascalize .Name -}}
{{- $docs := list (printf "%s for bkapi resource %s" $name .Name ) -}}

{{- with .Summary -}}
{{- $docs = concat $docs (regexSplit "\r?\n" . -1 ) -}}
{{- end -}}

{{- with .Description -}}
{{- $docs = concat $docs (regexSplit "\r?\n" . -1 ) -}}
{{- end -}}

{{- range $docs }}
// {{ . }}
{{- end }}
func (c *Client) {{ $name }}(opts ...define.OperationOption) define.Operation {
	return c.BkApiClient.NewOperation(bkapi.OperationConfig{
		Name:   "{{ .Name }}",
		Method: "{{ upper .Method }}",
		Path:   "{{ .Path }}",
	}, opts...)
}

{{ end -}}