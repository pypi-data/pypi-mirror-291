# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .open_api_number_property_request import OpenApiNumberPropertyRequest
from .open_api_integer_property_request import OpenApiIntegerPropertyRequest
from .open_api_array_property_request import OpenApiArrayPropertyRequest
from .open_api_object_property_request import OpenApiObjectPropertyRequest
from .open_api_property_request import OpenApiPropertyRequest
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class MlModelParameterConfigRequest(UniversalBaseModel):
    temperature: typing.Optional[OpenApiNumberPropertyRequest] = None
    max_tokens: typing.Optional[OpenApiIntegerPropertyRequest] = None
    stop: typing.Optional[OpenApiArrayPropertyRequest] = None
    top_p: typing.Optional[OpenApiNumberPropertyRequest] = None
    top_k: typing.Optional[OpenApiIntegerPropertyRequest] = None
    frequency_penalty: typing.Optional[OpenApiNumberPropertyRequest] = None
    presence_penalty: typing.Optional[OpenApiNumberPropertyRequest] = None
    logit_bias: typing.Optional[OpenApiObjectPropertyRequest] = None
    custom_parameters: typing.Optional[typing.Dict[str, typing.Optional[OpenApiPropertyRequest]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
