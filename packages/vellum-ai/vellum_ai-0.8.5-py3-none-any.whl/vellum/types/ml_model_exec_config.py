# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .ml_model_feature import MlModelFeature
import pydantic
from .ml_model_tokenizer_config import MlModelTokenizerConfig
from .ml_model_request_config import MlModelRequestConfig
from .ml_model_response_config import MlModelResponseConfig
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class MlModelExecConfig(UniversalBaseModel):
    model_identifier: str
    base_url: str
    metadata: typing.Dict[str, typing.Optional[typing.Any]]
    features: typing.List[MlModelFeature]
    force_system_credentials: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Can only be set when using an internal service token.
    """

    tokenizer_config: typing.Optional[MlModelTokenizerConfig] = None
    request_config: typing.Optional[MlModelRequestConfig] = None
    response_config: typing.Optional[MlModelResponseConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
