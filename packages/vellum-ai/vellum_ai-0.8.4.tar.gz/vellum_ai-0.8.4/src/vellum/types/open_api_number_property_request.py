# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class OpenApiNumberPropertyRequest(UniversalBaseModel):
    """
    An OpenAPI specification of a property with type 'number'
    """

    type: typing.Literal["number"] = "number"
    minimum: typing.Optional[float] = None
    maximum: typing.Optional[float] = None
    format: typing.Optional[str] = None
    exclusive_minimum: typing.Optional[bool] = None
    exclusive_maximum: typing.Optional[bool] = None
    default: typing.Optional[float] = None
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
