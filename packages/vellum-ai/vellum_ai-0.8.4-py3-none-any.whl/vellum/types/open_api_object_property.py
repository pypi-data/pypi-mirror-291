# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class OpenApiObjectProperty(UniversalBaseModel):
    """
    An OpenAPI specification of a property with type 'object'
    """

    type: typing.Literal["object"] = "object"
    properties: typing.Optional[typing.Dict[str, typing.Optional["OpenApiProperty"]]] = None
    required: typing.Optional[typing.List[str]] = None
    min_properties: typing.Optional[int] = None
    max_properties: typing.Optional[int] = None
    property_names: typing.Optional["OpenApiProperty"] = None
    additional_properties: typing.Optional["OpenApiProperty"] = None
    pattern_properties: typing.Optional[typing.Dict[str, typing.Optional["OpenApiProperty"]]] = None
    default: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .open_api_property import OpenApiProperty  # noqa: E402

update_forward_refs(OpenApiObjectProperty)
