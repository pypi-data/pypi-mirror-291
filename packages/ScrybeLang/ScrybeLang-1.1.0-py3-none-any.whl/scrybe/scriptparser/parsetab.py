
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftINleftEQUALTONOTEQUALTOleftLESSTHANGREATERTHANLESSTHANEQUALGREATERTHANEQUALleftPLUSMINUSleftTIMESDIVIDEDBYMODULOleftEXPONENTrightUMINUSAND COMMA COMMENT CONCAT CONCATASSIGN COSTUMEDEC DIRECTIONDEC DIVIDEDBY DIVIDEDBYASSIGN DOT DRAGGABLEDEC ELSE EQUALS EQUALTO EXPONENT EXPONENTASSIGN FALSE FOR FUNCTION GREATERTHAN GREATERTHANEQUAL IF IN LAYERDEC LBRACE LBRACKET LESSTHAN LESSTHANEQUAL LPAREN MINUS MINUSASSIGN MODULO MODULOASSIGN NEWLINE NOT NOTEQUALTO NUMBER OR PLUS PLUSASSIGN RBRACE RBRACKET RETURN ROTATIONSTYLEDEC RPAREN SCRATCH SEMICOLON SIZEDEC SOUNDDEC SPRITENAMEDEC STRING SYMBOL THIS TIMES TIMESASSIGN TRUE UMINUS VARIABLE VISIBILITYDEC WARP WHILE XDEC YDECprogram : meta_declaration_list top_level_statement_list\n               | meta_declaration_list\n               | top_level_statement_list\n               | meta_declaration_list : meta_declaration meta_declaration_list\n                             | meta_declarationmeta_declaration : SPRITENAMEDEC STRING\n                        | COSTUMEDEC STRING\n                        | COSTUMEDEC list\n                        | SOUNDDEC STRING\n                        | SOUNDDEC list\n                        | VISIBILITYDEC boolean\n                        | XDEC NUMBER\n                        | YDEC NUMBER\n                        | SIZEDEC NUMBER\n                        | DIRECTIONDEC NUMBER\n                        | DRAGGABLEDEC boolean\n                        | ROTATIONSTYLEDEC STRING\n                        | LAYERDEC NUMBERtop_level_statement_list : top_level_statement\n                                | top_level_statement top_level_statement_listtop_level_statement : set_variable SEMICOLON\n                           | hat\n                           | function_decsingle_statement : set_variable\n                        | in_place_assignment\n                        | index_assign\n                        | function_callstatement : single_statement SEMICOLON\n                 | if\n                 | if_else\n                 | for\n                 | while\n                 | returnstatement_list : statement\n                      | statement statement_listboolean : TRUE\n               | FALSEexpression_list : expression\n                       | expression COMMA expression_listvariable_list : VARIABLE\n                     | VARIABLE COMMA variable_listlist : LBRACKET expression_list RBRACKET\n            | LBRACKET RBRACKETvariable : attribute_of\n                | VARIABLEindex : expression LBRACKET expression RBRACKETindex_assign : index EQUALS expressionattribute_of : SCRATCH DOT VARIABLE\n                    | THIS DOT VARIABLE\n                    | VARIABLE DOT VARIABLE\n                    | attribute_of DOT VARIABLEconcatenation : expression CONCAT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDEDBY expression\n                  | expression MODULO expression\n                  | expression EXPONENT expression\n                  | MINUS expression %prec UMINUS\n                  | LPAREN expression RPAREN\n                  | function_call\n                  | condition\n                  | concatenation\n                  | STRING\n                  | NUMBER\n                  | variable\n                  | indexin_place_assignment : variable PLUSASSIGN expression\n                           | variable MINUSASSIGN expression\n                           | variable TIMESASSIGN expression\n                           | variable DIVIDEDBYASSIGN expression\n                           | variable MODULOASSIGN expression\n                           | variable EXPONENTASSIGN expression\n                           | variable CONCATASSIGN expressionset_variable : variable EQUALS expression\n                    | variable EQUALS listfunction_call : variable function_argumentscondition : expression LESSTHAN expression\n                 | expression GREATERTHAN expression\n                 | expression LESSTHANEQUAL expression\n                 | expression GREATERTHANEQUAL expression\n                 | expression EQUALTO expression\n                 | expression NOTEQUALTO expression\n                 | expression AND expression\n                 | expression OR expression\n                 | expression IN expression\n                 | NOT expression\n                 | booleancontainer_body : statement\n                      | LBRACE RBRACE\n                      | LBRACE statement_list RBRACEif : IF LPAREN expression RPAREN container_bodyif_else : if ELSE container_bodyfor : FOR LPAREN set_variable SEMICOLON expression SEMICOLON single_statement RPAREN container_bodywhile : WHILE LPAREN expression RPAREN container_bodyhat : variable function_arguments container_bodyfunction_arguments : LPAREN RPAREN\n                          | LPAREN expression_list RPARENfunction_parameters : LPAREN RPAREN\n                           | LPAREN variable_list RPARENreturn : RETURN SEMICOLON\n              | RETURN expression SEMICOLONfunction_dec : FUNCTION VARIABLE function_parameters container_body\n                    | WARP FUNCTION VARIABLE function_parameters container_body'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,18,19,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,57,73,74,77,78,79,80,81,101,131,134,139,143,174,176,181,185,191,193,197,],[-4,0,-2,-3,-6,-20,-23,-24,-1,-5,-21,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,-44,-97,-90,-30,-31,-32,-33,-34,-43,-91,-29,-102,-104,-92,-94,-103,-105,-93,-96,-95,]),'SPRITENAMEDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[6,6,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'COSTUMEDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[7,7,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'SOUNDDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[8,8,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'VISIBILITYDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[9,9,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'XDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[10,10,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'YDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[11,11,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'SIZEDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[12,12,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'DIRECTIONDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[13,13,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'DRAGGABLEDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[14,14,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'ROTATIONSTYLEDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[15,15,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'LAYERDEC':([0,4,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,57,101,],[16,16,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-44,-43,]),'FUNCTION':([0,2,4,5,18,19,23,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,57,73,74,77,78,79,80,81,101,131,134,139,143,174,176,181,185,191,193,197,],[21,21,-6,21,-23,-24,52,-5,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,-44,-97,-90,-30,-31,-32,-33,-34,-43,-91,-29,-102,-104,-92,-94,-103,-105,-93,-96,-95,]),'WARP':([0,2,4,5,18,19,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,57,73,74,77,78,79,80,81,101,131,134,139,143,174,176,181,185,191,193,197,],[23,23,-6,23,-23,-24,-5,-7,-8,-9,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,-44,-97,-90,-30,-31,-32,-33,-34,-43,-91,-29,-102,-104,-92,-94,-103,-105,-93,-96,-95,]),'VARIABLE':([0,2,4,5,18,19,21,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,59,60,68,73,74,75,77,78,79,80,81,90,92,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,141,142,143,144,147,174,176,181,183,184,185,187,188,189,191,193,194,196,197,],[22,22,-6,22,-23,-24,50,-5,-7,-8,-9,22,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,22,22,22,96,97,98,99,100,-44,22,22,22,-97,-90,22,-30,-31,-32,-33,-34,22,-98,22,146,-43,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-91,22,-29,22,22,22,22,-102,22,-99,-104,-100,22,-92,-94,-103,-101,146,-105,22,22,22,-93,-96,22,22,-95,]),'SCRATCH':([0,2,4,5,18,19,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,68,73,74,75,77,78,79,80,81,90,92,94,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,141,142,143,144,147,174,176,181,183,185,187,188,189,191,193,194,196,197,],[25,25,-6,25,-23,-24,-5,-7,-8,-9,25,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,25,25,25,-44,25,25,25,-97,-90,25,-30,-31,-32,-33,-34,25,-98,25,-43,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-91,25,-29,25,25,25,25,-102,25,-99,-104,-100,25,-92,-94,-103,-101,-105,25,25,25,-93,-96,25,25,-95,]),'THIS':([0,2,4,5,18,19,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,68,73,74,75,77,78,79,80,81,90,92,94,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,141,142,143,144,147,174,176,181,183,185,187,188,189,191,193,194,196,197,],[26,26,-6,26,-23,-24,-5,-7,-8,-9,26,-10,-11,-12,-37,-38,-13,-14,-15,-16,-17,-18,-19,-22,26,26,26,-44,26,26,26,-97,-90,26,-30,-31,-32,-33,-34,26,-98,26,-43,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-91,26,-29,26,26,26,26,-102,26,-99,-104,-100,26,-92,-94,-103,-101,-105,26,26,26,-93,-96,26,26,-95,]),'STRING':([6,7,8,15,33,47,48,49,59,60,68,74,75,77,78,79,80,81,90,92,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[30,31,34,44,64,64,64,64,64,64,64,-90,64,-30,-31,-32,-33,-34,64,-98,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-91,64,-29,64,64,64,-102,64,-99,-100,64,-92,-94,-103,-101,64,64,64,-93,-96,64,64,-95,]),'LBRACKET':([7,8,22,24,37,38,47,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[33,33,-46,-45,-37,-38,33,119,-62,-63,-64,-65,-66,-67,-68,-89,119,-67,-62,119,-68,-98,-51,-52,-49,-50,-60,119,-78,-88,119,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,119,119,-61,119,119,119,119,119,119,119,119,119,119,-47,119,]),'TRUE':([9,14,33,47,48,49,59,60,68,74,75,77,78,79,80,81,90,92,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[37,37,37,37,37,37,37,37,37,-90,37,-30,-31,-32,-33,-34,37,-98,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-91,37,-29,37,37,37,-102,37,-99,-100,37,-92,-94,-103,-101,37,37,37,-93,-96,37,37,-95,]),'FALSE':([9,14,33,47,48,49,59,60,68,74,75,77,78,79,80,81,90,92,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[38,38,38,38,38,38,38,38,38,-90,38,-30,-31,-32,-33,-34,38,-98,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-91,38,-29,38,38,38,-102,38,-99,-100,38,-92,-94,-103,-101,38,38,38,-93,-96,38,38,-95,]),'NUMBER':([10,11,12,13,16,33,47,48,49,59,60,68,74,75,77,78,79,80,81,90,92,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[39,40,41,42,45,65,65,65,65,65,65,65,-90,65,-30,-31,-32,-33,-34,65,-98,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-91,65,-29,65,65,65,-102,65,-99,-100,65,-92,-94,-103,-101,65,65,65,-93,-96,65,65,-95,]),'SEMICOLON':([17,22,24,37,38,57,61,62,63,64,65,66,67,69,70,71,76,82,83,84,85,90,92,96,98,99,100,101,120,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,178,182,186,192,],[46,-46,-45,-37,-38,-44,-62,-63,-64,-65,-66,-67,-68,-89,-76,-77,134,-25,-26,-27,-28,139,-98,-51,-52,-49,-50,-43,-60,-78,-88,181,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,-53,-61,-69,-70,-71,-72,-73,-74,-75,188,-48,-47,194,]),'EQUALS':([20,22,24,72,91,96,98,99,100,179,186,],[47,-46,-45,47,141,-51,-52,-49,-50,47,-47,]),'LPAREN':([20,22,24,33,47,48,49,50,59,60,66,68,72,74,75,77,78,79,80,81,86,88,89,90,92,94,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[49,-46,-45,60,60,60,60,95,60,60,49,60,49,-90,60,-30,-31,-32,-33,-34,136,137,138,60,-98,60,-51,95,-52,-49,-50,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-91,60,-29,60,60,60,-102,60,-99,-100,60,-92,-94,-103,-101,60,60,60,-93,-96,60,60,-95,]),'COMMA':([22,24,37,38,58,61,62,63,64,65,66,67,69,92,96,98,99,100,120,122,123,142,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,186,],[-46,-45,-37,-38,102,-62,-63,-64,-65,-66,-67,-68,-89,-98,-51,-52,-49,-50,-60,-78,-88,-99,184,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,-53,-61,-47,]),'PLUS':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,103,-62,-63,-64,-65,-66,-67,-68,-89,103,-67,-62,103,-68,-98,-51,-52,-49,-50,-60,103,-78,103,103,-99,-54,-55,-56,-57,-58,-59,103,103,103,103,103,103,103,103,103,103,103,-61,103,103,103,103,103,103,103,103,103,103,-47,103,]),'MINUS':([22,24,33,37,38,47,48,49,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,77,78,79,80,81,85,87,90,91,92,94,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,141,142,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,180,181,182,183,186,187,188,189,191,192,193,194,196,197,],[-46,-45,59,-37,-38,59,59,59,104,59,59,-62,-63,-64,-65,-66,-67,-68,59,-89,104,-67,-90,59,-30,-31,-32,-33,-34,-62,104,59,-68,-98,59,-51,-52,-49,-50,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-60,104,-78,104,59,59,59,59,59,59,59,-91,59,-29,59,59,59,-102,104,59,-99,-100,59,-54,-55,-56,-57,-58,-59,104,104,104,104,104,104,104,104,104,104,104,-61,104,104,104,104,104,104,104,-92,-94,104,104,-103,104,-101,-47,59,59,59,-93,104,-96,59,59,-95,]),'TIMES':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,105,-62,-63,-64,-65,-66,-67,-68,-89,105,-67,-62,105,-68,-98,-51,-52,-49,-50,-60,105,-78,105,105,-99,105,105,-56,-57,-58,-59,105,105,105,105,105,105,105,105,105,105,105,-61,105,105,105,105,105,105,105,105,105,105,-47,105,]),'DIVIDEDBY':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,106,-62,-63,-64,-65,-66,-67,-68,-89,106,-67,-62,106,-68,-98,-51,-52,-49,-50,-60,106,-78,106,106,-99,106,106,-56,-57,-58,-59,106,106,106,106,106,106,106,106,106,106,106,-61,106,106,106,106,106,106,106,106,106,106,-47,106,]),'MODULO':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,107,-62,-63,-64,-65,-66,-67,-68,-89,107,-67,-62,107,-68,-98,-51,-52,-49,-50,-60,107,-78,107,107,-99,107,107,-56,-57,-58,-59,107,107,107,107,107,107,107,107,107,107,107,-61,107,107,107,107,107,107,107,107,107,107,-47,107,]),'EXPONENT':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,108,-62,-63,-64,-65,-66,-67,-68,-89,108,-67,-62,108,-68,-98,-51,-52,-49,-50,-60,108,-78,108,108,-99,108,108,108,108,108,-59,108,108,108,108,108,108,108,108,108,108,108,-61,108,108,108,108,108,108,108,108,108,108,-47,108,]),'LESSTHAN':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,109,-62,-63,-64,-65,-66,-67,-68,-89,109,-67,-62,109,-68,-98,-51,-52,-49,-50,-60,109,-78,109,109,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,109,109,109,109,109,109,109,-61,109,109,109,109,109,109,109,109,109,109,-47,109,]),'GREATERTHAN':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,110,-62,-63,-64,-65,-66,-67,-68,-89,110,-67,-62,110,-68,-98,-51,-52,-49,-50,-60,110,-78,110,110,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,110,110,110,110,110,110,110,-61,110,110,110,110,110,110,110,110,110,110,-47,110,]),'LESSTHANEQUAL':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,111,-62,-63,-64,-65,-66,-67,-68,-89,111,-67,-62,111,-68,-98,-51,-52,-49,-50,-60,111,-78,111,111,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,111,111,111,111,111,111,111,-61,111,111,111,111,111,111,111,111,111,111,-47,111,]),'GREATERTHANEQUAL':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,112,-62,-63,-64,-65,-66,-67,-68,-89,112,-67,-62,112,-68,-98,-51,-52,-49,-50,-60,112,-78,112,112,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,112,112,112,112,112,112,112,-61,112,112,112,112,112,112,112,112,112,112,-47,112,]),'EQUALTO':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,113,-62,-63,-64,-65,-66,-67,-68,-89,113,-67,-62,113,-68,-98,-51,-52,-49,-50,-60,113,-78,113,113,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,113,113,113,113,113,-61,113,113,113,113,113,113,113,113,113,113,-47,113,]),'NOTEQUALTO':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,114,-62,-63,-64,-65,-66,-67,-68,-89,114,-67,-62,114,-68,-98,-51,-52,-49,-50,-60,114,-78,114,114,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,114,114,114,114,114,-61,114,114,114,114,114,114,114,114,114,114,-47,114,]),'AND':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,115,-62,-63,-64,-65,-66,-67,-68,-89,115,-67,-62,115,-68,-98,-51,-52,-49,-50,-60,115,-78,-88,115,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,115,-87,115,115,-61,115,115,115,115,115,115,115,115,115,115,-47,115,]),'OR':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,116,-62,-63,-64,-65,-66,-67,-68,-89,116,-67,-62,116,-68,-98,-51,-52,-49,-50,-60,116,-78,-88,116,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,116,116,-61,116,116,116,116,116,116,116,116,116,116,-47,116,]),'IN':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,117,-62,-63,-64,-65,-66,-67,-68,-89,117,-67,-62,117,-68,-98,-51,-52,-49,-50,-60,117,-78,117,117,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,117,117,-87,117,117,-61,117,117,117,117,117,117,117,117,117,117,-47,117,]),'CONCAT':([22,24,37,38,58,61,62,63,64,65,66,67,69,70,72,85,87,91,92,96,98,99,100,120,121,122,123,140,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,180,182,186,192,],[-46,-45,-37,-38,118,-62,-63,-64,-65,-66,-67,-68,-89,118,-67,-62,118,-68,-98,-51,-52,-49,-50,-60,118,-78,-88,118,-99,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,118,118,-61,118,118,118,118,118,118,118,118,118,118,-47,118,]),'RBRACKET':([22,24,33,37,38,56,58,61,62,63,64,65,66,67,69,92,96,98,99,100,120,122,123,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,186,],[-46,-45,57,-37,-38,101,-39,-62,-63,-64,-65,-66,-67,-68,-89,-98,-51,-52,-49,-50,-60,-78,-88,-99,-40,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,-53,186,-61,-47,]),'RPAREN':([22,24,37,38,49,57,58,61,62,63,64,65,66,67,69,70,71,82,83,84,85,92,93,95,96,98,99,100,101,120,121,122,123,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,177,180,182,186,190,195,],[-46,-45,-37,-38,92,-44,-39,-62,-63,-64,-65,-66,-67,-68,-89,-76,-77,-25,-26,-27,-28,-98,142,144,-51,-52,-49,-50,-43,-60,166,-78,-88,-99,183,-41,-40,-54,-55,-56,-57,-58,-59,-79,-80,-81,-82,-83,-84,-85,-86,-87,-53,-61,-69,-70,-71,-72,-73,-74,-75,187,189,-48,-47,-42,196,]),'PLUSASSIGN':([22,24,72,96,98,99,100,],[-46,-45,124,-51,-52,-49,-50,]),'MINUSASSIGN':([22,24,72,96,98,99,100,],[-46,-45,125,-51,-52,-49,-50,]),'TIMESASSIGN':([22,24,72,96,98,99,100,],[-46,-45,126,-51,-52,-49,-50,]),'DIVIDEDBYASSIGN':([22,24,72,96,98,99,100,],[-46,-45,127,-51,-52,-49,-50,]),'MODULOASSIGN':([22,24,72,96,98,99,100,],[-46,-45,128,-51,-52,-49,-50,]),'EXPONENTASSIGN':([22,24,72,96,98,99,100,],[-46,-45,129,-51,-52,-49,-50,]),'CONCATASSIGN':([22,24,72,96,98,99,100,],[-46,-45,130,-51,-52,-49,-50,]),'DOT':([22,24,25,26,96,98,99,100,],[51,53,54,55,-51,-52,-49,-50,]),'NOT':([33,47,48,49,59,60,68,74,75,77,78,79,80,81,90,92,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,133,134,135,136,138,139,141,142,144,147,174,176,181,183,187,188,189,191,193,194,196,197,],[68,68,68,68,68,68,68,-90,68,-30,-31,-32,-33,-34,68,-98,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-91,68,-29,68,68,68,-102,68,-99,-100,68,-92,-94,-103,-101,68,68,68,-93,-96,68,68,-95,]),'LBRACE':([48,92,94,135,142,144,147,183,187,189,196,],[75,-98,75,75,-99,-100,75,-101,75,75,75,]),'IF':([48,74,75,77,78,79,80,81,92,94,131,133,134,135,139,142,144,147,174,176,181,183,187,189,191,193,196,197,],[86,-90,86,-30,-31,-32,-33,-34,-98,86,-91,86,-29,86,-102,-99,-100,86,-92,-94,-103,-101,86,86,-93,-96,86,-95,]),'FOR':([48,74,75,77,78,79,80,81,92,94,131,133,134,135,139,142,144,147,174,176,181,183,187,189,191,193,196,197,],[88,-90,88,-30,-31,-32,-33,-34,-98,88,-91,88,-29,88,-102,-99,-100,88,-92,-94,-103,-101,88,88,-93,-96,88,-95,]),'WHILE':([48,74,75,77,78,79,80,81,92,94,131,133,134,135,139,142,144,147,174,176,181,183,187,189,191,193,196,197,],[89,-90,89,-30,-31,-32,-33,-34,-98,89,-91,89,-29,89,-102,-99,-100,89,-92,-94,-103,-101,89,89,-93,-96,89,-95,]),'RETURN':([48,74,75,77,78,79,80,81,92,94,131,133,134,135,139,142,144,147,174,176,181,183,187,189,191,193,196,197,],[90,-90,90,-30,-31,-32,-33,-34,-98,90,-91,90,-29,90,-102,-99,-100,90,-92,-94,-103,-101,90,90,-93,-96,90,-95,]),'RBRACE':([74,75,77,78,79,80,81,131,132,133,134,139,174,175,176,181,191,193,197,],[-90,131,-30,-31,-32,-33,-34,-91,174,-35,-29,-102,-92,-36,-94,-103,-93,-96,-95,]),'ELSE':([74,77,78,79,80,81,131,134,139,174,176,181,191,193,197,],[-90,135,-31,-32,-33,-34,-91,-29,-102,-92,-94,-103,-93,-96,-95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'meta_declaration_list':([0,4,],[2,28,]),'top_level_statement_list':([0,2,5,],[3,27,29,]),'meta_declaration':([0,4,],[4,4,]),'top_level_statement':([0,2,5,],[5,5,5,]),'set_variable':([0,2,5,48,75,94,133,135,137,147,187,189,194,196,],[17,17,17,82,82,82,82,82,178,82,82,82,82,82,]),'hat':([0,2,5,],[18,18,18,]),'function_dec':([0,2,5,],[19,19,19,]),'variable':([0,2,5,33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,137,138,141,147,187,188,189,194,196,],[20,20,20,66,66,72,66,66,66,66,72,66,72,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,72,72,66,179,66,66,72,72,66,72,72,72,]),'attribute_of':([0,2,5,33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,137,138,141,147,187,188,189,194,196,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'list':([7,8,47,],[32,35,71,]),'boolean':([9,14,33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[36,43,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'function_arguments':([20,66,72,],[48,122,122,]),'expression_list':([33,49,102,],[56,93,148,]),'expression':([33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[58,70,87,58,120,121,123,87,140,87,58,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,87,87,177,180,182,87,87,192,87,87,87,]),'function_call':([33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[61,61,85,61,61,61,61,85,61,85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,85,85,61,61,61,85,85,61,85,85,85,]),'condition':([33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'concatenation':([33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'index':([33,47,48,49,59,60,68,75,90,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,133,135,136,138,141,147,187,188,189,194,196,],[67,67,91,67,67,67,67,91,67,91,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,91,91,67,67,67,91,91,67,91,91,91,]),'container_body':([48,94,135,147,187,189,196,],[73,143,176,185,191,193,197,]),'statement':([48,75,94,133,135,147,187,189,196,],[74,133,74,133,74,74,74,74,74,]),'single_statement':([48,75,94,133,135,147,187,189,194,196,],[76,76,76,76,76,76,76,76,195,76,]),'if':([48,75,94,133,135,147,187,189,196,],[77,77,77,77,77,77,77,77,77,]),'if_else':([48,75,94,133,135,147,187,189,196,],[78,78,78,78,78,78,78,78,78,]),'for':([48,75,94,133,135,147,187,189,196,],[79,79,79,79,79,79,79,79,79,]),'while':([48,75,94,133,135,147,187,189,196,],[80,80,80,80,80,80,80,80,80,]),'return':([48,75,94,133,135,147,187,189,196,],[81,81,81,81,81,81,81,81,81,]),'in_place_assignment':([48,75,94,133,135,147,187,189,194,196,],[83,83,83,83,83,83,83,83,83,83,]),'index_assign':([48,75,94,133,135,147,187,189,194,196,],[84,84,84,84,84,84,84,84,84,84,]),'function_parameters':([50,97,],[94,147,]),'statement_list':([75,133,],[132,175,]),'variable_list':([95,184,],[145,190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> meta_declaration_list top_level_statement_list','program',2,'p_program','parser.py',21),
  ('program -> meta_declaration_list','program',1,'p_program','parser.py',22),
  ('program -> top_level_statement_list','program',1,'p_program','parser.py',23),
  ('program -> <empty>','program',0,'p_program','parser.py',24),
  ('meta_declaration_list -> meta_declaration meta_declaration_list','meta_declaration_list',2,'p_meta_declaration_list','parser.py',44),
  ('meta_declaration_list -> meta_declaration','meta_declaration_list',1,'p_meta_declaration_list','parser.py',45),
  ('meta_declaration -> SPRITENAMEDEC STRING','meta_declaration',2,'p_meta_declaration','parser.py',54),
  ('meta_declaration -> COSTUMEDEC STRING','meta_declaration',2,'p_meta_declaration','parser.py',55),
  ('meta_declaration -> COSTUMEDEC list','meta_declaration',2,'p_meta_declaration','parser.py',56),
  ('meta_declaration -> SOUNDDEC STRING','meta_declaration',2,'p_meta_declaration','parser.py',57),
  ('meta_declaration -> SOUNDDEC list','meta_declaration',2,'p_meta_declaration','parser.py',58),
  ('meta_declaration -> VISIBILITYDEC boolean','meta_declaration',2,'p_meta_declaration','parser.py',59),
  ('meta_declaration -> XDEC NUMBER','meta_declaration',2,'p_meta_declaration','parser.py',60),
  ('meta_declaration -> YDEC NUMBER','meta_declaration',2,'p_meta_declaration','parser.py',61),
  ('meta_declaration -> SIZEDEC NUMBER','meta_declaration',2,'p_meta_declaration','parser.py',62),
  ('meta_declaration -> DIRECTIONDEC NUMBER','meta_declaration',2,'p_meta_declaration','parser.py',63),
  ('meta_declaration -> DRAGGABLEDEC boolean','meta_declaration',2,'p_meta_declaration','parser.py',64),
  ('meta_declaration -> ROTATIONSTYLEDEC STRING','meta_declaration',2,'p_meta_declaration','parser.py',65),
  ('meta_declaration -> LAYERDEC NUMBER','meta_declaration',2,'p_meta_declaration','parser.py',66),
  ('top_level_statement_list -> top_level_statement','top_level_statement_list',1,'p_top_level_statement_list','parser.py',80),
  ('top_level_statement_list -> top_level_statement top_level_statement_list','top_level_statement_list',2,'p_top_level_statement_list','parser.py',81),
  ('top_level_statement -> set_variable SEMICOLON','top_level_statement',2,'p_top_level_statement','parser.py',88),
  ('top_level_statement -> hat','top_level_statement',1,'p_top_level_statement','parser.py',89),
  ('top_level_statement -> function_dec','top_level_statement',1,'p_top_level_statement','parser.py',90),
  ('single_statement -> set_variable','single_statement',1,'p_single_statement','parser.py',94),
  ('single_statement -> in_place_assignment','single_statement',1,'p_single_statement','parser.py',95),
  ('single_statement -> index_assign','single_statement',1,'p_single_statement','parser.py',96),
  ('single_statement -> function_call','single_statement',1,'p_single_statement','parser.py',97),
  ('statement -> single_statement SEMICOLON','statement',2,'p_statement','parser.py',101),
  ('statement -> if','statement',1,'p_statement','parser.py',102),
  ('statement -> if_else','statement',1,'p_statement','parser.py',103),
  ('statement -> for','statement',1,'p_statement','parser.py',104),
  ('statement -> while','statement',1,'p_statement','parser.py',105),
  ('statement -> return','statement',1,'p_statement','parser.py',106),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',110),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',111),
  ('boolean -> TRUE','boolean',1,'p_boolean','parser.py',118),
  ('boolean -> FALSE','boolean',1,'p_boolean','parser.py',119),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',123),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',124),
  ('variable_list -> VARIABLE','variable_list',1,'p_variable_list','parser.py',131),
  ('variable_list -> VARIABLE COMMA variable_list','variable_list',3,'p_variable_list','parser.py',132),
  ('list -> LBRACKET expression_list RBRACKET','list',3,'p_list','parser.py',139),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parser.py',140),
  ('variable -> attribute_of','variable',1,'p_variable','parser.py',147),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',148),
  ('index -> expression LBRACKET expression RBRACKET','index',4,'p_index','parser.py',159),
  ('index_assign -> index EQUALS expression','index_assign',3,'p_index_assign','parser.py',168),
  ('attribute_of -> SCRATCH DOT VARIABLE','attribute_of',3,'p_attribute_of','parser.py',178),
  ('attribute_of -> THIS DOT VARIABLE','attribute_of',3,'p_attribute_of','parser.py',179),
  ('attribute_of -> VARIABLE DOT VARIABLE','attribute_of',3,'p_attribute_of','parser.py',180),
  ('attribute_of -> attribute_of DOT VARIABLE','attribute_of',3,'p_attribute_of','parser.py',181),
  ('concatenation -> expression CONCAT expression','concatenation',3,'p_concatenation','parser.py',190),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',199),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',200),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',201),
  ('expression -> expression DIVIDEDBY expression','expression',3,'p_expression','parser.py',202),
  ('expression -> expression MODULO expression','expression',3,'p_expression','parser.py',203),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression','parser.py',204),
  ('expression -> MINUS expression','expression',2,'p_expression','parser.py',205),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',206),
  ('expression -> function_call','expression',1,'p_expression','parser.py',207),
  ('expression -> condition','expression',1,'p_expression','parser.py',208),
  ('expression -> concatenation','expression',1,'p_expression','parser.py',209),
  ('expression -> STRING','expression',1,'p_expression','parser.py',210),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',211),
  ('expression -> variable','expression',1,'p_expression','parser.py',212),
  ('expression -> index','expression',1,'p_expression','parser.py',213),
  ('in_place_assignment -> variable PLUSASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',241),
  ('in_place_assignment -> variable MINUSASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',242),
  ('in_place_assignment -> variable TIMESASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',243),
  ('in_place_assignment -> variable DIVIDEDBYASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',244),
  ('in_place_assignment -> variable MODULOASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',245),
  ('in_place_assignment -> variable EXPONENTASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',246),
  ('in_place_assignment -> variable CONCATASSIGN expression','in_place_assignment',3,'p_in_place_assignment','parser.py',247),
  ('set_variable -> variable EQUALS expression','set_variable',3,'p_set_variable','parser.py',257),
  ('set_variable -> variable EQUALS list','set_variable',3,'p_set_variable','parser.py',258),
  ('function_call -> variable function_arguments','function_call',2,'p_function_call','parser.py',267),
  ('condition -> expression LESSTHAN expression','condition',3,'p_condition','parser.py',276),
  ('condition -> expression GREATERTHAN expression','condition',3,'p_condition','parser.py',277),
  ('condition -> expression LESSTHANEQUAL expression','condition',3,'p_condition','parser.py',278),
  ('condition -> expression GREATERTHANEQUAL expression','condition',3,'p_condition','parser.py',279),
  ('condition -> expression EQUALTO expression','condition',3,'p_condition','parser.py',280),
  ('condition -> expression NOTEQUALTO expression','condition',3,'p_condition','parser.py',281),
  ('condition -> expression AND expression','condition',3,'p_condition','parser.py',282),
  ('condition -> expression OR expression','condition',3,'p_condition','parser.py',283),
  ('condition -> expression IN expression','condition',3,'p_condition','parser.py',284),
  ('condition -> NOT expression','condition',2,'p_condition','parser.py',285),
  ('condition -> boolean','condition',1,'p_condition','parser.py',286),
  ('container_body -> statement','container_body',1,'p_container_body','parser.py',306),
  ('container_body -> LBRACE RBRACE','container_body',2,'p_container_body','parser.py',307),
  ('container_body -> LBRACE statement_list RBRACE','container_body',3,'p_container_body','parser.py',308),
  ('if -> IF LPAREN expression RPAREN container_body','if',5,'p_if','parser.py',317),
  ('if_else -> if ELSE container_body','if_else',3,'p_if_else','parser.py',326),
  ('for -> FOR LPAREN set_variable SEMICOLON expression SEMICOLON single_statement RPAREN container_body','for',9,'p_for','parser.py',336),
  ('while -> WHILE LPAREN expression RPAREN container_body','while',5,'p_while','parser.py',347),
  ('hat -> variable function_arguments container_body','hat',3,'p_hat','parser.py',356),
  ('function_arguments -> LPAREN RPAREN','function_arguments',2,'p_function_arguments','parser.py',366),
  ('function_arguments -> LPAREN expression_list RPAREN','function_arguments',3,'p_function_arguments','parser.py',367),
  ('function_parameters -> LPAREN RPAREN','function_parameters',2,'p_function_parameters','parser.py',374),
  ('function_parameters -> LPAREN variable_list RPAREN','function_parameters',3,'p_function_parameters','parser.py',375),
  ('return -> RETURN SEMICOLON','return',2,'p_return','parser.py',382),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','parser.py',383),
  ('function_dec -> FUNCTION VARIABLE function_parameters container_body','function_dec',4,'p_function_dec','parser.py',396),
  ('function_dec -> WARP FUNCTION VARIABLE function_parameters container_body','function_dec',5,'p_function_dec','parser.py',397),
]
