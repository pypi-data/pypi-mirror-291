[build-system]
requires = ["scikit-build-core[pyproject]>=0.9.2"]
build-backend = "scikit_build_core.build"

[project]
name = "nexaai"
version = "0.0.0.dev"
description = "Nexa AI SDK"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Nexa AI", email = "octopus@nexa4ai.com" }]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
onnx = [
    "librosa",
    "optimum[onnxruntime]>=1.7.3",  # for CPU version
    "diffusers",  # required for image generation
    "optuna",
    "pydantic",
    "PyYAML",
    "requests",
    "setuptools",
    "soundfile",
    "streamlit_audiorec",
    "transformers",
    "ttstokenizer"
]

[project.urls]
Homepage = "https://github.com/NexaAI/nexaai-sdk-cpp"
Issues = "https://github.com/NexaAI/nexaai-sdk-cpp/issues"
Documentation = "https://docs-test.nexa4ai.com/"

[project.scripts]
nexa-cli = "nexa.cli.entry:main"
nexa = "nexa.cli.entry:main"
nexaai = "nexa.cli.entry:main"
nexai = "nexa.cli.entry:main"

[tool.scikit-build]
wheel.packages = [
    "nexa",
    "nexa.cli",
    "nexa.gguf",
    "nexa.gguf.llama",
    "nexa.gguf.sd",
    "nexa.gguf.streamlit",
    "nexa.gguf.server",
    "nexa.onnx",
    "nexa.onnx.streamlit",
    "nexa.onnx.server"
]
cmake.verbose = true
cmake.build-type = "Release"
cmake.minimum-version = "3.21"
minimum-version = "0.5.1"
sdist.include = [".git", "CMakeLists.txt", "dependency/llama.cpp/*", "dependency/stable-diffusion.cpp/*"]

[tool.pytest.ini_options]
testpaths = "tests"
