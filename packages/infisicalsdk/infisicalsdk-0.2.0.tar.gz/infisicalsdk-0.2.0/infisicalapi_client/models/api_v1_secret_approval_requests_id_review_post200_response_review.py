# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime

from pydantic import BaseModel, Field, StrictStr

class ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview(BaseModel):
    """
    ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview
    """
    id: StrictStr = Field(...)
    status: StrictStr = Field(...)
    request_id: StrictStr = Field(default=..., alias="requestId")
    created_at: datetime = Field(default=..., alias="createdAt")
    updated_at: datetime = Field(default=..., alias="updatedAt")
    reviewer_user_id: StrictStr = Field(default=..., alias="reviewerUserId")
    __properties = ["id", "status", "requestId", "createdAt", "updatedAt", "reviewerUserId"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview:
        """Create an instance of ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview:
        """Create an instance of ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview.parse_obj(obj)

        _obj = ApiV1SecretApprovalRequestsIdReviewPost200ResponseReview.parse_obj({
            "id": obj.get("id"),
            "status": obj.get("status"),
            "request_id": obj.get("requestId"),
            "created_at": obj.get("createdAt"),
            "updated_at": obj.get("updatedAt"),
            "reviewer_user_id": obj.get("reviewerUserId")
        })
        return _obj


