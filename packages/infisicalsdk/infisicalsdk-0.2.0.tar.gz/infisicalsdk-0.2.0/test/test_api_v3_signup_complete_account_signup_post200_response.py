# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from infisicalapi_client.models.api_v3_signup_complete_account_signup_post200_response import ApiV3SignupCompleteAccountSignupPost200Response  # noqa: E501

class TestApiV3SignupCompleteAccountSignupPost200Response(unittest.TestCase):
    """ApiV3SignupCompleteAccountSignupPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV3SignupCompleteAccountSignupPost200Response:
        """Test ApiV3SignupCompleteAccountSignupPost200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV3SignupCompleteAccountSignupPost200Response`
        """
        model = ApiV3SignupCompleteAccountSignupPost200Response()  # noqa: E501
        if include_optional:
            return ApiV3SignupCompleteAccountSignupPost200Response(
                message = '',
                user = infisicalapi_client.models._api_v1_password_email_password_reset_verify_post_200_response_user._api_v1_password_email_password_reset_verify_post_200_response_user(
                    id = '', 
                    email = '', 
                    auth_methods = [
                        ''
                        ], 
                    super_admin = True, 
                    first_name = '', 
                    last_name = '', 
                    is_accepted = True, 
                    is_mfa_enabled = True, 
                    mfa_methods = [
                        ''
                        ], 
                    devices = null, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_ghost = True, 
                    username = '', 
                    is_email_verified = True, 
                    consecutive_failed_mfa_attempts = 1.337, 
                    is_locked = True, 
                    temporary_lock_date_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    consecutive_failed_password_attempts = 1.337, ),
                token = '',
                organization_id = ''
            )
        else:
            return ApiV3SignupCompleteAccountSignupPost200Response(
                message = '',
                user = infisicalapi_client.models._api_v1_password_email_password_reset_verify_post_200_response_user._api_v1_password_email_password_reset_verify_post_200_response_user(
                    id = '', 
                    email = '', 
                    auth_methods = [
                        ''
                        ], 
                    super_admin = True, 
                    first_name = '', 
                    last_name = '', 
                    is_accepted = True, 
                    is_mfa_enabled = True, 
                    mfa_methods = [
                        ''
                        ], 
                    devices = null, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_ghost = True, 
                    username = '', 
                    is_email_verified = True, 
                    consecutive_failed_mfa_attempts = 1.337, 
                    is_locked = True, 
                    temporary_lock_date_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    consecutive_failed_password_attempts = 1.337, ),
                token = '',
        )
        """

    def testApiV3SignupCompleteAccountSignupPost200Response(self):
        """Test ApiV3SignupCompleteAccountSignupPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
