# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from infisicalapi_client.models.api_v2_workspace_slug_certificates_get200_response import ApiV2WorkspaceSlugCertificatesGet200Response  # noqa: E501

class TestApiV2WorkspaceSlugCertificatesGet200Response(unittest.TestCase):
    """ApiV2WorkspaceSlugCertificatesGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV2WorkspaceSlugCertificatesGet200Response:
        """Test ApiV2WorkspaceSlugCertificatesGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV2WorkspaceSlugCertificatesGet200Response`
        """
        model = ApiV2WorkspaceSlugCertificatesGet200Response()  # noqa: E501
        if include_optional:
            return ApiV2WorkspaceSlugCertificatesGet200Response(
                certificates = [
                    infisicalapi_client.models._api_v1_pki_certificates__serial_number__get_200_response_certificate._api_v1_pki_certificates__serialNumber__get_200_response_certificate(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ca_id = '', 
                        status = '', 
                        serial_number = '', 
                        friendly_name = '', 
                        common_name = '', 
                        not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revoked_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revocation_reason = 1.337, 
                        alt_names = '', )
                    ],
                total_count = 1.337
            )
        else:
            return ApiV2WorkspaceSlugCertificatesGet200Response(
                certificates = [
                    infisicalapi_client.models._api_v1_pki_certificates__serial_number__get_200_response_certificate._api_v1_pki_certificates__serialNumber__get_200_response_certificate(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ca_id = '', 
                        status = '', 
                        serial_number = '', 
                        friendly_name = '', 
                        common_name = '', 
                        not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revoked_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revocation_reason = 1.337, 
                        alt_names = '', )
                    ],
                total_count = 1.337,
        )
        """

    def testApiV2WorkspaceSlugCertificatesGet200Response(self):
        """Test ApiV2WorkspaceSlugCertificatesGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
