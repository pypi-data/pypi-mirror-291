# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.api_v3_secrets_raw_get200_response_secrets_inner import ApiV3SecretsRawGet200ResponseSecretsInner  # noqa: E501

class TestApiV3SecretsRawGet200ResponseSecretsInner(unittest.TestCase):
    """ApiV3SecretsRawGet200ResponseSecretsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV3SecretsRawGet200ResponseSecretsInner:
        """Test ApiV3SecretsRawGet200ResponseSecretsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV3SecretsRawGet200ResponseSecretsInner`
        """
        model = ApiV3SecretsRawGet200ResponseSecretsInner()  # noqa: E501
        if include_optional:
            return ApiV3SecretsRawGet200ResponseSecretsInner(
                id = '',
                id = '',
                workspace = '',
                environment = '',
                version = 1.337,
                type = '',
                secret_key = '',
                secret_value = '',
                secret_comment = '',
                secret_reminder_note = '',
                secret_reminder_repeat_days = 1.337,
                skip_multiline_encoding = True,
                metadata = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                secret_path = '',
                tags = [
                    openapi_client.models._api_v3_secrets_tags__secret_name__post_200_response_secret_tags_inner._api_v3_secrets_tags__secretName__post_200_response_secret_tags_inner(
                        id = '', 
                        slug = '', 
                        color = '', 
                        name = '', )
                    ]
            )
        else:
            return ApiV3SecretsRawGet200ResponseSecretsInner(
                id = '',
                id = '',
                workspace = '',
                environment = '',
                version = 1.337,
                type = '',
                secret_key = '',
                secret_value = '',
                secret_comment = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testApiV3SecretsRawGet200ResponseSecretsInner(self):
        """Test ApiV3SecretsRawGet200ResponseSecretsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
