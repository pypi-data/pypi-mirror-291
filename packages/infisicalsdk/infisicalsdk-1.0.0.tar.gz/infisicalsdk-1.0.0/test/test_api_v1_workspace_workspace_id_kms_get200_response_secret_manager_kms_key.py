# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.api_v1_workspace_workspace_id_kms_get200_response_secret_manager_kms_key import ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey  # noqa: E501

class TestApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey(unittest.TestCase):
    """ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey:
        """Test ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey`
        """
        model = ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey()  # noqa: E501
        if include_optional:
            return ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey(
                id = '',
                slug = '',
                is_external = True
            )
        else:
            return ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey(
                id = '',
                slug = '',
                is_external = True,
        )
        """

    def testApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey(self):
        """Test ApiV1WorkspaceWorkspaceIdKmsGet200ResponseSecretManagerKmsKey"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
