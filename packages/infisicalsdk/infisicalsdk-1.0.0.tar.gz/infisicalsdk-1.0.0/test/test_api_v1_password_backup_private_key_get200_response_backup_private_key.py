# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.api_v1_password_backup_private_key_get200_response_backup_private_key import ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey  # noqa: E501

class TestApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey(unittest.TestCase):
    """ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey:
        """Test ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey`
        """
        model = ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey()  # noqa: E501
        if include_optional:
            return ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey(
                id = '',
                encrypted_private_key = '',
                iv = '',
                tag = '',
                algorithm = '',
                key_encoding = '',
                salt = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = ''
            )
        else:
            return ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey(
                id = '',
                encrypted_private_key = '',
                iv = '',
                tag = '',
                algorithm = '',
                key_encoding = '',
                salt = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = '',
        )
        """

    def testApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey(self):
        """Test ApiV1PasswordBackupPrivateKeyGet200ResponseBackupPrivateKey"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
