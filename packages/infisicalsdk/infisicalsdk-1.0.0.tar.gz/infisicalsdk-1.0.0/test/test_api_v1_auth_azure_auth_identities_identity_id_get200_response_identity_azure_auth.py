# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.api_v1_auth_azure_auth_identities_identity_id_get200_response_identity_azure_auth import ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth  # noqa: E501

class TestApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth(unittest.TestCase):
    """ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth:
        """Test ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth`
        """
        model = ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth()  # noqa: E501
        if include_optional:
            return ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth(
                id = '',
                access_token_ttl = 1.337,
                access_token_max_ttl = 1.337,
                access_token_num_uses_limit = 1.337,
                access_token_trusted_ips = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                identity_id = '',
                tenant_id = '',
                resource = '',
                allowed_service_principal_ids = ''
            )
        else:
            return ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth(
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                identity_id = '',
                tenant_id = '',
                resource = '',
                allowed_service_principal_ids = '',
        )
        """

    def testApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth(self):
        """Test ApiV1AuthAzureAuthIdentitiesIdentityIdGet200ResponseIdentityAzureAuth"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
