# coding: utf-8

"""
    Infisical API

    List of all available APIs that can be consumed

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.api_v1_integration_post200_response_integration import ApiV1IntegrationPost200ResponseIntegration  # noqa: E501

class TestApiV1IntegrationPost200ResponseIntegration(unittest.TestCase):
    """ApiV1IntegrationPost200ResponseIntegration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1IntegrationPost200ResponseIntegration:
        """Test ApiV1IntegrationPost200ResponseIntegration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1IntegrationPost200ResponseIntegration`
        """
        model = ApiV1IntegrationPost200ResponseIntegration()  # noqa: E501
        if include_optional:
            return ApiV1IntegrationPost200ResponseIntegration(
                id = '',
                is_active = True,
                url = '',
                app = '',
                app_id = '',
                target_environment = '',
                target_environment_id = '',
                target_service = '',
                target_service_id = '',
                owner = '',
                path = '',
                region = '',
                scope = '',
                integration = '',
                metadata = None,
                integration_auth_id = '',
                env_id = '',
                secret_path = '/',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                is_synced = True,
                sync_message = '',
                last_sync_job_id = ''
            )
        else:
            return ApiV1IntegrationPost200ResponseIntegration(
                id = '',
                is_active = True,
                integration = '',
                integration_auth_id = '',
                env_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testApiV1IntegrationPost200ResponseIntegration(self):
        """Test ApiV1IntegrationPost200ResponseIntegration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
