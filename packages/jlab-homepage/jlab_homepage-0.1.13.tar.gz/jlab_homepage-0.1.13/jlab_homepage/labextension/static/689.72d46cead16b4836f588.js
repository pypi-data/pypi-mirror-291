"use strict";(self.webpackChunkjlab_homepage=self.webpackChunkjlab_homepage||[]).push([[689],{689:(e,n,t)=>{t.r(n),t.d(n,{default:()=>u});var o=t(593),a=t(607),s=t(53),i=t(74),r=t(465),d=t(256);class c extends d.Widget{constructor(e){super();const n=e;this.addClass("my-apodWidget");const t=document.createElement("div");t.id="groupContainer",this.node.innerHTML="\n\n        <h2>Workspace</h2>\n        <h4>Bei Fragen oder Gruppenwechsel kontaktieren Sie uns bitte Ã¼ber admin@databrix.org</h4>\n      ",this.node.appendChild(t);for(const e in n){const o=document.createElement("div");o.classList.add("card");const a=document.createElement("div");a.classList.add("group-name"),a.textContent=e;const s=document.createElement("div");s.classList.add("group-items"),n[e].forEach((e=>{const n=document.createElement("div");n.textContent=`- ${e}`,s.appendChild(n)})),o.appendChild(a),o.appendChild(s),t.appendChild(o)}}}class l extends d.Widget{constructor(e,n){super();const t=i.PageConfig.getBaseUrl(),o=new URL(t).pathname,s=window.location.origin;let r;r=o.includes("/user/")?`${s}${o.split("/user/")[0]}`:`${s}`;const d=`${r}`,l=`${r}/hub/admin#/groups`,u=document.createElement("div");u.classList.add("button-container"),this.addClass("my-apodWidget"),this.node.innerHTML='\n        <div class="home-container">\n          <h1>Databrix Lab</h1>\n          <p class="subtitle">Lernen Sie Data Science und Machine Learning in der Praxis!</p>\n        </div>\n      ',this.node.appendChild(u),n?u.innerHTML=`\n          <button data-commandLinker-command="nbgrader:open-formgrader" class="button">\n            <div class="icon"></div>\n            <span>Projekte verwalten</span>\n          </button>\n          <button id="GroupVerwaltenButton" class="button secondary" onclick="window.open('${l}', '_blank');">\n            <div class="icon admin-icon"></div>\n            <span>Gruppen verwalten</span>\n          </button>\n          <button data-commandLinker-command="forum:open" class="button">\n            <div class="icon"></div>\n            <span>Q&A Forum</span>\n          </button>\n        `:(u.innerHTML='\n          <button data-commandLinker-command="nbgrader:open-assignment-list" class="button">\n            <div class="icon"></div>\n            <span>Projekte starten</span>\n          </button>\n          <button id="GroupInfoButton" class="button secondary">\n            <div class="icon"></div>\n            <span>Mein Workspace</span>\n          </button>\n          <button data-commandLinker-command="forum:open" class="button">\n            <div class="icon"></div>\n            <span>Q&A Forum</span>\n          </button>\n        ',this.node.querySelector("#GroupInfoButton").addEventListener("click",(()=>{!async function(e,n){try{const e=new URL(window.location.href).pathname.split("/user/")[1].split("/")[0],t=e.split("_")[1],o=`${n}/hub/api/groups/${t}`;console.log("Subpath after /user/:",e);const s=i.PageConfig.getToken();if(!s)throw new Error("API token is not available from PageConfig.");let r,d;try{const e=await fetch(o,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`token ${s}`}});if(!e.ok)throw new Error(`Network response was not ok: ${e.statusText}`);r=await e.json(),console.log("Response Data:",r),d={"Ihre Gruppe":[t],"Ihre Teammates":r.users}}catch(e){console.error("Error fetching data:",e),d={users:[e]}}const l=new c(d);(0,a.showDialog)({title:"Workspace Information",body:l,buttons:[a.Dialog.okButton()]})}catch(e){let n="Could not retrieve group information.";e.response&&404===e.response.status?n="Server endpoint not found.":e.message&&(n=e.message),(0,a.showDialog)({title:"Error",body:n,buttons:[a.Dialog.okButton()]})}}(0,d)})))}}const u={id:"jlab_homepage:plugin",description:"A JupyterLab extension for databrix homepage with frontend and backend",autoStart:!0,requires:[a.ICommandPalette,o.ILabShell],optional:[o.ILayoutRestorer],activate:function(e,n,t,o,d){var c,u;console.log("JupyterLab extension databrix homepage is activated!");let m=null;(async function(e="",n={}){const t=r.ServerConnection.makeSettings(),o=i.URLExt.join(t.baseUrl,"jlab-homepage",e);let a;try{a=await r.ServerConnection.makeRequest(o,n,t)}catch(e){throw new r.ServerConnection.NetworkError(e)}let s=await a.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new r.ServerConnection.ResponseError(a,s.message||s);return s})("gruppeninfo").then((e=>{m=e.dozent})).catch((e=>{console.error(`The jlab_homepage server extension appears to be missing.\n${e}`)}));const h=null===(u=null===(c=e.serviceManager.user)||void 0===c?void 0:c.identity)||void 0===u?void 0:u.username;let b;const g="launcher:create";e.commands.addCommand(g,{label:"Databrix Lab Homepage",execute:()=>{const n=new l(null!=h?h:"unknown",null!=m&&m);b=new a.MainAreaWidget({content:n});const o="home-"+p.id++;b.id=o,b.title.label="Databrix Lab Homepage",b.title.closable=!0,e.shell.add(b,"main"),e.shell.activateById(b.id),t.layoutModified.connect((()=>{b.title.closable=(0,s.toArray)(e.shell.widgets("main")).length>1}),b)}}),t&&Promise.all([e.restored,null==d?void 0:d.model.restored]).then((()=>{t.layoutModified.connect((()=>{t.isEmpty("main")&&e.commands.execute(g)}))})),n.addItem({command:g,category:"Databrix"}),t&&(t.addButtonEnabled=!0,t.addRequested.connect(((n,t)=>{var o;const a=(null===(o=t.currentTitle)||void 0===o?void 0:o.owner.id)||t.titles[t.titles.length-1].owner.id;return e.commands.execute(g,{ref:a})})))}};var p;!function(e){e.id=0}(p||(p={}))}}]);