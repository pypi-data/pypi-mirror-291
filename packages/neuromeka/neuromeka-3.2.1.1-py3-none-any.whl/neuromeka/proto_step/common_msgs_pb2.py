# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common_msgs.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common_msgs.proto',
  package='Nrmk.IndyFramework',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11\x63ommon_msgs.proto\x12\x12Nrmk.IndyFramework\"\x07\n\x05\x45mpty\"\x17\n\x05State\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x17\n\x07IntMode\x12\x0c\n\x04mode\x18\x01 \x01(\x04\"=\n\x07StopCat\x12\x32\n\x08\x63\x61tegory\x18\x01 \x01(\x0e\x32 .Nrmk.IndyFramework.StopCategory\"?\n\x08PauseCat\x12\x33\n\x08\x63\x61tegory\x18\x01 \x01(\x0e\x32!.Nrmk.IndyFramework.PauseCategory\"%\n\x08Response\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x03\x12\x0b\n\x03msg\x18\x02 \x01(\t\"\x1a\n\x07Message\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\t*\xc9\x02\n\x07OpState\x12\x11\n\rOP_SYSTEM_OFF\x10\x00\x12\x10\n\x0cOP_SYSTEM_ON\x10\x01\x12\x0e\n\nOP_VIOLATE\x10\x02\x12\x13\n\x0fOP_RECOVER_HARD\x10\x03\x12\x13\n\x0fOP_RECOVER_SOFT\x10\x04\x12\x0b\n\x07OP_IDLE\x10\x05\x12\r\n\tOP_MOVING\x10\x06\x12\x0f\n\x0bOP_TEACHING\x10\x07\x12\x10\n\x0cOP_COLLISION\x10\x08\x12\x13\n\x0fOP_STOP_AND_OFF\x10\t\x12\x11\n\rOP_COMPLIANCE\x10\n\x12\x14\n\x10OP_BRAKE_CONTROL\x10\x0b\x12\x13\n\x0fOP_SYSTEM_RESET\x10\x0c\x12\x14\n\x10OP_SYSTEM_SWITCH\x10\r\x12\x13\n\x0fOP_VIOLATE_HARD\x10\x0f\x12\x15\n\x11OP_MANUAL_RECOVER\x10\x10\x12\x0b\n\x07TELE_OP\x10\x11*\xb0\x01\n\tTrajState\x12\r\n\tTRAJ_NONE\x10\x00\x12\r\n\tTRAJ_INIT\x10\x01\x12\r\n\tTRAJ_CALC\x10\x02\x12\x11\n\rTRAJ_STAND_BY\x10\x03\x12\x0c\n\x08TRAJ_ACC\x10\x04\x12\x0f\n\x0bTRAJ_CRUISE\x10\x05\x12\x0c\n\x08TRAJ_DEC\x10\x06\x12\x13\n\x0fTRAJ_CANCELLING\x10\x07\x12\x11\n\rTRAJ_FINISHED\x10\x08\x12\x0e\n\nTRAJ_ERROR\x10\t*Z\n\rTrajCondition\x12\x10\n\x0cTRAJ_STARTED\x10\x00\x12\x11\n\rTRAJ_ACC_DONE\x10\x01\x12\x11\n\rTRAJ_CRZ_DONE\x10\x02\x12\x11\n\rTRAJ_DEC_DONE\x10\x03*F\n\x0cStopCategory\x12\x13\n\x0fIMMEDIATE_BRAKE\x10\x00\x12\x10\n\x0cSMOOTH_BRAKE\x10\x01\x12\x0f\n\x0bSMOOTH_ONLY\x10\x02*6\n\rPauseCategory\x12\x10\n\x0cSMOOTH_PAUSE\x10\x00\x12\x13\n\x0fIMMEDIATE_PAUSE\x10\x01*T\n\x0cProgramState\x12\r\n\tPROG_IDLE\x10\x00\x12\x10\n\x0cPROG_RUNNING\x10\x01\x12\x10\n\x0cPROG_PAUSING\x10\x02\x12\x11\n\rPROG_STOPPING\x10\x03*e\n\x13\x43ollisionPolicyType\x12\x12\n\x0e\x43OLL_NO_DETECT\x10\x00\x12\x0e\n\nCOLL_PAUSE\x10\x01\x12\x1b\n\x17\x43OLL_RESUME_AFTER_SLEEP\x10\x02\x12\r\n\tCOLL_STOP\x10\x03*:\n\x0bTuningSpace\x12\x0c\n\x08TUNE_ALL\x10\x00\x12\x0e\n\nTUNE_JOINT\x10\x01\x12\r\n\tTUNE_TASK\x10\x02*N\n\x0fTuningPrecision\x12\x11\n\rLOW_PRECISION\x10\x00\x12\x14\n\x10MIDDLE_PRECISION\x10\x01\x12\x12\n\x0eHIGH_PRECISION\x10\x02\x62\x06proto3'
)

_OPSTATE = _descriptor.EnumDescriptor(
  name='OpState',
  full_name='Nrmk.IndyFramework.OpState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OP_SYSTEM_OFF', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_SYSTEM_ON', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_VIOLATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_RECOVER_HARD', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_RECOVER_SOFT', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_IDLE', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_MOVING', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_TEACHING', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_COLLISION', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_STOP_AND_OFF', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_COMPLIANCE', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_BRAKE_CONTROL', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_SYSTEM_RESET', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_SYSTEM_SWITCH', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_VIOLATE_HARD', index=14, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OP_MANUAL_RECOVER', index=15, number=16,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TELE_OP', index=16, number=17,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=296,
  serialized_end=625,
)
_sym_db.RegisterEnumDescriptor(_OPSTATE)

OpState = enum_type_wrapper.EnumTypeWrapper(_OPSTATE)
_TRAJSTATE = _descriptor.EnumDescriptor(
  name='TrajState',
  full_name='Nrmk.IndyFramework.TrajState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TRAJ_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_INIT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_CALC', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_STAND_BY', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_ACC', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_CRUISE', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_DEC', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_CANCELLING', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_FINISHED', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_ERROR', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=628,
  serialized_end=804,
)
_sym_db.RegisterEnumDescriptor(_TRAJSTATE)

TrajState = enum_type_wrapper.EnumTypeWrapper(_TRAJSTATE)
_TRAJCONDITION = _descriptor.EnumDescriptor(
  name='TrajCondition',
  full_name='Nrmk.IndyFramework.TrajCondition',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TRAJ_STARTED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_ACC_DONE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_CRZ_DONE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRAJ_DEC_DONE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=806,
  serialized_end=896,
)
_sym_db.RegisterEnumDescriptor(_TRAJCONDITION)

TrajCondition = enum_type_wrapper.EnumTypeWrapper(_TRAJCONDITION)
_STOPCATEGORY = _descriptor.EnumDescriptor(
  name='StopCategory',
  full_name='Nrmk.IndyFramework.StopCategory',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IMMEDIATE_BRAKE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SMOOTH_BRAKE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SMOOTH_ONLY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=898,
  serialized_end=968,
)
_sym_db.RegisterEnumDescriptor(_STOPCATEGORY)

StopCategory = enum_type_wrapper.EnumTypeWrapper(_STOPCATEGORY)
_PAUSECATEGORY = _descriptor.EnumDescriptor(
  name='PauseCategory',
  full_name='Nrmk.IndyFramework.PauseCategory',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SMOOTH_PAUSE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IMMEDIATE_PAUSE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=970,
  serialized_end=1024,
)
_sym_db.RegisterEnumDescriptor(_PAUSECATEGORY)

PauseCategory = enum_type_wrapper.EnumTypeWrapper(_PAUSECATEGORY)
_PROGRAMSTATE = _descriptor.EnumDescriptor(
  name='ProgramState',
  full_name='Nrmk.IndyFramework.ProgramState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PROG_IDLE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROG_RUNNING', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROG_PAUSING', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROG_STOPPING', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1026,
  serialized_end=1110,
)
_sym_db.RegisterEnumDescriptor(_PROGRAMSTATE)

ProgramState = enum_type_wrapper.EnumTypeWrapper(_PROGRAMSTATE)
_COLLISIONPOLICYTYPE = _descriptor.EnumDescriptor(
  name='CollisionPolicyType',
  full_name='Nrmk.IndyFramework.CollisionPolicyType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COLL_NO_DETECT', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLL_PAUSE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLL_RESUME_AFTER_SLEEP', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLL_STOP', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1112,
  serialized_end=1213,
)
_sym_db.RegisterEnumDescriptor(_COLLISIONPOLICYTYPE)

CollisionPolicyType = enum_type_wrapper.EnumTypeWrapper(_COLLISIONPOLICYTYPE)
_TUNINGSPACE = _descriptor.EnumDescriptor(
  name='TuningSpace',
  full_name='Nrmk.IndyFramework.TuningSpace',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TUNE_ALL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TUNE_JOINT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TUNE_TASK', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1215,
  serialized_end=1273,
)
_sym_db.RegisterEnumDescriptor(_TUNINGSPACE)

TuningSpace = enum_type_wrapper.EnumTypeWrapper(_TUNINGSPACE)
_TUNINGPRECISION = _descriptor.EnumDescriptor(
  name='TuningPrecision',
  full_name='Nrmk.IndyFramework.TuningPrecision',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LOW_PRECISION', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIDDLE_PRECISION', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HIGH_PRECISION', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1275,
  serialized_end=1353,
)
_sym_db.RegisterEnumDescriptor(_TUNINGPRECISION)

TuningPrecision = enum_type_wrapper.EnumTypeWrapper(_TUNINGPRECISION)
OP_SYSTEM_OFF = 0
OP_SYSTEM_ON = 1
OP_VIOLATE = 2
OP_RECOVER_HARD = 3
OP_RECOVER_SOFT = 4
OP_IDLE = 5
OP_MOVING = 6
OP_TEACHING = 7
OP_COLLISION = 8
OP_STOP_AND_OFF = 9
OP_COMPLIANCE = 10
OP_BRAKE_CONTROL = 11
OP_SYSTEM_RESET = 12
OP_SYSTEM_SWITCH = 13
OP_VIOLATE_HARD = 15
OP_MANUAL_RECOVER = 16
TELE_OP = 17
TRAJ_NONE = 0
TRAJ_INIT = 1
TRAJ_CALC = 2
TRAJ_STAND_BY = 3
TRAJ_ACC = 4
TRAJ_CRUISE = 5
TRAJ_DEC = 6
TRAJ_CANCELLING = 7
TRAJ_FINISHED = 8
TRAJ_ERROR = 9
TRAJ_STARTED = 0
TRAJ_ACC_DONE = 1
TRAJ_CRZ_DONE = 2
TRAJ_DEC_DONE = 3
IMMEDIATE_BRAKE = 0
SMOOTH_BRAKE = 1
SMOOTH_ONLY = 2
SMOOTH_PAUSE = 0
IMMEDIATE_PAUSE = 1
PROG_IDLE = 0
PROG_RUNNING = 1
PROG_PAUSING = 2
PROG_STOPPING = 3
COLL_NO_DETECT = 0
COLL_PAUSE = 1
COLL_RESUME_AFTER_SLEEP = 2
COLL_STOP = 3
TUNE_ALL = 0
TUNE_JOINT = 1
TUNE_TASK = 2
LOW_PRECISION = 0
MIDDLE_PRECISION = 1
HIGH_PRECISION = 2



_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Nrmk.IndyFramework.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=48,
)


_STATE = _descriptor.Descriptor(
  name='State',
  full_name='Nrmk.IndyFramework.State',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Nrmk.IndyFramework.State.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=73,
)


_INTMODE = _descriptor.Descriptor(
  name='IntMode',
  full_name='Nrmk.IndyFramework.IntMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='Nrmk.IndyFramework.IntMode.mode', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=98,
)


_STOPCAT = _descriptor.Descriptor(
  name='StopCat',
  full_name='Nrmk.IndyFramework.StopCat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='category', full_name='Nrmk.IndyFramework.StopCat.category', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=100,
  serialized_end=161,
)


_PAUSECAT = _descriptor.Descriptor(
  name='PauseCat',
  full_name='Nrmk.IndyFramework.PauseCat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='category', full_name='Nrmk.IndyFramework.PauseCat.category', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=163,
  serialized_end=226,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Nrmk.IndyFramework.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='Nrmk.IndyFramework.Response.code', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='msg', full_name='Nrmk.IndyFramework.Response.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=228,
  serialized_end=265,
)


_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='Nrmk.IndyFramework.Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='Nrmk.IndyFramework.Message.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=267,
  serialized_end=293,
)

_STOPCAT.fields_by_name['category'].enum_type = _STOPCATEGORY
_PAUSECAT.fields_by_name['category'].enum_type = _PAUSECATEGORY
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['State'] = _STATE
DESCRIPTOR.message_types_by_name['IntMode'] = _INTMODE
DESCRIPTOR.message_types_by_name['StopCat'] = _STOPCAT
DESCRIPTOR.message_types_by_name['PauseCat'] = _PAUSECAT
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE
DESCRIPTOR.enum_types_by_name['OpState'] = _OPSTATE
DESCRIPTOR.enum_types_by_name['TrajState'] = _TRAJSTATE
DESCRIPTOR.enum_types_by_name['TrajCondition'] = _TRAJCONDITION
DESCRIPTOR.enum_types_by_name['StopCategory'] = _STOPCATEGORY
DESCRIPTOR.enum_types_by_name['PauseCategory'] = _PAUSECATEGORY
DESCRIPTOR.enum_types_by_name['ProgramState'] = _PROGRAMSTATE
DESCRIPTOR.enum_types_by_name['CollisionPolicyType'] = _COLLISIONPOLICYTYPE
DESCRIPTOR.enum_types_by_name['TuningSpace'] = _TUNINGSPACE
DESCRIPTOR.enum_types_by_name['TuningPrecision'] = _TUNINGPRECISION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.Empty)
  })
_sym_db.RegisterMessage(Empty)

State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {
  'DESCRIPTOR' : _STATE,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.State)
  })
_sym_db.RegisterMessage(State)

IntMode = _reflection.GeneratedProtocolMessageType('IntMode', (_message.Message,), {
  'DESCRIPTOR' : _INTMODE,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.IntMode)
  })
_sym_db.RegisterMessage(IntMode)

StopCat = _reflection.GeneratedProtocolMessageType('StopCat', (_message.Message,), {
  'DESCRIPTOR' : _STOPCAT,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.StopCat)
  })
_sym_db.RegisterMessage(StopCat)

PauseCat = _reflection.GeneratedProtocolMessageType('PauseCat', (_message.Message,), {
  'DESCRIPTOR' : _PAUSECAT,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.PauseCat)
  })
_sym_db.RegisterMessage(PauseCat)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.Response)
  })
_sym_db.RegisterMessage(Response)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'common_msgs_pb2'
  # @@protoc_insertion_point(class_scope:Nrmk.IndyFramework.Message)
  })
_sym_db.RegisterMessage(Message)


# @@protoc_insertion_point(module_scope)
