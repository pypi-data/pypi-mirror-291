# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_msgs_pb2 as common__msgs__pb2
import device_msgs_pb2 as device__msgs__pb2


class DeviceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetBrakes = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetBrakes',
                request_serializer=device__msgs__pb2.MotorList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetServoAll = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetServoAll',
                request_serializer=common__msgs__pb2.State.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetServo = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetServo',
                request_serializer=device__msgs__pb2.Servo.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetDI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetDI',
                request_serializer=device__msgs__pb2.DigitalList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetDO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetDO',
                request_serializer=device__msgs__pb2.DigitalList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetEndDI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetEndDI',
                request_serializer=device__msgs__pb2.EndtoolSignalList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetEndDO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetEndDO',
                request_serializer=device__msgs__pb2.EndtoolSignalList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetAI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetAI',
                request_serializer=device__msgs__pb2.AnalogList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetAO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetAO',
                request_serializer=device__msgs__pb2.AnalogList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetEndAI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetEndAI',
                request_serializer=device__msgs__pb2.AnalogList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.SetEndAO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetEndAO',
                request_serializer=device__msgs__pb2.AnalogList.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.GetDI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetDI',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.DigitalList.FromString,
                )
        self.GetDO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetDO',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.DigitalList.FromString,
                )
        self.GetEndDI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEndDI',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.EndtoolSignalList.FromString,
                )
        self.GetEndDO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEndDO',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.EndtoolSignalList.FromString,
                )
        self.GetAI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetAI',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.AnalogList.FromString,
                )
        self.GetAO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetAO',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.AnalogList.FromString,
                )
        self.GetEndAI = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEndAI',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.AnalogList.FromString,
                )
        self.GetEndAO = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEndAO',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.AnalogList.FromString,
                )
        self.GetEL5001 = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEL5001',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.GetEL5001Data.FromString,
                )
        self.GetEL5101 = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetEL5101',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.GetEL5101Data.FromString,
                )
        self.GetDeviceInfo = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetDeviceInfo',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.DeviceInfo.FromString,
                )
        self.GetBrakeControlStyle = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetBrakeControlStyle',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.BrakeControlStyle.FromString,
                )
        self.SetFTSensorType = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/SetFTSensorType',
                request_serializer=device__msgs__pb2.FTSensorType.SerializeToString,
                response_deserializer=common__msgs__pb2.Response.FromString,
                )
        self.GetFTSensorType = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetFTSensorType',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.FTSensorType.FromString,
                )
        self.GetFTSensorData = channel.unary_unary(
                '/Nrmk.IndyFramework.Device/GetFTSensorData',
                request_serializer=common__msgs__pb2.Empty.SerializeToString,
                response_deserializer=device__msgs__pb2.FTSensorData.FromString,
                )


class DeviceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetBrakes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetServoAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetServo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEndDI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEndDO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEndAI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEndAO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEndDI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEndDO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEndAI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEndAO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEL5001(self, request, context):
        """beckhoff_conv
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEL5101(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBrakeControlStyle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFTSensorType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFTSensorType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFTSensorData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetBrakes': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBrakes,
                    request_deserializer=device__msgs__pb2.MotorList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetServoAll': grpc.unary_unary_rpc_method_handler(
                    servicer.SetServoAll,
                    request_deserializer=common__msgs__pb2.State.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetServo': grpc.unary_unary_rpc_method_handler(
                    servicer.SetServo,
                    request_deserializer=device__msgs__pb2.Servo.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetDI': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDI,
                    request_deserializer=device__msgs__pb2.DigitalList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetDO': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDO,
                    request_deserializer=device__msgs__pb2.DigitalList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetEndDI': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEndDI,
                    request_deserializer=device__msgs__pb2.EndtoolSignalList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetEndDO': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEndDO,
                    request_deserializer=device__msgs__pb2.EndtoolSignalList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetAI': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAI,
                    request_deserializer=device__msgs__pb2.AnalogList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetAO': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAO,
                    request_deserializer=device__msgs__pb2.AnalogList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetEndAI': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEndAI,
                    request_deserializer=device__msgs__pb2.AnalogList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'SetEndAO': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEndAO,
                    request_deserializer=device__msgs__pb2.AnalogList.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'GetDI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDI,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.DigitalList.SerializeToString,
            ),
            'GetDO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDO,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.DigitalList.SerializeToString,
            ),
            'GetEndDI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEndDI,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.EndtoolSignalList.SerializeToString,
            ),
            'GetEndDO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEndDO,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.EndtoolSignalList.SerializeToString,
            ),
            'GetAI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAI,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.AnalogList.SerializeToString,
            ),
            'GetAO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAO,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.AnalogList.SerializeToString,
            ),
            'GetEndAI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEndAI,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.AnalogList.SerializeToString,
            ),
            'GetEndAO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEndAO,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.AnalogList.SerializeToString,
            ),
            'GetEL5001': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEL5001,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.GetEL5001Data.SerializeToString,
            ),
            'GetEL5101': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEL5101,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.GetEL5101Data.SerializeToString,
            ),
            'GetDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceInfo,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.DeviceInfo.SerializeToString,
            ),
            'GetBrakeControlStyle': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBrakeControlStyle,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.BrakeControlStyle.SerializeToString,
            ),
            'SetFTSensorType': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFTSensorType,
                    request_deserializer=device__msgs__pb2.FTSensorType.FromString,
                    response_serializer=common__msgs__pb2.Response.SerializeToString,
            ),
            'GetFTSensorType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFTSensorType,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.FTSensorType.SerializeToString,
            ),
            'GetFTSensorData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFTSensorData,
                    request_deserializer=common__msgs__pb2.Empty.FromString,
                    response_serializer=device__msgs__pb2.FTSensorData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Nrmk.IndyFramework.Device', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Device(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetBrakes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetBrakes',
            device__msgs__pb2.MotorList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetServoAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetServoAll',
            common__msgs__pb2.State.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetServo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetServo',
            device__msgs__pb2.Servo.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetDI',
            device__msgs__pb2.DigitalList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetDO',
            device__msgs__pb2.DigitalList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEndDI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetEndDI',
            device__msgs__pb2.EndtoolSignalList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEndDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetEndDO',
            device__msgs__pb2.EndtoolSignalList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetAI',
            device__msgs__pb2.AnalogList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetAO',
            device__msgs__pb2.AnalogList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEndAI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetEndAI',
            device__msgs__pb2.AnalogList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEndAO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetEndAO',
            device__msgs__pb2.AnalogList.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetDI',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.DigitalList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetDO',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.DigitalList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEndDI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEndDI',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.EndtoolSignalList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEndDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEndDO',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.EndtoolSignalList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetAI',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.AnalogList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetAO',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.AnalogList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEndAI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEndAI',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.AnalogList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEndAO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEndAO',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.AnalogList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEL5001(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEL5001',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.GetEL5001Data.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEL5101(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetEL5101',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.GetEL5101Data.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetDeviceInfo',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.DeviceInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBrakeControlStyle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetBrakeControlStyle',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.BrakeControlStyle.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFTSensorType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/SetFTSensorType',
            device__msgs__pb2.FTSensorType.SerializeToString,
            common__msgs__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFTSensorType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetFTSensorType',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.FTSensorType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFTSensorData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Nrmk.IndyFramework.Device/GetFTSensorData',
            common__msgs__pb2.Empty.SerializeToString,
            device__msgs__pb2.FTSensorData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
