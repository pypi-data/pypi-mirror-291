import asyncio
import logging
from . import Field as Field, GetResult as GetResult, PropertyValue as PropertyValue, noapi as noapi
from .Link import Link as Link
from .List import List as List
from .Property import Property as Property
from .Slice import Slice as Slice
from .datatypes import datatypes as datatypes
from .msg import msg as msg
from collections.abc import Iterator as Iterator
from typing import Any
from typing_extensions import TypeAlias

upython: bool
console = logging
PythonClass: TypeAlias

class Item:
    def __init__(self, *args: Any) -> None: ...
    def get(self, field: str) -> Field: ...
    def __getitem__(self, key: str) -> Any: ...
    def __getattr__(self, key: str) -> Any: ...
    def get_async(self, field: str, future: asyncio.Future | None = None) -> asyncio.Task[GetResult]: ...
    def on_update(self, field_name: str, callback: Any) -> None: ...
    def __setitem__(self, key: str, newvalue: PropertyValue) -> None: ...
    def __setattr__(self, key: str, newvalue: PropertyValue) -> None: ...
    def set_nowait(self, field: str, new_value: Item | PropertyValue) -> asyncio.Task[Item]: ...
    def set(self, field: str, new_value: Item | PropertyValue) -> Item: ...
    def set_async(self, field: str, new_value: Item | PropertyValue) -> asyncio.Task[Item]: ...
    def create(self, DEPRECATED_FUNCTION: Any) -> Item: ...
    def create_subitem_async(self, subitem_field: str, set_value: PropertyValue | None = None, set_field: str | None = None) -> asyncio.Task[Item]: ...
    def create_subitem(self, subitem_field: str, set_value: PropertyValue | None = None, set_field: str | None = None) -> Item: ...
    def destroy_subitem(self, containername: str, item: Item) -> None: ...
    def keys(self) -> None: ...
    def call_method(self, name: str, args: dict[str, str | None] = {}) -> dict[str, str | None]: ...
    def define_property(self, name: str, proptype: str | PythonClass | None = None) -> Item: ...
    def define_calculated_property(self, property_name: str, data_type: str, formula: str) -> Item: ...
    def define_calculated_list(self, list_name: str, range: str, formula: str, inverse_name: str | None = None) -> Item: ...
    def define_calculated_link(self, link_name: str, range: str, formula: str, inverse_name: str | None = None) -> Item: ...
    def recall_field(self, field_name: str) -> Item | None: ...
    def new_subitem(self, DEPRECATED_FUNCTION: Any, DEPRECATEDFUNCTION: Any) -> None: ...
    def destroy(**DEPRECATED_FUNCTION: Any) -> None: ...
    def define_subitem(self, subitem_name: str, inverse_name: str | None = None) -> Item: ...
    def define_link(self, link_name: str, range: str | None = None, inverse_name: str | None = None, inverse_link_or_list: str | None = 'list', inverse_range: str | None = None) -> Item: ...
    def define_list(self, list_name: str, range: str | None = None, inverse_name: str | None = None, inverse_link_or_list: str | None = 'link', inverse_range: str | None = None) -> Item: ...
    def define_list_of_links(self, list_name: str, range: str | None = None, inverse_name: str | None = None, inverse_cardinal: str | None = 'link', inverse_range: str | None = None) -> Item: ...
    def define_list_of_items(self, list_name: str, inverse_name: str | None = None) -> Item: ...
    def __iter__(self) -> None: ...
