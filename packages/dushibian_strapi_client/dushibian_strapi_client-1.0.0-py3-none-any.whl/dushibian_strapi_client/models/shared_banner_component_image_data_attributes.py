# coding: utf-8

"""
    DOCUMENTATION

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: contact-email@something.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from dushibian_strapi_client.models.activity_created_by import ActivityCreatedBy
from dushibian_strapi_client.models.shared_banner_component_image_data_attributes_related import SharedBannerComponentImageDataAttributesRelated
from typing import Optional, Set
from typing_extensions import Self

class SharedBannerComponentImageDataAttributes(BaseModel):
    """
    SharedBannerComponentImageDataAttributes
    """ # noqa: E501
    name: Optional[StrictStr] = None
    alternative_text: Optional[StrictStr] = Field(default=None, alias="alternativeText")
    caption: Optional[StrictStr] = None
    width: Optional[StrictInt] = None
    height: Optional[StrictInt] = None
    formats: Optional[Any] = None
    hash: Optional[StrictStr] = None
    ext: Optional[StrictStr] = None
    mime: Optional[StrictStr] = None
    size: Optional[Union[StrictFloat, StrictInt]] = None
    url: Optional[StrictStr] = None
    preview_url: Optional[StrictStr] = Field(default=None, alias="previewUrl")
    provider: Optional[StrictStr] = None
    provider_metadata: Optional[Any] = None
    related: Optional[SharedBannerComponentImageDataAttributesRelated] = None
    folder: Optional[ActivityCreatedBy] = None
    folder_path: Optional[StrictStr] = Field(default=None, alias="folderPath")
    created_at: Optional[datetime] = Field(default=None, alias="createdAt")
    updated_at: Optional[datetime] = Field(default=None, alias="updatedAt")
    created_by: Optional[ActivityCreatedBy] = Field(default=None, alias="createdBy")
    updated_by: Optional[ActivityCreatedBy] = Field(default=None, alias="updatedBy")
    __properties: ClassVar[List[str]] = ["name", "alternativeText", "caption", "width", "height", "formats", "hash", "ext", "mime", "size", "url", "previewUrl", "provider", "provider_metadata", "related", "folder", "folderPath", "createdAt", "updatedAt", "createdBy", "updatedBy"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SharedBannerComponentImageDataAttributes from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of related
        if self.related:
            _dict['related'] = self.related.to_dict()
        # override the default output from pydantic by calling `to_dict()` of folder
        if self.folder:
            _dict['folder'] = self.folder.to_dict()
        # override the default output from pydantic by calling `to_dict()` of created_by
        if self.created_by:
            _dict['createdBy'] = self.created_by.to_dict()
        # override the default output from pydantic by calling `to_dict()` of updated_by
        if self.updated_by:
            _dict['updatedBy'] = self.updated_by.to_dict()
        # set to None if formats (nullable) is None
        # and model_fields_set contains the field
        if self.formats is None and "formats" in self.model_fields_set:
            _dict['formats'] = None

        # set to None if provider_metadata (nullable) is None
        # and model_fields_set contains the field
        if self.provider_metadata is None and "provider_metadata" in self.model_fields_set:
            _dict['provider_metadata'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SharedBannerComponentImageDataAttributes from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "name": obj.get("name"),
            "alternativeText": obj.get("alternativeText"),
            "caption": obj.get("caption"),
            "width": obj.get("width"),
            "height": obj.get("height"),
            "formats": obj.get("formats"),
            "hash": obj.get("hash"),
            "ext": obj.get("ext"),
            "mime": obj.get("mime"),
            "size": obj.get("size"),
            "url": obj.get("url"),
            "previewUrl": obj.get("previewUrl"),
            "provider": obj.get("provider"),
            "provider_metadata": obj.get("provider_metadata"),
            "related": SharedBannerComponentImageDataAttributesRelated.from_dict(obj["related"]) if obj.get("related") is not None else None,
            "folder": ActivityCreatedBy.from_dict(obj["folder"]) if obj.get("folder") is not None else None,
            "folderPath": obj.get("folderPath"),
            "createdAt": obj.get("createdAt"),
            "updatedAt": obj.get("updatedAt"),
            "createdBy": ActivityCreatedBy.from_dict(obj["createdBy"]) if obj.get("createdBy") is not None else None,
            "updatedBy": ActivityCreatedBy.from_dict(obj["updatedBy"]) if obj.get("updatedBy") is not None else None
        })
        return _obj


