from scipy._lib._util import VisibleDeprecationWarning as VisibleDeprecationWarning
from scipy._typing import Untyped
from scipy.io.matlab import MatlabFunction as MatlabFunction, MatlabObject as MatlabObject, MatlabOpaque as MatlabOpaque
from scipy.io.matlab._mio import (
    loadmat as loadmat,
    mat_reader_factory as mat_reader_factory,
    savemat as savemat,
    whosmat as whosmat,
)
from scipy.io.matlab._mio5 import (
    EmptyStructMarker as EmptyStructMarker,
    MatFile5Reader as MatFile5Reader,
    MatFile5Writer as MatFile5Writer,
    to_writeable as to_writeable,
    varmats_from_mat as varmats_from_mat,
)
from scipy.io.matlab._miobase import (
    MatReadError as MatReadError,
    MatWriteError as MatWriteError,
    matdims as matdims,
    matfile_version as matfile_version,
)

test_data_path: Untyped

def mlarr(*args, **kwargs) -> Untyped: ...

theta: Untyped
case_table4: Untyped
A: Untyped
B: Untyped
CA: Untyped
case_table5: Untyped
CAE: Untyped
objarr: Untyped
st_sub_arr: Untyped
dtype: Untyped
st1: Untyped
CN: Untyped
st2: Untyped
a: Untyped
ODT: Untyped
MO: Untyped
m0: Untyped
fp_u_str: Untyped
u_str: Untyped
case_table5_rt: Untyped

def types_compatible(var1, var2) -> Untyped: ...
def test_load(version): ...
def test_whos(version): ...
def test_round_trip(version, fmts): ...
def test_gzip_simple(): ...
def test_multiple_open(): ...
def test_mat73(): ...
def test_warnings(): ...
def test_regression_653(): ...
def test_structname_len(): ...
def test_4_and_long_field_names_incompatible(): ...
def test_long_field_names(): ...
def test_long_field_names_in_struct(): ...
def test_cell_with_one_thing_in_it(): ...
def test_writer_properties(): ...
def test_use_small_element(): ...
def test_save_dict(): ...
def test_1d_shape(): ...
def test_compression(): ...
def test_single_object(): ...
def test_skip_variable(): ...
def test_empty_struct(): ...
def test_save_empty_dict(): ...
def assert_any_equal(output, alternatives): ...
def test_to_writeable(): ...
def test_recarray(): ...
def test_save_object(): ...
def test_read_opts(): ...
def test_empty_string(): ...
def test_corrupted_data(): ...
def test_corrupted_data_check_can_be_disabled(): ...
def test_read_both_endian(): ...
def test_write_opposite_endian(): ...
def test_logical_array(): ...
def test_logical_out_type(): ...
def test_roundtrip_zero_dimensions(): ...
def test_mat4_3d(): ...
def test_func_read(): ...
def test_mat_dtype(): ...
def test_sparse_in_struct(): ...
def test_mat_struct_squeeze(): ...
def test_scalar_squeeze(): ...
def test_str_round(): ...
def test_fieldnames(): ...
def test_loadmat_varnames(): ...
def test_round_types(): ...
def test_varmats_from_mat() -> Untyped: ...
def test_one_by_zero(): ...
def test_load_mat4_le(): ...
def test_unicode_mat4(): ...
def test_logical_sparse(): ...
def test_empty_sparse(): ...
def test_empty_mat_error(): ...
def test_miuint32_compromise(): ...
def test_miutf8_for_miint8_compromise(): ...
def test_bad_utf8(): ...
def test_save_unicode_field(tmpdir): ...
def test_save_custom_array_type(tmpdir) -> Untyped: ...
def test_filenotfound(): ...
def test_simplify_cells(): ...
def test_matfile_version(version, filt, regex): ...
def test_opaque(): ...
def test_opaque_simplify(): ...
def test_deprecation(): ...
def test_gh_17992(tmp_path): ...
def test_gh_19659(tmp_path): ...
def test_large_m4(): ...
