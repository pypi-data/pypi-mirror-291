import io

import threadpoolctl

from scipy._typing import Untyped

PARALLELISM: int
ALWAYS_FIND_SYMMETRY: bool

class _FMMThreadPoolCtlController(threadpoolctl.LibController):
    user_api: str
    internal_api: str
    filename_prefixes: Untyped
    def get_num_threads(self) -> Untyped: ...
    def set_num_threads(self, num_threads): ...
    def get_version(self) -> Untyped: ...
    def set_additional_attributes(self): ...

class _TextToBytesWrapper(io.BufferedReader):
    encoding: Untyped
    errors: Untyped
    def __init__(self, text_io_buffer, encoding: Untyped | None = None, errors: Untyped | None = None, **kwargs): ...
    def __del__(self) -> None: ...
    def read(self, size: int = -1) -> Untyped: ...
    def read1(self, size: int = -1) -> Untyped: ...
    def peek(self, size: int = -1) -> Untyped: ...
    def seek(self, offset, whence: int = 0): ...

def mmread(source) -> Untyped: ...
def mmwrite(
    target,
    a,
    comment: Untyped | None = None,
    field: Untyped | None = None,
    precision: Untyped | None = None,
    symmetry: str = "AUTO",
): ...
def mminfo(source) -> Untyped: ...
