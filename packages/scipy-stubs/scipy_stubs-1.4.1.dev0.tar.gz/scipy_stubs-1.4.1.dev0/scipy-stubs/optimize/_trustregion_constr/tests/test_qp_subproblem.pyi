from numpy.testing import TestCase

from scipy.optimize._trustregion_constr.projections import projections as projections
from scipy.optimize._trustregion_constr.qp_subproblem import (
    box_intersections as box_intersections,
    box_sphere_intersections as box_sphere_intersections,
    eqp_kktfact as eqp_kktfact,
    modified_dogleg as modified_dogleg,
    projected_cg as projected_cg,
    sphere_intersections as sphere_intersections,
)
from scipy.sparse import csc_matrix as csc_matrix

class TestEQPDirectFactorization(TestCase):
    def test_nocedal_example(self): ...

class TestSphericalBoundariesIntersections(TestCase):
    def test_2d_sphere_constraints(self): ...
    def test_2d_sphere_constraints_line_intersections(self): ...

class TestBoxBoundariesIntersections(TestCase):
    def test_2d_box_constraints(self): ...
    def test_2d_box_constraints_entire_line(self): ...
    def test_3d_box_constraints(self): ...
    def test_3d_box_constraints_entire_line(self): ...

class TestBoxSphereBoundariesIntersections(TestCase):
    def test_2d_box_constraints(self): ...
    def test_2d_box_constraints_entire_line(self): ...

class TestModifiedDogleg(TestCase):
    def test_cauchypoint_equalsto_newtonpoint(self): ...
    def test_3d_example(self): ...

class TestProjectCG(TestCase):
    def test_nocedal_example(self): ...
    def test_compare_with_direct_fact(self): ...
    def test_trust_region_infeasible(self): ...
    def test_trust_region_barely_feasible(self): ...
    def test_hits_boundary(self): ...
    def test_negative_curvature_unconstrained(self): ...
    def test_negative_curvature(self): ...
    def test_inactive_box_constraints(self): ...
    def test_active_box_constraints_maximum_iterations_reached(self): ...
    def test_active_box_constraints_hits_boundaries(self): ...
    def test_active_box_constraints_hits_boundaries_infeasible_iter(self): ...
    def test_active_box_constraints_negative_curvature(self): ...
