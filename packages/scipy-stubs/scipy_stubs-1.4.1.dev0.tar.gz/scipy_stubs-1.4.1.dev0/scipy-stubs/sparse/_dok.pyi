from ._base import _spbase, issparse as issparse, sparray as sparray
from ._index import IndexMixin as IndexMixin
from ._matrix import spmatrix as spmatrix
from ._sputils import (
    check_shape as check_shape,
    getdtype as getdtype,
    isdense as isdense,
    isintlike as isintlike,
    isscalarlike as isscalarlike,
    isshape as isshape,
    upcast as upcast,
    upcast_scalar as upcast_scalar,
)
from scipy._typing import Untyped

__docformat__: str

class _dok_base(_spbase, IndexMixin, dict):
    dtype: Untyped
    def __init__(
        self,
        arg1,
        shape: Untyped | None = None,
        dtype: Untyped | None = None,
        copy: bool = False,
        *,
        maxprint: Untyped | None = None,
    ): ...
    def update(self, val): ...
    def count_nonzero(self, axis: Untyped | None = None) -> Untyped: ...
    def __len__(self) -> int: ...
    def __contains__(self, key) -> bool: ...
    def setdefault(self, key, default: Untyped | None = None, /) -> Untyped: ...
    def __delitem__(self, key) -> None: ...
    def clear(self) -> Untyped: ...
    def pop(self, /, *args) -> Untyped: ...
    def __reversed__(self): ...
    def __or__(self, other): ...
    def __ror__(self, other): ...
    def __ior__(self, other): ...
    def popitem(self) -> Untyped: ...
    def items(self) -> Untyped: ...
    def keys(self) -> Untyped: ...
    def values(self) -> Untyped: ...
    def get(self, key, default: float = 0.0) -> Untyped: ...
    def __add__(self, other) -> Untyped: ...
    def __radd__(self, other) -> Untyped: ...
    def __neg__(self) -> Untyped: ...
    def __imul__(self, other) -> Untyped: ...
    def __truediv__(self, other) -> Untyped: ...
    def __itruediv__(self, other) -> Untyped: ...
    def __reduce__(self) -> Untyped: ...
    def diagonal(self, k: int = 0) -> Untyped: ...
    def transpose(self, axes: Untyped | None = None, copy: bool = False) -> Untyped: ...
    def conjtransp(self) -> Untyped: ...
    def copy(self) -> Untyped: ...
    @classmethod
    def fromkeys(cls, iterable, value: int = 1, /) -> Untyped: ...
    def tocoo(self, copy: bool = False) -> Untyped: ...
    def todok(self, copy: bool = False) -> Untyped: ...
    def tocsc(self, copy: bool = False) -> Untyped: ...
    def resize(self, *shape): ...
    def astype(self, dtype, casting: str = "unsafe", copy: bool = True) -> Untyped: ...

def isspmatrix_dok(x) -> Untyped: ...

class dok_array(_dok_base, sparray): ...

class dok_matrix(spmatrix, _dok_base):
    __dict__: Untyped
    def set_shape(self, shape): ...
    def get_shape(self) -> Untyped: ...
    shape: Untyped
    def __reversed__(self) -> Untyped: ...
    def __or__(self, other) -> Untyped: ...
    def __ror__(self, other) -> Untyped: ...
    def __ior__(self, other) -> Untyped: ...
