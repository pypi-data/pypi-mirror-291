from scipy._lib._util import ComplexWarning as ComplexWarning
from scipy._typing import Untyped
from scipy.sparse import (
    bsr_array as bsr_array,
    coo_array as coo_array,
    csc_array as csc_array,
    csr_array as csr_array,
    dia_array as dia_array,
    dok_array as dok_array,
    lil_array as lil_array,
)
from scipy.sparse._sputils import matrix as matrix, supported_dtypes as supported_dtypes

sup_complex: Untyped
spcreators: Untyped
math_dtypes: Untyped

def dat1d() -> Untyped: ...
def datsp_math_dtypes(dat1d) -> Untyped: ...
def test_no_1d_support_in_init(spcreator): ...

class TestCommon1D:
    def test_create_empty(self, spcreator): ...
    def test_invalid_shapes(self, spcreator): ...
    def test_repr(self, spcreator, dat1d): ...
    def test_str(self, spcreator, dat1d): ...
    def test_neg(self, spcreator): ...
    def test_1d_supported_init(self, spcreator): ...
    def test_reshape_1d_tofrom_row_or_column(self, spcreator): ...
    def test_reshape(self, spcreator): ...
    def test_sum(self, spcreator): ...
    def test_sum_invalid_params(self, spcreator): ...
    def test_numpy_sum(self, spcreator): ...
    def test_mean(self, spcreator): ...
    def test_mean_invalid_params(self, spcreator): ...
    def test_sum_dtype(self, spcreator): ...
    def test_mean_dtype(self, spcreator): ...
    def test_mean_out(self, spcreator): ...
    def test_numpy_mean(self, spcreator): ...
    def test_from_array(self, spcreator): ...
    def test_from_list(self, spcreator): ...
    def test_from_sparse(self, spcreator): ...
    def test_toarray(self, spcreator, dat1d): ...
    def test_add(self, spcreator, datsp_math_dtypes): ...
    def test_radd(self, spcreator, datsp_math_dtypes): ...
    def test_rsub(self, spcreator, datsp_math_dtypes): ...
    def test_matvec(self, spcreator): ...
    def test_rmatvec(self, spcreator, dat1d): ...
    def test_transpose(self, spcreator, dat1d): ...
    def test_add_dense_to_sparse(self, spcreator, datsp_math_dtypes): ...
    def test_iterator(self, spcreator): ...
    def test_resize(self, spcreator): ...
