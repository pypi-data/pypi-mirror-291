from .test_lsqr import G as G, b as b
from scipy._typing import Untyped
from scipy.sparse import coo_matrix as coo_matrix
from scipy.sparse.linalg import lsmr as lsmr
from scipy.sparse.linalg._interface import aslinearoperator as aslinearoperator

class TestLSMR:
    n: int
    m: int
    def setup_method(self): ...
    def assertCompatibleSystem(self, A, xtrue): ...
    def testIdentityACase1(self): ...
    def testIdentityACase2(self): ...
    def testIdentityACase3(self): ...
    def testBidiagonalA(self): ...
    def testScalarB(self): ...
    def testComplexX(self): ...
    def testComplexX0(self): ...
    def testComplexA(self): ...
    def testComplexB(self): ...
    def testColumnB(self): ...
    def testInitialization(self): ...

class TestLSMRReturns:
    n: int
    A: Untyped
    xtrue: Untyped
    Afun: Untyped
    b: Untyped
    x0: Untyped
    x00: Untyped
    returnValues: Untyped
    returnValuesX0: Untyped
    def setup_method(self): ...
    def test_unchanged_x0(self): ...
    def testNormr(self): ...
    def testNormar(self): ...
    def testNormx(self): ...

def lowerBidiagonalMatrix(m, n) -> Untyped: ...
