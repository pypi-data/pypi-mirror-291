from scipy._typing import Untyped
from scipy.linalg import eigh as eigh
from scipy.sparse import csgraph as csgraph, diags as diags
from scipy.sparse.linalg import LaplacianNd as LaplacianNd
from scipy.sparse.linalg._special_sparse_arrays import MikotaPair as MikotaPair, Sakurai as Sakurai

INT_DTYPES: Untyped
REAL_DTYPES: Untyped
COMPLEX_DTYPES: Untyped
ALLDTYPES: Untyped

class TestLaplacianNd:
    def test_1d_specific_shape(self, bc): ...
    def test_1d_with_graph_laplacian(self): ...
    def test_eigenvalues(self, grid_shape, bc): ...
    def test_eigenvectors(self, grid_shape, bc): ...
    def test_toarray_tosparse_consistency(self, grid_shape, bc): ...
    def test_linearoperator_shape_dtype(self, grid_shape, bc, dtype): ...
    def test_dot(self, grid_shape, bc, dtype): ...
    def test_boundary_conditions_value_error(self): ...

class TestSakurai:
    def test_specific_shape(self): ...
    def test_linearoperator_shape_dtype(self, dtype): ...
    def test_dot(self, dtype, argument_dtype): ...

class TestMikotaPair:
    tested_types: Untyped
    def test_specific_shape(self): ...
    def test_linearoperator_shape_dtype(self, dtype): ...
    def test_dot(self, dtype, argument_dtype): ...
