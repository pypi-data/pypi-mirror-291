from scipy.linalg import logm as logm
from scipy.sparse import SparseEfficiencyWarning as SparseEfficiencyWarning, csc_array as csc_array, csc_matrix as csc_matrix
from scipy.sparse._sputils import matrix as matrix
from scipy.sparse.linalg._matfuncs import (
    MatrixPowerOperator as MatrixPowerOperator,
    ProductOperator as ProductOperator,
    expm as expm,
    matrix_power as matrix_power,
)
from scipy.special import binom as binom, factorial as factorial

def test_onenorm_matrix_power_nnm(): ...
def test_matrix_power(): ...

class TestExpM:
    def test_zero_ndarray(self): ...
    def test_zero_sparse(self): ...
    def test_zero_matrix(self): ...
    def test_misc_types(self): ...
    def test_bidiagonal_sparse(self): ...
    def test_padecases_dtype_float(self): ...
    def test_padecases_dtype_complex(self): ...
    def test_padecases_dtype_sparse_float(self): ...
    def test_padecases_dtype_sparse_complex(self): ...
    def test_logm_consistency(self): ...
    def test_integer_matrix(self): ...
    def test_integer_matrix_2(self): ...
    def test_triangularity_perturbation(self): ...
    def test_burkardt_1(self): ...
    def test_burkardt_2(self): ...
    def test_burkardt_3(self): ...
    def test_burkardt_4(self): ...
    def test_burkardt_5(self): ...
    def test_burkardt_6(self): ...
    def test_burkardt_7(self): ...
    def test_burkardt_8(self): ...
    def test_burkardt_9(self): ...
    def test_burkardt_10(self): ...
    def test_burkardt_11(self): ...
    def test_burkardt_12(self): ...
    def test_burkardt_13(self): ...
    def test_burkardt_14(self): ...
    def test_pascal(self): ...
    def test_matrix_input(self): ...
    def test_exp_sinch_overflow(self): ...

class TestOperators:
    def test_product_operator(self): ...
    def test_matrix_power_operator(self): ...
