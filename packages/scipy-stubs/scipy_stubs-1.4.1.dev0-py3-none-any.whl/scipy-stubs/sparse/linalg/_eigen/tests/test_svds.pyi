from scipy._typing import Untyped
from scipy.linalg import null_space as null_space, svd as svd
from scipy.sparse import csc_matrix as csc_matrix, issparse as issparse, random as random, spdiags as spdiags
from scipy.sparse.linalg import LinearOperator as LinearOperator, aslinearoperator as aslinearoperator, svds as svds
from scipy.sparse.linalg._eigen.arpack import ArpackNoConvergence as ArpackNoConvergence

def sorted_svd(m, k, which: str = "LM") -> Untyped: ...

class CheckingLinearOperator(LinearOperator):
    A: Untyped
    dtype: Untyped
    shape: Untyped
    def __init__(self, A) -> None: ...

class SVDSCommonTests:
    solver: Untyped
    def test_svds_input_validation_A(self, args): ...
    def test_svds_input_validation_k_1(self, k): ...
    def test_svds_input_validation_k_2(self): ...
    def test_svds_input_validation_tol_1(self, tol): ...
    def test_svds_input_validation_tol_2(self, tol): ...
    def test_svds_input_validation_which(self, which): ...
    def test_svds_input_validation_v0_1(self, transpose, n): ...
    def test_svds_input_validation_v0_2(self): ...
    def test_svds_input_validation_v0_3(self, v0): ...
    def test_svds_input_validation_maxiter_1(self, maxiter): ...
    def test_svds_input_validation_maxiter_2(self): ...
    def test_svds_input_validation_return_singular_vectors(self, rsv): ...
    def test_svds_parameter_k_which(self, k, which): ...
    def test_svds_parameter_tol(self) -> Untyped: ...
    def test_svd_v0(self): ...
    def test_svd_random_state(self): ...
    def test_svd_random_state_2(self, random_state): ...
    def test_svd_random_state_3(self, random_state): ...
    def test_svd_maxiter(self): ...
    def test_svd_return_singular_vectors(self, rsv, shape): ...
    A1: Untyped
    A2: Untyped
    def test_svd_simple(self, A, k, real, transpose, lo_type): ...
    def test_svd_linop(self) -> Untyped: ...
    SHAPES: Untyped
    def test_small_sigma_sparse(self, shape, dtype): ...
    def test_svd_LM_ones_matrix(self, shape, dtype): ...
    def test_zero_matrix(self, shape, dtype): ...
    def test_small_sigma(self, shape, dtype): ...
    def test_small_sigma2(self, dtype): ...

class Test_SVDS_once:
    def test_svds_input_validation_solver(self, solver): ...

class Test_SVDS_ARPACK(SVDSCommonTests):
    solver: str
    def setup_method(self): ...
    def test_svds_input_validation_ncv_1(self, ncv): ...
    def test_svds_input_validation_ncv_2(self): ...

class Test_SVDS_LOBPCG(SVDSCommonTests):
    solver: str
    def setup_method(self): ...

class Test_SVDS_PROPACK(SVDSCommonTests):
    solver: str
    def setup_method(self): ...
    def test_svd_LM_ones_matrix(self): ...
    def test_svd_LM_zeros_matrix(self): ...
