from ._base import _spbase, issparse as issparse, sparray as sparray
from ._index import INT_TYPES as INT_TYPES, IndexMixin as IndexMixin
from ._matrix import spmatrix as spmatrix
from ._sputils import (
    check_reshape_kwargs as check_reshape_kwargs,
    check_shape as check_shape,
    getdtype as getdtype,
    isscalarlike as isscalarlike,
    isshape as isshape,
    upcast_scalar as upcast_scalar,
)
from scipy._typing import Untyped

__docformat__: str

class _lil_base(_spbase, IndexMixin):
    dtype: Untyped
    rows: Untyped
    data: Untyped
    def __init__(
        self,
        arg1,
        shape: Untyped | None = None,
        dtype: Untyped | None = None,
        copy: bool = False,
        *,
        maxprint: Untyped | None = None,
    ): ...
    def __iadd__(self, other) -> Untyped: ...
    def __isub__(self, other) -> Untyped: ...
    def __imul__(self, other) -> Untyped: ...
    def __itruediv__(self, other) -> Self: ...
    def count_nonzero(self, axis: Untyped | None = None) -> Untyped: ...
    def getrowview(self, i) -> Untyped: ...
    def getrow(self, i) -> Untyped: ...
    def __getitem__(self, key) -> Untyped: ...
    def __setitem__(self, key, x) -> None: ...
    def __truediv__(self, other) -> Untyped: ...
    def copy(self) -> Untyped: ...
    def reshape(self, *args, **kwargs) -> Untyped: ...
    def resize(self, *shape): ...
    def toarray(self, order: Untyped | None = None, out: Untyped | None = None) -> Untyped: ...
    def transpose(self, axes: Untyped | None = None, copy: bool = False) -> Untyped: ...
    def tolil(self, copy: bool = False) -> Untyped: ...
    def tocsr(self, copy: bool = False) -> Untyped: ...

def isspmatrix_lil(x) -> Untyped: ...

class lil_array(_lil_base, sparray): ...
class lil_matrix(spmatrix, _lil_base): ...
