from scipy._typing import Untyped
from scipy.io import mmread as mmread
from scipy.sparse.csgraph import (
    NegativeCycleError as NegativeCycleError,
    bellman_ford as bellman_ford,
    construct_dist_matrix as construct_dist_matrix,
    dijkstra as dijkstra,
    johnson as johnson,
    shortest_path as shortest_path,
    yen as yen,
)

directed_G: Untyped
undirected_G: Untyped
unweighted_G: Untyped
directed_SP: Untyped
directed_2SP_0_to_3: Untyped
directed_sparse_zero_G: Untyped
directed_sparse_zero_SP: Untyped
undirected_sparse_zero_G: Untyped
undirected_sparse_zero_SP: Untyped
directed_pred: Untyped
undirected_SP: Untyped
undirected_SP_limit_2: Untyped
undirected_SP_limit_0: Untyped
undirected_pred: Untyped
directed_negative_weighted_G: Untyped
directed_negative_weighted_SP: Untyped
methods: Untyped

def test_dijkstra_limit(): ...
def test_directed(): ...
def test_undirected(): ...
def test_directed_sparse_zero(): ...
def test_undirected_sparse_zero(): ...
def test_dijkstra_indices_min_only(directed, SP_ans, indices): ...
def test_dijkstra_min_only_random(n): ...
def test_dijkstra_random(): ...
def test_gh_17782_segfault(): ...
def test_shortest_path_indices(): ...
def test_predecessors(): ...
def test_construct_shortest_path(): ...
def test_unweighted_path(): ...
def test_negative_cycles(): ...
def test_negative_weights(method): ...
def test_masked_input(): ...
def test_overwrite(): ...
def test_buffer(method): ...
def test_NaN_warnings(): ...
def test_sparse_matrices(): ...
def test_yen_directed(): ...
def test_yen_undirected(): ...
def test_yen_unweighted(): ...
def test_yen_no_paths(): ...
def test_yen_negative_weights(): ...
def test_20904(min_only, directed, return_predecessors, index_dtype, indices): ...
