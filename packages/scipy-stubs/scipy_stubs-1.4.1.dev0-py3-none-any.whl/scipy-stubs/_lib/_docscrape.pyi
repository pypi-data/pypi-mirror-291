from collections.abc import Mapping
from typing import NamedTuple

from scipy._typing import Untyped

def strip_blank_lines(l) -> Untyped: ...

class Reader:
    def __init__(self, data) -> None: ...
    def __getitem__(self, n) -> Untyped: ...
    def reset(self): ...
    def read(self) -> Untyped: ...
    def seek_next_non_empty_line(self): ...
    def eof(self) -> Untyped: ...
    def read_to_condition(self, condition_func) -> Untyped: ...
    def read_to_next_empty_line(self) -> Untyped: ...
    def read_to_next_unindented_line(self) -> Untyped: ...
    def peek(self, n: int = 0) -> Untyped: ...
    def is_empty(self) -> Untyped: ...

class ParseError(Exception): ...

class Parameter(NamedTuple):
    name: Untyped
    type: Untyped
    desc: Untyped

class NumpyDocString(Mapping):
    sections: Untyped
    def __init__(self, docstring, config: Untyped | None = None): ...
    def __getitem__(self, key) -> Untyped: ...
    def __setitem__(self, key, val) -> None: ...
    def __iter__(self) -> Untyped: ...
    def __len__(self) -> int: ...
    empty_description: str

def dedent_lines(lines) -> Untyped: ...

class FunctionDoc(NumpyDocString):
    def __init__(self, func, role: str = "func", doc: Untyped | None = None, config: Untyped | None = None): ...
    def get_func(self) -> Untyped: ...

class ObjDoc(NumpyDocString):
    def __init__(self, obj, doc: Untyped | None = None, config: Untyped | None = None): ...

class ClassDoc(NumpyDocString):
    extra_public_methods: Untyped
    show_inherited_members: Untyped
    def __init__(self, cls, doc: Untyped | None = None, modulename: str = "", func_doc=..., config: Untyped | None = None): ...
    @property
    def methods(self) -> Untyped: ...
    @property
    def properties(self) -> Untyped: ...

def get_doc_object(
    obj,
    what: Untyped | None = None,
    doc: Untyped | None = None,
    config: Untyped | None = None,
    class_doc=...,
    func_doc=...,
    obj_doc=...,
) -> Untyped: ...
