from ._continuous_distns import norm as norm
from ._discrete_distns import binom as binom
from ._morestats import directional_stats as directional_stats
from scipy._lib import doccer as doccer
from scipy._lib._util import check_random_state as check_random_state
from scipy._typing import Untyped
from scipy.linalg.blas import drot as drot, get_blas_funcs as get_blas_funcs
from scipy.optimize import root_scalar as root_scalar
from scipy.special import (
    betaln as betaln,
    entr as entr,
    gammaln as gammaln,
    ive as ive,
    loggamma as loggamma,
    multigammaln as multigammaln,
    psi as psi,
    xlogy as xlogy,
)

class _PSD:
    eps: Untyped
    V: Untyped
    rank: Untyped
    U: Untyped
    log_pdet: Untyped
    def __init__(
        self,
        M,
        cond: Untyped | None = None,
        rcond: Untyped | None = None,
        lower: bool = True,
        check_finite: bool = True,
        allow_singular: bool = True,
    ): ...
    @property
    def pinv(self) -> Untyped: ...

class multi_rv_generic:
    def __init__(self, seed: Untyped | None = None): ...
    @property
    def random_state(self) -> Untyped: ...
    @random_state.setter
    def random_state(self, seed): ...

class multi_rv_frozen:
    @property
    def random_state(self) -> Untyped: ...
    @random_state.setter
    def random_state(self, seed): ...

mvn_docdict_params: Untyped
mvn_docdict_noparams: Untyped

class multivariate_normal_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(
        self, mean: Untyped | None = None, cov: int = 1, allow_singular: bool = False, seed: Untyped | None = None
    ) -> Untyped: ...
    def logpdf(self, x, mean: Untyped | None = None, cov: int = 1, allow_singular: bool = False) -> Untyped: ...
    def pdf(self, x, mean: Untyped | None = None, cov: int = 1, allow_singular: bool = False) -> Untyped: ...
    def logcdf(
        self,
        x,
        mean: Untyped | None = None,
        cov: int = 1,
        allow_singular: bool = False,
        maxpts: Untyped | None = None,
        abseps: float = 1e-05,
        releps: float = 1e-05,
        *,
        lower_limit: Untyped | None = None,
    ) -> Untyped: ...
    def cdf(
        self,
        x,
        mean: Untyped | None = None,
        cov: int = 1,
        allow_singular: bool = False,
        maxpts: Untyped | None = None,
        abseps: float = 1e-05,
        releps: float = 1e-05,
        *,
        lower_limit: Untyped | None = None,
    ) -> Untyped: ...
    def rvs(self, mean: Untyped | None = None, cov: int = 1, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self, mean: Untyped | None = None, cov: int = 1) -> Untyped: ...
    def fit(self, x, fix_mean: Untyped | None = None, fix_cov: Untyped | None = None) -> Untyped: ...

multivariate_normal: Untyped

class multivariate_normal_frozen(multi_rv_frozen):
    allow_singular: Untyped
    maxpts: Untyped
    abseps: Untyped
    releps: Untyped
    def __init__(
        self,
        mean: Untyped | None = None,
        cov: int = 1,
        allow_singular: bool = False,
        seed: Untyped | None = None,
        maxpts: Untyped | None = None,
        abseps: float = 1e-05,
        releps: float = 1e-05,
    ): ...
    @property
    def cov(self) -> Untyped: ...
    def logpdf(self, x) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def logcdf(self, x, *, lower_limit: Untyped | None = None) -> Untyped: ...
    def cdf(self, x, *, lower_limit: Untyped | None = None) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...

method: Untyped
method_frozen: Untyped
matnorm_docdict_params: Untyped
matnorm_docdict_noparams: Untyped

class matrix_normal_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, mean: Untyped | None = None, rowcov: int = 1, colcov: int = 1, seed: Untyped | None = None) -> Untyped: ...
    def logpdf(self, X, mean: Untyped | None = None, rowcov: int = 1, colcov: int = 1) -> Untyped: ...
    def pdf(self, X, mean: Untyped | None = None, rowcov: int = 1, colcov: int = 1) -> Untyped: ...
    def rvs(
        self, mean: Untyped | None = None, rowcov: int = 1, colcov: int = 1, size: int = 1, random_state: Untyped | None = None
    ) -> Untyped: ...
    def entropy(self, rowcov: int = 1, colcov: int = 1) -> Untyped: ...

matrix_normal: Untyped

class matrix_normal_frozen(multi_rv_frozen):
    rowpsd: Untyped
    colpsd: Untyped
    def __init__(self, mean: Untyped | None = None, rowcov: int = 1, colcov: int = 1, seed: Untyped | None = None): ...
    def logpdf(self, X) -> Untyped: ...
    def pdf(self, X) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...

dirichlet_docdict_params: Untyped
dirichlet_docdict_noparams: Untyped

class dirichlet_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, alpha, seed: Untyped | None = None) -> Untyped: ...
    def logpdf(self, x, alpha) -> Untyped: ...
    def pdf(self, x, alpha) -> Untyped: ...
    def mean(self, alpha) -> Untyped: ...
    def var(self, alpha) -> Untyped: ...
    def cov(self, alpha) -> Untyped: ...
    def entropy(self, alpha) -> Untyped: ...
    def rvs(self, alpha, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

dirichlet: Untyped

class dirichlet_frozen(multi_rv_frozen):
    alpha: Untyped
    def __init__(self, alpha, seed: Untyped | None = None): ...
    def logpdf(self, x) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def var(self) -> Untyped: ...
    def cov(self) -> Untyped: ...
    def entropy(self) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

wishart_docdict_params: Untyped
wishart_docdict_noparams: Untyped

class wishart_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, df: Untyped | None = None, scale: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def logpdf(self, x, df, scale) -> Untyped: ...
    def pdf(self, x, df, scale) -> Untyped: ...
    def mean(self, df, scale) -> Untyped: ...
    def mode(self, df, scale) -> Untyped: ...
    def var(self, df, scale) -> Untyped: ...
    def rvs(self, df, scale, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self, df, scale) -> Untyped: ...

wishart: Untyped

class wishart_frozen(multi_rv_frozen):
    def __init__(self, df, scale, seed: Untyped | None = None): ...
    def logpdf(self, x) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def mode(self) -> Untyped: ...
    def var(self) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...

class invwishart_gen(wishart_gen):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, df: Untyped | None = None, scale: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def logpdf(self, x, df, scale) -> Untyped: ...
    def pdf(self, x, df, scale) -> Untyped: ...
    def mean(self, df, scale) -> Untyped: ...
    def mode(self, df, scale) -> Untyped: ...
    def var(self, df, scale) -> Untyped: ...
    def rvs(self, df, scale, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self, df, scale) -> Untyped: ...

invwishart: Untyped

class invwishart_frozen(multi_rv_frozen):
    C: Untyped
    log_det_scale: Untyped
    def __init__(self, df, scale, seed: Untyped | None = None): ...
    def logpdf(self, x) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def mode(self) -> Untyped: ...
    def var(self) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...

multinomial_docdict_params: Untyped
multinomial_docdict_noparams: Untyped

class multinomial_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, n, p, seed: Untyped | None = None) -> Untyped: ...
    def logpmf(self, x, n, p) -> Untyped: ...
    def pmf(self, x, n, p) -> Untyped: ...
    def mean(self, n, p) -> Untyped: ...
    def cov(self, n, p) -> Untyped: ...
    def entropy(self, n, p) -> Untyped: ...
    def rvs(self, n, p, size: Untyped | None = None, random_state: Untyped | None = None) -> Untyped: ...

multinomial: Untyped

class multinomial_frozen(multi_rv_frozen):
    def __init__(self, n, p, seed: Untyped | None = None): ...
    def logpmf(self, x) -> Untyped: ...
    def pmf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def cov(self) -> Untyped: ...
    def entropy(self) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

class special_ortho_group_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, dim: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def rvs(self, dim, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

special_ortho_group: Untyped

class special_ortho_group_frozen(multi_rv_frozen):
    dim: Untyped
    def __init__(self, dim: Untyped | None = None, seed: Untyped | None = None): ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

class ortho_group_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, dim: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def rvs(self, dim, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

ortho_group: Untyped

class ortho_group_frozen(multi_rv_frozen):
    dim: Untyped
    def __init__(self, dim: Untyped | None = None, seed: Untyped | None = None): ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

class random_correlation_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, eigs, seed: Untyped | None = None, tol: float = 1e-13, diag_tol: float = 1e-07) -> Untyped: ...
    def rvs(self, eigs, random_state: Untyped | None = None, tol: float = 1e-13, diag_tol: float = 1e-07) -> Untyped: ...

random_correlation: Untyped

class random_correlation_frozen(multi_rv_frozen):
    tol: Untyped
    diag_tol: Untyped
    def __init__(self, eigs, seed: Untyped | None = None, tol: float = 1e-13, diag_tol: float = 1e-07): ...
    def rvs(self, random_state: Untyped | None = None) -> Untyped: ...

class unitary_group_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, dim: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def rvs(self, dim, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

unitary_group: Untyped

class unitary_group_frozen(multi_rv_frozen):
    dim: Untyped
    def __init__(self, dim: Untyped | None = None, seed: Untyped | None = None): ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

mvt_docdict_params: Untyped
mvt_docdict_noparams: Untyped

class multivariate_t_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(
        self, loc: Untyped | None = None, shape: int = 1, df: int = 1, allow_singular: bool = False, seed: Untyped | None = None
    ) -> Untyped: ...
    def pdf(self, x, loc: Untyped | None = None, shape: int = 1, df: int = 1, allow_singular: bool = False) -> Untyped: ...
    def logpdf(self, x, loc: Untyped | None = None, shape: int = 1, df: int = 1) -> Untyped: ...
    def cdf(
        self,
        x,
        loc: Untyped | None = None,
        shape: int = 1,
        df: int = 1,
        allow_singular: bool = False,
        *,
        maxpts: Untyped | None = None,
        lower_limit: Untyped | None = None,
        random_state: Untyped | None = None,
    ) -> Untyped: ...
    def entropy(self, loc: Untyped | None = None, shape: int = 1, df: int = 1) -> Untyped: ...
    def rvs(
        self, loc: Untyped | None = None, shape: int = 1, df: int = 1, size: int = 1, random_state: Untyped | None = None
    ) -> Untyped: ...

class multivariate_t_frozen(multi_rv_frozen):
    shape_info: Untyped
    def __init__(
        self, loc: Untyped | None = None, shape: int = 1, df: int = 1, allow_singular: bool = False, seed: Untyped | None = None
    ): ...
    def logpdf(self, x) -> Untyped: ...
    def cdf(
        self, x, *, maxpts: Untyped | None = None, lower_limit: Untyped | None = None, random_state: Untyped | None = None
    ) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...

multivariate_t: Untyped
mhg_docdict_params: Untyped
mhg_docdict_noparams: Untyped

class multivariate_hypergeom_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, m, n, seed: Untyped | None = None) -> Untyped: ...
    def logpmf(self, x, m, n) -> Untyped: ...
    def pmf(self, x, m, n) -> Untyped: ...
    def mean(self, m, n) -> Untyped: ...
    def var(self, m, n) -> Untyped: ...
    def cov(self, m, n) -> Untyped: ...
    def rvs(self, m, n, size: Untyped | None = None, random_state: Untyped | None = None) -> Untyped: ...

multivariate_hypergeom: Untyped

class multivariate_hypergeom_frozen(multi_rv_frozen):
    def __init__(self, m, n, seed: Untyped | None = None): ...
    def logpmf(self, x) -> Untyped: ...
    def pmf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def var(self) -> Untyped: ...
    def cov(self) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...

class random_table_gen(multi_rv_generic):
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, row, col, *, seed: Untyped | None = None) -> Untyped: ...
    def logpmf(self, x, row, col) -> Untyped: ...
    def pmf(self, x, row, col) -> Untyped: ...
    def mean(self, row, col) -> Untyped: ...
    def rvs(
        self, row, col, *, size: Untyped | None = None, method: Untyped | None = None, random_state: Untyped | None = None
    ) -> Untyped: ...

random_table: Untyped

class random_table_frozen(multi_rv_frozen):
    def __init__(self, row, col, *, seed: Untyped | None = None): ...
    def logpmf(self, x) -> Untyped: ...
    def pmf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def rvs(self, size: Untyped | None = None, method: Untyped | None = None, random_state: Untyped | None = None) -> Untyped: ...

class uniform_direction_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, dim: Untyped | None = None, seed: Untyped | None = None) -> Untyped: ...
    def rvs(self, dim, size: Untyped | None = None, random_state: Untyped | None = None) -> Untyped: ...

uniform_direction: Untyped

class uniform_direction_frozen(multi_rv_frozen):
    dim: Untyped
    def __init__(self, dim: Untyped | None = None, seed: Untyped | None = None): ...
    def rvs(self, size: Untyped | None = None, random_state: Untyped | None = None) -> Untyped: ...

dirichlet_mn_docdict_params: Untyped
dirichlet_mn_docdict_noparams: Untyped

class dirichlet_multinomial_gen(multi_rv_generic):
    __doc__: Untyped
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, alpha, n, seed: Untyped | None = None) -> Untyped: ...
    def logpmf(self, x, alpha, n) -> Untyped: ...
    def pmf(self, x, alpha, n) -> Untyped: ...
    def mean(self, alpha, n) -> Untyped: ...
    def var(self, alpha, n) -> Untyped: ...
    def cov(self, alpha, n) -> Untyped: ...

dirichlet_multinomial: Untyped

class dirichlet_multinomial_frozen(multi_rv_frozen):
    alpha: Untyped
    n: Untyped
    def __init__(self, alpha, n, seed: Untyped | None = None): ...
    def logpmf(self, x) -> Untyped: ...
    def pmf(self, x) -> Untyped: ...
    def mean(self) -> Untyped: ...
    def var(self) -> Untyped: ...
    def cov(self) -> Untyped: ...

class vonmises_fisher_gen(multi_rv_generic):
    def __init__(self, seed: Untyped | None = None): ...
    def __call__(self, mu: Untyped | None = None, kappa: int = 1, seed: Untyped | None = None) -> Untyped: ...
    def logpdf(self, x, mu: Untyped | None = None, kappa: int = 1) -> Untyped: ...
    def pdf(self, x, mu: Untyped | None = None, kappa: int = 1) -> Untyped: ...
    def rvs(self, mu: Untyped | None = None, kappa: int = 1, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self, mu: Untyped | None = None, kappa: int = 1) -> Untyped: ...
    def fit(self, x) -> Untyped: ...

vonmises_fisher: Untyped

class vonmises_fisher_frozen(multi_rv_frozen):
    def __init__(self, mu: Untyped | None = None, kappa: int = 1, seed: Untyped | None = None): ...
    def logpdf(self, x) -> Untyped: ...
    def pdf(self, x) -> Untyped: ...
    def rvs(self, size: int = 1, random_state: Untyped | None = None) -> Untyped: ...
    def entropy(self) -> Untyped: ...
