"use strict";(self.webpackChunknonebot=self.webpackChunknonebot||[]).push([[7573],{35318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),k=c(n),d=a,m=k["".concat(i,".").concat(d)]||k[d]||u[d]||o;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[k]="string"==typeof e?e:a,s[1]=p;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64967:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(25773),a=(n(27378),n(35318));const o={sidebar_position:3,description:"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1\u4ee5\u8fdb\u884c\u6d4b\u8bd5"},s="\u6a21\u62df\u7f51\u7edc\u901a\u4fe1",p={unversionedId:"best-practice/testing/mock-network",id:"version-2.3.2/best-practice/testing/mock-network",title:"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1",description:"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1\u4ee5\u8fdb\u884c\u6d4b\u8bd5",source:"@site/versioned_docs/version-2.3.2/best-practice/testing/mock-network.md",sourceDirName:"best-practice/testing",slug:"/best-practice/testing/mock-network",permalink:"/website/docs/2.3.2/best-practice/testing/mock-network",draft:!1,editUrl:"https://github.com/nonebot/nonebot2/edit/master/website/versioned_docs/version-2.3.2/best-practice/testing/mock-network.md",tags:[],version:"2.3.2",lastUpdatedBy:"noneflow[bot]",lastUpdatedAt:1723953437,formattedLastUpdatedAt:"2024\u5e748\u670818\u65e5",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1\u4ee5\u8fdb\u884c\u6d4b\u8bd5"},sidebar:"tutorial",previous:{title:"\u6d4b\u8bd5\u4e8b\u4ef6\u54cd\u5e94\u4e0e\u4f1a\u8bdd\u64cd\u4f5c",permalink:"/website/docs/2.3.2/best-practice/testing/behavior"},next:{title:"Alconna \u63d2\u4ef6",permalink:"/website/docs/2.3.2/best-practice/alconna/"}},i={},c=[{value:"\u6d4b\u8bd5 HTTP \u670d\u52a1\u7aef",id:"\u6d4b\u8bd5-http-\u670d\u52a1\u7aef",level:2},{value:"\u6d4b\u8bd5 WebSocket \u670d\u52a1\u7aef",id:"\u6d4b\u8bd5-websocket-\u670d\u52a1\u7aef",level:2},{value:"\u6d4b\u8bd5 HTTP \u5ba2\u6237\u7aef",id:"\u6d4b\u8bd5-http-\u5ba2\u6237\u7aef",level:2},{value:"\u6d4b\u8bd5 WebSocket \u5ba2\u6237\u7aef",id:"\u6d4b\u8bd5-websocket-\u5ba2\u6237\u7aef",level:2}],l={toc:c},k="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1"},"\u6a21\u62df\u7f51\u7edc\u901a\u4fe1"),(0,a.kt)("p",null,"NoneBot \u9a71\u52a8\u5668\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u6765\u5e2e\u52a9\u9002\u914d\u5668\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\uff0c\u4e3b\u8981\u5305\u62ec\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e24\u79cd\u7c7b\u578b\u3002\u6a21\u62df\u7f51\u7edc\u901a\u4fe1\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u52a0\u63a5\u8fd1\u5b9e\u9645\u673a\u5668\u4eba\u5e94\u7528\u573a\u666f\uff0c\u8fdb\u884c\u66f4\u52a0\u771f\u5b9e\u7684\u96c6\u6210\u6d4b\u8bd5\u3002\u540c\u65f6\uff0c\u901a\u8fc7\u8fd9\u79cd\u9014\u5f84\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b8c\u6210\u5bf9\u9002\u914d\u5668\u7684\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,"NoneBot \u4e2d\u7684\u7f51\u7edc\u901a\u4fe1\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u79cd\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"HTTP \u670d\u52a1\u7aef\uff08WebHook\uff09"),(0,a.kt)("li",{parentName:"ul"},"WebSocket \u670d\u52a1\u7aef"),(0,a.kt)("li",{parentName:"ul"},"HTTP \u5ba2\u6237\u7aef"),(0,a.kt)("li",{parentName:"ul"},"WebSocket \u5ba2\u6237\u7aef")),(0,a.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u5c06\u5206\u522b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 NoneBug \u6765\u6a21\u62df\u8fd9\u51e0\u79cd\u901a\u4fe1\u65b9\u5f0f\u3002"),(0,a.kt)("h2",{id:"\u6d4b\u8bd5-http-\u670d\u52a1\u7aef"},"\u6d4b\u8bd5 HTTP \u670d\u52a1\u7aef"),(0,a.kt)("p",null,"\u5f53 NoneBot \u4f5c\u4e3a ASGI \u670d\u52a1\u7aef\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u8def\u7531\u6765\u5904\u7406 HTTP \u8bf7\u6c42\uff0c\u9002\u914d\u5668\u540c\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u8def\u7531\u6765\u54cd\u5e94\u673a\u5668\u4eba\u76f8\u5173\u7684\u7f51\u7edc\u901a\u4fe1\u3002\u4e0b\u9762\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u9002\u914d\u5668 ",(0,a.kt)("inlineCode",{parentName:"p"},"fake")," \uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u7531 ",(0,a.kt)("inlineCode",{parentName:"p"},"/fake/http")," \uff0c\u7528\u4e8e\u63a5\u6536\u5e73\u53f0 WebHook \u5e76\u5904\u7406\u3002\u5b9e\u9645\u5e94\u7528\u6d4b\u8bd5\u65f6\uff0c\u5e94\u5c06\u8be5\u8def\u7531\u5730\u5740\u66ff\u6362\u4e3a",(0,a.kt)("strong",{parentName:"p"},"\u771f\u5b9e\u9002\u914d\u5668\u6ce8\u518c\u7684\u8def\u7531\u5730\u5740"),"\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u9996\u5148\u9700\u8981\u83b7\u53d6\u6d4b\u8bd5\u7528\u6a21\u62df\u5ba2\u6237\u7aef\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"{5,6} title=tests/test_http_server.py","{5,6}":!0,title:"tests/test_http_server.py"},"from nonebug import App\n\n@pytest.mark.asyncio\nasync def test_http_server(app: App):\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n")),(0,a.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"app.test_server()")," \u4f1a\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"nonebot.get_asgi")," \u83b7\u53d6\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a ASGI \u5e94\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"async with app.test_server(asgi=asgi_app) as ctx:\n    ...\n")),(0,a.kt)("p",null,"\u83b7\u53d6\u5230\u6a21\u62df\u5ba2\u6237\u7aef\u540e\uff0c\u5373\u53ef\u50cf ",(0,a.kt)("inlineCode",{parentName:"p"},"requests"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"httpx")," \u7b49\u5e93\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8fdb\u884c\u4f7f\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"{3,11-14,16} title=tests/test_http_server.py","{3,11-14,16}":!0,title:"tests/test_http_server.py"},'import nonebot\nfrom nonebug import App\nfrom nonebot.adapters.fake import Adapter\n\n@pytest.mark.asyncio\nasync def test_http_server(app: App):\n    adapter = nonebot.get_adapter(Adapter)\n\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n        response = await client.post("/fake/http", json={"bot_id": "fake"})\n        assert response.status_code == 200\n        assert response.json() == {"status": "success"}\n        assert "fake" in nonebot.get_bots()\n\n    adapter.bot_disconnect(nonebot.get_bot("fake"))\n')),(0,a.kt)("p",null,"\u5728\u4e0a\u9762\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5411 ",(0,a.kt)("inlineCode",{parentName:"p"},"/fake/http")," \u53d1\u9001\u4e86\u4e00\u4e2a\u6a21\u62df POST \u8bf7\u6c42\uff0c\u9002\u914d\u5668\u5c06\u4f1a\u5bf9\u8be5\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8bf7\u6c42\u8fd4\u56de\u662f\u5426\u6b63\u786e\u3001Bot \u5bf9\u8c61\u662f\u5426\u521b\u5efa\u7b49\u9014\u5f84\u6765\u9a8c\u8bc1\u673a\u5668\u4eba\u662f\u5426\u6b63\u786e\u8fd0\u884c\u3002\u5728\u5b8c\u6210\u6d4b\u8bd5\u540e\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u5bf9 Bot \u5bf9\u8c61\u8fdb\u884c\u6e05\u7406\uff0c\u4ee5\u907f\u514d\u5bf9\u5176\u4ed6\u6d4b\u8bd5\u4ea7\u751f\u5f71\u54cd\u3002"),(0,a.kt)("h2",{id:"\u6d4b\u8bd5-websocket-\u670d\u52a1\u7aef"},"\u6d4b\u8bd5 WebSocket \u670d\u52a1\u7aef"),(0,a.kt)("p",null,"\u5f53 NoneBot \u4f5c\u4e3a ASGI \u670d\u52a1\u7aef\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u8def\u7531\u6765\u5904\u7406 WebSocket \u901a\u4fe1\u3002\u4e0b\u9762\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u9002\u914d\u5668 ",(0,a.kt)("inlineCode",{parentName:"p"},"fake")," \uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u7531 ",(0,a.kt)("inlineCode",{parentName:"p"},"/fake/ws")," \uff0c\u7528\u4e8e\u5904\u7406\u5e73\u53f0 WebSocket \u8fde\u63a5\u4fe1\u606f\u3002\u5b9e\u9645\u5e94\u7528\u6d4b\u8bd5\u65f6\uff0c\u5e94\u5c06\u8be5\u8def\u7531\u5730\u5740\u66ff\u6362\u4e3a",(0,a.kt)("strong",{parentName:"p"},"\u771f\u5b9e\u9002\u914d\u5668\u6ce8\u518c\u7684\u8def\u7531\u5730\u5740"),"\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u540c\u6837\u9700\u8981\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"app.test_server()")," \u83b7\u53d6\u6d4b\u8bd5\u7528\u6a21\u62df\u5ba2\u6237\u7aef\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\u5728\u83b7\u53d6\u5230\u6a21\u62df\u5ba2\u6237\u7aef\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"client.websocket_connect")," \u65b9\u6cd5\u6765\u6a21\u62df WebSocket \u8fde\u63a5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"{3,11-15} title=tests/test_ws_server.py","{3,11-15}":!0,title:"tests/test_ws_server.py"},'import nonebot\nfrom nonebug import App\nfrom nonebot.adapters.fake import Adapter\n\n@pytest.mark.asyncio\nasync def test_ws_server(app: App):\n    adapter = nonebot.get_adapter(Adapter)\n\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n        async with client.websocket_connect("/fake/ws") as ws:\n            await ws.send_json({"bot_id": "fake"})\n            response = await ws.receive_json()\n            assert response == {"status": "success"}\n            assert "fake" in nonebot.get_bots()\n')),(0,a.kt)("p",null,"\u5728\u4e0a\u9762\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5411 ",(0,a.kt)("inlineCode",{parentName:"p"},"/fake/ws")," \u8fdb\u884c\u4e86 WebSocket \u6a21\u62df\u901a\u4fe1\uff0c\u901a\u8fc7\u53d1\u9001\u6d88\u606f\u4e0e\u673a\u5668\u4eba\u8fdb\u884c\u4ea4\u4e92\uff0c\u7136\u540e\u68c0\u67e5\u673a\u5668\u4eba\u53d1\u9001\u7684\u4fe1\u606f\u662f\u5426\u6b63\u786e\u3002"),(0,a.kt)("h2",{id:"\u6d4b\u8bd5-http-\u5ba2\u6237\u7aef"},"\u6d4b\u8bd5 HTTP \u5ba2\u6237\u7aef"),(0,a.kt)("p",null,(0,a.kt)("del",{parentName:"p"},"\u6682\u4e0d\u652f\u6301")),(0,a.kt)("h2",{id:"\u6d4b\u8bd5-websocket-\u5ba2\u6237\u7aef"},"\u6d4b\u8bd5 WebSocket \u5ba2\u6237\u7aef"),(0,a.kt)("p",null,(0,a.kt)("del",{parentName:"p"},"\u6682\u4e0d\u652f\u6301")))}u.isMDXComponent=!0}}]);