"use strict";(self.webpackChunknonebot=self.webpackChunknonebot||[]).push([[1860],{35318:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=l(n),c=r,f=m["".concat(i,".").concat(c)]||m[c]||g[c]||o;return n?a.createElement(f,s(s({ref:t},d),{},{components:n})):a.createElement(f,s({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=c;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[m]="string"==typeof e?e:r,s[1]=p;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},99464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=n(25773),r=(n(27378),n(35318));const o={sidebar_position:1,description:"\u7f16\u5199\u9002\u914d\u5668\u5bf9\u63a5\u65b0\u7684\u5e73\u53f0"},s="\u7f16\u5199\u9002\u914d\u5668",p={unversionedId:"developer/adapter-writing",id:"version-2.3.2/developer/adapter-writing",title:"\u7f16\u5199\u9002\u914d\u5668",description:"\u7f16\u5199\u9002\u914d\u5668\u5bf9\u63a5\u65b0\u7684\u5e73\u53f0",source:"@site/versioned_docs/version-2.3.2/developer/adapter-writing.md",sourceDirName:"developer",slug:"/developer/adapter-writing",permalink:"/website/docs/2.3.2/developer/adapter-writing",draft:!1,editUrl:"https://github.com/nonebot/nonebot2/edit/master/website/versioned_docs/version-2.3.2/developer/adapter-writing.md",tags:[],version:"2.3.2",lastUpdatedBy:"noneflow[bot]",lastUpdatedAt:1723953437,formattedLastUpdatedAt:"2024\u5e748\u670818\u65e5",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"\u7f16\u5199\u9002\u914d\u5668\u5bf9\u63a5\u65b0\u7684\u5e73\u53f0"},sidebar:"tutorial",previous:{title:"\u53d1\u5e03\u63d2\u4ef6",permalink:"/website/docs/2.3.2/developer/plugin-publishing"}},i={},l=[{value:"\u7ec4\u7ec7\u7ed3\u6784",id:"\u7ec4\u7ec7\u7ed3\u6784",level:2},{value:"\u4f7f\u7528 NB-CLI \u521b\u5efa\u9879\u76ee",id:"\u4f7f\u7528-nb-cli-\u521b\u5efa\u9879\u76ee",level:3},{value:"\u7ec4\u6210\u90e8\u5206",id:"\u7ec4\u6210\u90e8\u5206",level:2},{value:"Log",id:"log",level:3},{value:"Config",id:"config",level:3},{value:"Adapter",id:"adapter",level:3},{value:"\u4e0e\u5e73\u53f0\u4ea4\u4e92",id:"\u4e0e\u5e73\u53f0\u4ea4\u4e92",level:4},{value:"\u5ba2\u6237\u7aef\u901a\u4fe1\u65b9\u5f0f",id:"\u5ba2\u6237\u7aef\u901a\u4fe1\u65b9\u5f0f",level:5},{value:"\u670d\u52a1\u7aef\u901a\u4fe1\u65b9\u5f0f",id:"\u670d\u52a1\u7aef\u901a\u4fe1\u65b9\u5f0f",level:5},{value:"\u5efa\u7acb Bot \u8fde\u63a5",id:"\u5efa\u7acb-bot-\u8fde\u63a5",level:4},{value:"\u8f6c\u6362 Event \u4e8b\u4ef6",id:"\u8f6c\u6362-event-\u4e8b\u4ef6",level:4},{value:"\u8c03\u7528\u5e73\u53f0 API",id:"\u8c03\u7528\u5e73\u53f0-api",level:4},{value:"Bot",id:"bot",level:3},{value:"Event",id:"event",level:3},{value:"Message",id:"message",level:3},{value:"\u9002\u914d\u5668\u6d4b\u8bd5",id:"\u9002\u914d\u5668\u6d4b\u8bd5",level:2},{value:"\u540e\u7eed\u5de5\u4f5c",id:"\u540e\u7eed\u5de5\u4f5c",level:2}],d={toc:l},m="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u7f16\u5199\u9002\u914d\u5668"},"\u7f16\u5199\u9002\u914d\u5668"),(0,r.kt)("p",null,"\u5728\u7f16\u5199\u9002\u914d\u5668\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3",(0,r.kt)("a",{parentName:"p",href:"../advanced/adapter#%E9%80%82%E9%85%8D%E5%99%A8%E5%8A%9F%E8%83%BD%E4%B8%8E%E7%BB%84%E6%88%90"},"\u9002\u914d\u5668\u7684\u529f\u80fd\u4e0e\u7ec4\u6210"),"\uff0c\u9002\u914d\u5668\u901a\u5e38\u7531 ",(0,r.kt)("inlineCode",{parentName:"p"},"Adapter"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Bot"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Event")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"Message")," \u56db\u4e2a\u90e8\u5206\u7ec4\u6210\uff0c\u5728\u7f16\u5199\u9002\u914d\u5668\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u627f NoneBot \u4e2d\u7684\u57fa\u7c7b\uff0c\u5e76\u6839\u636e\u5b9e\u9645\u5e73\u53f0\u6765\u7f16\u5199\u6bcf\u4e2a\u90e8\u5206\u529f\u80fd\u3002"),(0,r.kt)("h2",{id:"\u7ec4\u7ec7\u7ed3\u6784"},"\u7ec4\u7ec7\u7ed3\u6784"),(0,r.kt)("p",null,"NoneBot \u9002\u914d\u5668\u9879\u76ee\u901a\u5e38\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"nonebot-adapter-{adapter-name}")," \u4f5c\u4e3a\u9879\u76ee\u540d\uff0c\u5e76\u4ee5",(0,r.kt)("strong",{parentName:"p"},"\u547d\u540d\u7a7a\u95f4\u5305"),"\u7684\u5f62\u5f0f\u7f16\u5199\uff0c\u5373\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"nonebot/adapters/{adapter-name}")," \u76ee\u5f55\u4e2d\u7f16\u5199\u5b9e\u9645\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tree"},"\ud83d\udce6 nonebot-adapter-{adapter-name}\n\u251c\u2500\u2500 \ud83d\udcc2 nonebot\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 adapters\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 {adapter-name}\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdc __init__.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdc adapter.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdc bot.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdc config.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdc event.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcdc message.py\n\u251c\u2500\u2500 \ud83d\udcdc pyproject.toml\n\u2514\u2500\u2500 \ud83d\udcdc README.md\n")),(0,r.kt)("admonition",{title:"\u63d0\u793a",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u4e0a\u8ff0\u7684\u9879\u76ee\u7ed3\u6784\u4ec5\u4f5c\u63a8\u8350\uff0c\u4e0d\u505a\u5f3a\u5236\u8981\u6c42\uff0c\u4fdd\u8bc1\u5b9e\u9645\u53ef\u7528\u6027\u5373\u53ef\u3002")),(0,r.kt)("h3",{id:"\u4f7f\u7528-nb-cli-\u521b\u5efa\u9879\u76ee"},"\u4f7f\u7528 NB-CLI \u521b\u5efa\u9879\u76ee"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u811a\u624b\u67b6\u5feb\u901f\u521b\u5efa\u9879\u76ee\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"nb adapter create\n")),(0,r.kt)("p",null,"\u6309\u7167\u6307\u5f15\uff0c\u8f93\u5165\u9002\u914d\u5668\u540d\u79f0\u4ee5\u53ca\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u57fa\u672c\u7ed3\u6784\u7684\u9002\u914d\u5668\u9879\u76ee\u3002"),(0,r.kt)("h2",{id:"\u7ec4\u6210\u90e8\u5206"},"\u7ec4\u6210\u90e8\u5206"),(0,r.kt)("admonition",{title:"\u63d0\u793a",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u672c\u7ae0\u8282\u7684\u4ee3\u7801\u4e2d\u63d0\u5230\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Adapter"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Bot"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Event")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"Message")," \u7b49\uff0c\u5747\u4e3a\u4e0b\u6587\u4e2d\u9002\u914d\u5668\u6240\u7f16\u5199\u7684\u7c7b\uff0c\u800c\u975e NoneBot \u4e2d\u7684\u57fa\u7c7b\u3002")),(0,r.kt)("h3",{id:"log"},"Log"),(0,r.kt)("p",null,"\u9002\u914d\u5668\u5728\u5904\u7406\u65f6\u901a\u5e38\u9700\u8981\u6253\u5370\u65e5\u5fd7\uff0c\u4f46\u76f4\u63a5\u4f7f\u7528 NoneBot \u7684\u9ed8\u8ba4 ",(0,r.kt)("inlineCode",{parentName:"p"},"logger")," \u4e0d\u65b9\u4fbf\u533a\u5206\u9002\u914d\u5668\u8f93\u51fa\u548c\u5176\u5b83\u65e5\u5fd7\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 NoneBot \u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"logger_wrapper")," \u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," \u51fd\u6570\u7528\u4e8e\u5feb\u6377\u6253\u5370\u9002\u914d\u5668\u65e5\u5fd7\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{3} title=log.py","{3}":!0,title:"log.py"},'from nonebot.utils import logger_wrapper\n\nlog = logger_wrapper("your_adapter_name")\n')),(0,r.kt)("p",null,"\u8fd9\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," \u51fd\u6570\u4f1a\u5728\u9ed8\u8ba4 ",(0,r.kt)("inlineCode",{parentName:"p"},"logger")," \u4e2d\u6dfb\u52a0\u9002\u914d\u5668\u540d\u79f0\u524d\u7f00\uff0c\u5b83\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1a\u65e5\u5fd7\u7b49\u7ea7\u3001\u65e5\u5fd7\u5185\u5bb9\u4ee5\u53ca\u53ef\u9009\u7684\u5f02\u5e38\uff0c\u5177\u4f53\u7528\u6cd5\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from .log import log\n\nlog("DEBUG", "A DEBUG log.")\nlog("INFO", "A INFO log.")\n\ntry:\n    ...\nexcept Exception as e:\n    log("ERROR", "something error.", e)\n')),(0,r.kt)("h3",{id:"config"},"Config"),(0,r.kt)("p",null,"\u901a\u5e38\u9002\u914d\u5668\u9700\u8981\u4e00\u4e9b\u914d\u7f6e\u9879\uff0c\u4f8b\u5982\u5e73\u53f0\u8fde\u63a5\u5bc6\u94a5\u7b49\u3002\u9002\u914d\u5668\u7684\u914d\u7f6e\u65b9\u6cd5\u4e0e",(0,r.kt)("a",{parentName:"p",href:"../appendices/config#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE"},"\u63d2\u4ef6\u914d\u7f6e"),"\u7c7b\u4f3c\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=config.py",title:"config.py"},"from pydantic import BaseModel\n\nclass Config(BaseModel):\n    xxx_id: str\n    xxx_token: str\n")),(0,r.kt)("p",null,"\u914d\u7f6e\u9879\u7684\u8bfb\u53d6\u5c06\u5728\u4e0b\u65b9 ",(0,r.kt)("a",{parentName:"p",href:"#adapter"},"Adapter")," \u4e2d\u4ecb\u7ecd\u3002"),(0,r.kt)("h3",{id:"adapter"},"Adapter"),(0,r.kt)("p",null,"Adapter \u8d1f\u8d23\u8f6c\u6362\u4e8b\u4ef6\u3001\u8c03\u7528\u63a5\u53e3\uff0c\u4ee5\u53ca\u6b63\u786e\u521b\u5efa Bot \u5bf9\u8c61\u5e76\u6ce8\u518c\u5230 NoneBot \u4e2d\u3002\u5728\u7f16\u5199\u5e73\u53f0\u76f8\u5173\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u627f\u57fa\u7c7b\uff0c\u5e76\u5b9e\u73b0\u9002\u914d\u5668\u7684\u57fa\u672c\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{9,11,14,18} title=adapter.py","{9,11,14,18}":!0,title:"adapter.py"},'from typing import Any\nfrom typing_extensions import override\n\nfrom nonebot.drivers import Driver\nfrom nonebot import get_plugin_config\nfrom nonebot.adapters import Adapter as BaseAdapter\n\nfrom .config import Config\n\nclass Adapter(BaseAdapter):\n    @override\n    def __init__(self, driver: Driver, **kwargs: Any):\n        super().__init__(driver, **kwargs)\n        # \u8bfb\u53d6\u9002\u914d\u5668\u6240\u9700\u7684\u914d\u7f6e\u9879\n        self.adapter_config: Config = get_plugin_config(Config)\n\n    @classmethod\n    @override\n    def get_name(cls) -> str:\n        """\u9002\u914d\u5668\u540d\u79f0"""\n        return "your_adapter_name"\n')),(0,r.kt)("h4",{id:"\u4e0e\u5e73\u53f0\u4ea4\u4e92"},"\u4e0e\u5e73\u53f0\u4ea4\u4e92"),(0,r.kt)("p",null,"NoneBot \u63d0\u4f9b\u4e86\u591a\u79cd ",(0,r.kt)("a",{parentName:"p",href:"../advanced/driver"},"Driver")," \u6765\u5e2e\u52a9\u9002\u914d\u5668\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\uff0c\u4e3b\u8981\u5206\u4e3a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e24\u79cd\u7c7b\u578b\u3002\u6211\u4eec\u9700\u8981",(0,r.kt)("strong",{parentName:"p"},"\u6839\u636e\u5e73\u53f0\u6587\u6863\u548c\u7279\u6027"),"\u9009\u62e9\u5408\u9002\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5e76\u7f16\u5199\u76f8\u5173\u65b9\u6cd5\u7528\u4e8e\u521d\u59cb\u5316\u9002\u914d\u5668\uff0c\u4e0e\u5e73\u53f0\u5efa\u7acb\u8fde\u63a5\u548c\u8fdb\u884c\u4ea4\u4e92\uff1a"),(0,r.kt)("h5",{id:"\u5ba2\u6237\u7aef\u901a\u4fe1\u65b9\u5f0f"},"\u5ba2\u6237\u7aef\u901a\u4fe1\u65b9\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{12,23,24} title=adapter.py","{12,23,24}":!0,title:"adapter.py"},'import asyncio\nfrom typing_extensions import override\n\nfrom nonebot import get_plugin_config\nfrom nonebot.exception import WebSocketClosed\nfrom nonebot.drivers import Request, WebSocketClientMixin\n\nclass Adapter(BaseAdapter):\n    @override\n    def __init__(self, driver: Driver, **kwargs: Any):\n        super().__init__(driver, **kwargs)\n        self.adapter_config: Config = get_plugin_config(Config)\n        self.task: Optional[asyncio.Task] = None  # \u5b58\u50a8 ws \u4efb\u52a1\n        self.setup()\n\n    def setup(self) -> None:\n        if not isinstance(self.driver, WebSocketClientMixin):\n            # \u5224\u65ad\u7528\u6237\u914d\u7f6e\u7684Driver\u7c7b\u578b\u662f\u5426\u7b26\u5408\u9002\u914d\u5668\u8981\u6c42\uff0c\u4e0d\u7b26\u5408\u65f6\u5e94\u629b\u51fa\u5f02\u5e38\n            raise RuntimeError(\n                f"Current driver {self.config.driver} doesn\'t support websocket client connections!"\n                f"{self.get_name()} Adapter need a WebSocket Client Driver to work."\n            )\n        # \u5728 NoneBot \u542f\u52a8\u548c\u5173\u95ed\u65f6\u8fdb\u884c\u76f8\u5173\u64cd\u4f5c\n        self.driver.on_startup(self.startup)\n        self.driver.on_shutdown(self.shutdown)\n\n    async def startup(self) -> None:\n        """\u5b9a\u4e49\u542f\u52a8\u65f6\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u548c\u5e73\u53f0\u5efa\u7acb\u8fde\u63a5"""\n        self.task = asyncio.create_task(self._forward_ws())  # \u5efa\u7acb ws \u8fde\u63a5\n\n    async def _forward_ws(self):\n        request = Request(\n            method="GET",\n            url="your_platform_websocket_url",\n            headers={"token": "..."},  # \u9274\u6743\u8bf7\u6c42\u5934\n        )\n        while True:\n            try:\n                async with self.websocket(request) as ws:\n                    try:\n                        # \u5904\u7406 websocket\n                        ...\n                    except WebSocketClosed as e:\n                        log(\n                            "ERROR",\n                            "<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>",\n                            e,\n                        )\n                    except Exception as e:\n                        log(\n                            "ERROR",\n                            "<r><bg #f8bbd0>Error while process data from "\n                            "websocket platform_websocket_url. "\n                            "Trying to reconnect...</bg #f8bbd0></r>",\n                            e,\n                        )\n                    finally:\n                        # \u8fd9\u91cc\u8981\u65ad\u5f00 Bot \u8fde\u63a5\n            except Exception as e:\n                # \u5c1d\u8bd5\u91cd\u8fde\n                log(\n                    "ERROR",\n                    "<r><bg #f8bbd0>Error while setup websocket to "\n                    "platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>",\n                    e,\n                )\n                await asyncio.sleep(3)  # \u91cd\u8fde\u95f4\u9694\n\n    async def shutdown(self) -> None:\n        """\u5b9a\u4e49\u5173\u95ed\u65f6\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u505c\u6b62\u4efb\u52a1\u3001\u65ad\u5f00\u8fde\u63a5"""\n\n        # \u65ad\u5f00 ws \u8fde\u63a5\n        if self.task is not None and not self.task.done():\n            self.task.cancel()\n')),(0,r.kt)("h5",{id:"\u670d\u52a1\u7aef\u901a\u4fe1\u65b9\u5f0f"},"\u670d\u52a1\u7aef\u901a\u4fe1\u65b9\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{30,38} title=adapter.py","{30,38}":!0,title:"adapter.py"},'from nonebot import get_plugin_config\nfrom nonebot.drivers import (\n    Request,\n    ASGIMixin,\n    WebSocket,\n    HTTPServerSetup,\n    WebSocketServerSetup\n)\n\nclass Adapter(BaseAdapter):\n    @override\n    def __init__(self, driver: Driver, **kwargs: Any):\n        super().__init__(driver, **kwargs)\n        self.adapter_config: Config = get_plugin_config(Config)\n        self.setup()\n\n    def setup(self) -> None:\n        if not isinstance(self.driver, ASGIMixin):\n            raise RuntimeError(\n                f"Current driver {self.config.driver} doesn\'t support asgi server!"\n                f"{self.get_name()} Adapter need a asgi server driver to work."\n            )\n        # \u5efa\u7acb\u670d\u52a1\u7aef\u8def\u7531\n        # HTTP Webhook \u8def\u7531\n        http_setup = HTTPServerSetup(\n            URL("your_webhook_url"),  # \u8def\u7531\u5730\u5740\n            "POST",  # \u63a5\u6536\u7684\u65b9\u6cd5\n            "WEBHOOK name",  # \u8def\u7531\u540d\u79f0\n            self._handle_http,  # \u5904\u7406\u51fd\u6570\n        )\n        self.setup_http_server(http_setup)\n\n        # \u53cd\u5411 Websocket \u8def\u7531\n        ws_setup = WebSocketServerSetup(\n            URL("your_websocket_url"),  # \u8def\u7531\u5730\u5740\n            "WebSocket name",  # \u8def\u7531\u540d\u79f0\n            self._handle_ws,  # \u5904\u7406\u51fd\u6570\n        )\n        self.setup_websocket_server(ws_setup)\n\n\n    async def _handle_http(self, request: Request) -> Response:\n        """HTTP \u8def\u7531\u5904\u7406\u51fd\u6570\uff0c\u53ea\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3a Request \u7684\u53c2\u6570\uff0c\u4e14\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Response"""\n        ...\n        return Response(\n            status_code=200,  # \u72b6\u6001\u7801\n            headers={"something": "something"},  # \u54cd\u5e94\u5934\n            content="xxx",  # \u54cd\u5e94\u5185\u5bb9\n        )\n\n    async def _handle_ws(self, websocket: WebSocket) -> Any:\n        """WebSocket \u8def\u7531\u5904\u7406\u51fd\u6570\uff0c\u53ea\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3a WebSocket \u7684\u53c2\u6570"""\n        ...\n')),(0,r.kt)("p",null,"\u66f4\u591a\u901a\u4fe1\u4ea4\u4e92\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u9002\u914d\u5668\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-onebot/blob/master/nonebot/adapters/onebot/v11/adapter.py"},"OneBot")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"WebSocket \u5ba2\u6237\u7aef"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"WebSocket \u670d\u52a1\u7aef"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP WEBHOOK"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP POST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-qqguild/blob/master/nonebot/adapters/qqguild/adapter.py"},"QQGuild")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"WebSocket \u670d\u52a1\u7aef")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-telegram/blob/beta/nonebot/adapters/telegram/adapter.py"},"Telegram")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP WEBHOOK"))),(0,r.kt)("h4",{id:"\u5efa\u7acb-bot-\u8fde\u63a5"},"\u5efa\u7acb Bot \u8fde\u63a5"),(0,r.kt)("p",null,"\u5728\u4e0e\u5e73\u53f0\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06 ",(0,r.kt)("a",{parentName:"p",href:"#bot"},"Bot")," \u5b9e\u4f8b\u5316\uff0c\u5e76\u8c03\u7528\u9002\u914d\u5668\u63d0\u4f9b\u7684\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"bot_connect")," \u65b9\u6cd5\u544a\u77e5 NoneBot \u5efa\u7acb\u4e86 Bot \u8fde\u63a5\u3002\u5728\u4e0e\u5e73\u53f0\u65ad\u5f00\u8fde\u63a5\u6216\u51fa\u73b0\u67d0\u4e9b\u5f02\u5e38\u8fdb\u884c\u91cd\u8fde\u65f6\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"bot_disconnect")," \u65b9\u6cd5\u544a\u77e5 NoneBot \u65ad\u5f00\u4e86 Bot \u8fde\u63a5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{7,8,11} title=adapter.py","{7,8,11}":!0,title:"adapter.py"},"from .bot import Bot\n\nclass Adapter(BaseAdapter):\n\n    def _handle_connect(self):\n        bot_id = ...  # \u901a\u8fc7\u914d\u7f6e\u6216\u8005\u5e73\u53f0 API \u7b49\u65b9\u5f0f\uff0c\u83b7\u53d6\u5230 Bot \u7684 ID\n        bot = Bot(self, self_id=bot_id)  # \u5b9e\u4f8b\u5316 Bot\n        self.bot_connect(bot)  # \u5efa\u7acb Bot \u8fde\u63a5\n\n    def _handle_disconnect(self):\n        self.bot_disconnect(bot)  # \u65ad\u5f00 Bot \u8fde\u63a5\n")),(0,r.kt)("h4",{id:"\u8f6c\u6362-event-\u4e8b\u4ef6"},"\u8f6c\u6362 Event \u4e8b\u4ef6"),(0,r.kt)("p",null,"\u5728\u63a5\u6536\u5230\u6765\u81ea\u5e73\u53f0\u7684\u4e8b\u4ef6\u6570\u636e\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u4e3a\u9002\u914d\u5668\u7684 ",(0,r.kt)("a",{parentName:"p",href:"#event"},"Event"),"\uff0c\u5e76\u8c03\u7528 Bot \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"handle_event")," \u65b9\u6cd5\u6765\u8ba9 Bot \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=adapter.py",title:"adapter.py"},'import asyncio\nfrom typing import Any, Dict\n\nfrom nonebot.compat import type_validate_python\n\nfrom .bot import Bot\nfrom .event import Event\nfrom .log import log\n\nclass Adapter(BaseAdapter):\n\n    @classmethod\n    def payload_to_event(cls, payload: Dict[str, Any]) -> Event:\n        """\u6839\u636e\u5e73\u53f0\u4e8b\u4ef6\u7684\u7279\u6027\uff0c\u8f6c\u6362\u5e73\u53f0 payload \u4e3a\u5177\u4f53 Event\n\n        Event \u6a21\u578b\u7ee7\u627f\u81ea pydantic.BaseModel\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 pydantic \u6587\u6863\n        """\n\n        # \u505a\u4e00\u5c42\u5f02\u5e38\u5904\u7406\uff0c\u4ee5\u5e94\u5bf9\u5e73\u53f0\u4e8b\u4ef6\u6570\u636e\u7684\u53d8\u66f4\n        try:\n            return type_validate_python(your_event_class, payload)\n        except Exception as e:\n            # \u65e0\u6cd5\u6b63\u5e38\u89e3\u6790\u4e3a\u5177\u4f53 Event \u65f6\uff0c\u7ed9\u51fa\u65e5\u5fd7\u63d0\u793a\n            log(\n                "WARNING",\n                f"Parse event error: {str(payload)}",\n            )\n            # \u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u8f6c\u4e3a\u57fa\u7840 Event \u8fdb\u884c\u5904\u7406\n            return type_validate_python(Event, payload)\n\n\n    async def _forward(self, bot: Bot):\n\n        payload: Dict[str, Any]  # \u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u6570\u636e\n        event = self.payload_to_event(payload)\n        # \u8ba9 bot \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        asyncio.create_task(bot.handle_event(event))\n')),(0,r.kt)("h4",{id:"\u8c03\u7528\u5e73\u53f0-api"},"\u8c03\u7528\u5e73\u53f0 API"),(0,r.kt)("p",null,"\u6211\u4eec\u9700\u8981\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Adapter")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"_call_api")," \u65b9\u6cd5\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u8c03\u7528\u5e73\u53f0\u63d0\u4f9b\u7684 API\u3002\u5982\u679c\u901a\u8fc7 WebSocket \u901a\u4fe1\u53ef\u4ee5\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," \u65b9\u6cd5\u6765\u53d1\u9001\u6570\u636e\uff0c\u5982\u679c\u91c7\u7528 HTTP \u8bf7\u6c42\uff0c\u5219\u9700\u8981\u901a\u8fc7 NoneBot \u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," \u5bf9\u8c61\uff0c\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"driver")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"request")," \u65b9\u6cd5\u6765\u53d1\u9001\u8bf7\u6c42\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{11} title=adapter.py","{11}":!0,title:"adapter.py"},'from typing import Any\nfrom typing_extensions import override\n\nfrom nonebot.drivers import Request, WebSocket\n\nfrom .bot import Bot\n\nclass Adapter(BaseAdapter):\n\n    @override\n    async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any:\n        log("DEBUG", f"Calling API <y>{api}</y>")  # \u7ed9\u4e88\u65e5\u5fd7\u63d0\u793a\n        platform_data = your_handle_data_method(data)  # \u81ea\u884c\u5c06\u6570\u636e\u8f6c\u4e3a\u5e73\u53f0\u6240\u9700\u8981\u7684\u683c\u5f0f\n\n        # \u91c7\u7528 HTTP \u8bf7\u6c42\u7684\u65b9\u5f0f\uff0c\u9700\u8981\u6784\u9020\u4e00\u4e2a Request \u5bf9\u8c61\n        request = Request(\n            method="GET",  # \u8bf7\u6c42\u65b9\u6cd5\n            url=api,  # \u63a5\u53e3\u5730\u5740\n            headers=...,  # \u8bf7\u6c42\u5934\uff0c\u901a\u5e38\u9700\u8981\u5305\u542b\u9274\u6743\u4fe1\u606f\n            params=platform_data,  # \u81ea\u884c\u5904\u7406\u6570\u636e\u7684\u4f20\u8f93\u5f62\u5f0f\n            # json=platform_data,\n            # data=platform_data,\n        )\n        # \u53d1\u9001\u8bf7\u6c42\uff0c\u8fd4\u56de\u7ed3\u679c\n        return await self.driver.request(request)\n\n\n        # \u91c7\u7528 WebSocket \u901a\u4fe1\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 send \u65b9\u6cd5\u53d1\u9001\u6570\u636e\n        # \u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u83b7\u53d6\u5230 bot \u5bf9\u5e94\u7684 websocket \u5bf9\u8c61\n        ws: WebSocket = your_get_websocket_method(bot.self_id)\n\n        await ws.send_text(platform_data)  # \u53d1\u9001 str \u7c7b\u578b\u7684\u6570\u636e\n        await ws.send_bytes(platform_data)  # \u53d1\u9001 bytes \u7c7b\u578b\u7684\u6570\u636e\n        await ws.send(platform_data)  # \u662f\u4ee5\u4e0a\u4e24\u79cd\u65b9\u5f0f\u7684\u5408\u4f53\n\n        # \u63a5\u6536\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u540c\u6837\u7684\uff0c\u4e5f\u6709 str \u548c bytes \u7684\u533a\u522b\n        return await ws.receive_text()\n        return await ws.receive_bytes()\n        return await ws.receive()\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\u8c03\u7528\u5e73\u53f0 API")," \u5b9e\u73b0\u65b9\u5f0f\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u9002\u914d\u5668\uff1a"),(0,r.kt)("p",null,"Websocket:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-onebot/blob/master/nonebot/adapters/onebot/v11/adapter.py#L127"},"OneBot V11")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-onebot/blob/master/nonebot/adapters/onebot/v12/adapter.py#L162"},"OneBot V12"))),(0,r.kt)("p",null,"HTTP:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-qqguild/blob/master/nonebot/adapters/qqguild/adapter.py#L354"},"QQ \u9891\u9053")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-telegram/blob/beta/nonebot/adapters/telegram/adapter.py#L145"},"Telegram")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-feishu/blob/master/nonebot/adapters/feishu/adapter.py#L158"},"\u98de\u4e66"))),(0,r.kt)("h3",{id:"bot"},"Bot"),(0,r.kt)("p",null,"Bot \u662f\u673a\u5668\u4eba\u5f00\u53d1\u8005\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5e76\u4f7f\u7528\u7684\u6838\u5fc3\u5bf9\u8c61\uff0c\u8d1f\u8d23\u5b58\u50a8\u5e73\u53f0\u673a\u5668\u4eba\u76f8\u5173\u4fe1\u606f\uff0c\u5e76\u63d0\u4f9b\u56de\u590d\u4e8b\u4ef6\u3001\u8c03\u7528 API \u7684\u4e0a\u5c42\u65b9\u6cd5\u3002\u6211\u4eec\u9700\u8981\u7ee7\u627f\u57fa\u7c7b ",(0,r.kt)("inlineCode",{parentName:"p"},"Bot"),"\uff0c\u5e76\u5b9e\u73b0\u76f8\u5173\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{20,25,34} title=bot.py","{20,25,34}":!0,title:"bot.py"},'from typing import TYPE_CHECKING, Any, Union\nfrom typing_extensions import override\n\nfrom nonebot.message import handle_event\nfrom nonebot.adapters import Bot as BaseBot\n\nfrom .event import Event\nfrom .message import Message, MessageSegment\n\nif TYPE_CHECKING:\n    from .adapter import Adapter\n\n\nclass Bot(BaseBot):\n    """\n    your_adapter_name \u534f\u8bae Bot \u9002\u914d\u3002\n    """\n\n    @override\n    def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any):\n        super().__init__(adapter, self_id)\n        self.adapter: Adapter = adapter\n        # \u4e00\u4e9b\u6709\u5173 Bot \u7684\u4fe1\u606f\u4e5f\u53ef\u4ee5\u5728\u6b64\u5b9a\u4e49\u548c\u5b58\u50a8\n\n    async def handle_event(self, event: Event):\n        # \u6839\u636e\u9700\u8981\uff0c\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u67d0\u4e9b\u9884\u5904\u7406\uff0c\u4f8b\u5982\uff1a\n        # \u68c0\u67e5\u4e8b\u4ef6\u662f\u5426\u548c\u673a\u5668\u4eba\u6709\u5173\u64cd\u4f5c\uff0c\u53bb\u9664\u4e8b\u4ef6\u6d88\u606f\u9996\u5c3e\u7684 @bot\n        # \u68c0\u67e5\u4e8b\u4ef6\u662f\u5426\u6709\u56de\u590d\u6d88\u606f\uff0c\u8c03\u7528\u5e73\u53f0 API \u83b7\u53d6\u539f\u59cb\u6d88\u606f\u7684\u6d88\u606f\u5185\u5bb9\n        ...\n        # \u8c03\u7528 handle_event \u8ba9 NoneBot \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        await handle_event(self, event)\n\n    @override\n    async def send(\n        self,\n        event: Event,\n        message: Union[str, Message, MessageSegment],\n        **kwargs: Any,\n    ) -> Any:\n        # \u6839\u636e\u5e73\u53f0\u5b9e\u73b0 Bot \u56de\u590d\u4e8b\u4ef6\u7684\u65b9\u6cd5\n\n        # \u5c06\u6d88\u606f\u5904\u7406\u4e3a\u5e73\u53f0\u6240\u9700\u7684\u683c\u5f0f\u540e\uff0c\u8c03\u7528\u53d1\u9001\u6d88\u606f\u63a5\u53e3\u8fdb\u884c\u53d1\u9001\uff0c\u4f8b\u5982\uff1a\n        data = message_to_platform_data(message)\n        await self.send_message(\n            data=data,\n            ...\n        )\n')),(0,r.kt)("h3",{id:"event"},"Event"),(0,r.kt)("p",null,"Event \u662f NoneBot \u4e2d\u7684\u4e8b\u4ef6\u4e3b\u4f53\u5bf9\u8c61\uff0c\u6240\u6709\u5e73\u53f0\u6d88\u606f\u5728\u8fdb\u5165\u5904\u7406\u6d41\u7a0b\u524d\u9700\u8981\u8f6c\u6362\u4e3a NoneBot \u4e8b\u4ef6\u3002\u6211\u4eec\u9700\u8981\u7ee7\u627f\u57fa\u7c7b ",(0,r.kt)("inlineCode",{parentName:"p"},"Event"),"\uff0c\u5e76\u5b9e\u73b0\u76f8\u5173\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{5,8,13,18,23,28,33} title=event.py","{5,8,13,18,23,28,33}":!0,title:"event.py"},'from typing_extensions import override\n\nfrom nonebot.compat import model_dump\nfrom nonebot.adapters import Event as BaseEvent\n\nclass Event(BaseEvent):\n\n    @override\n    def get_event_name(self) -> str:\n        # \u8fd4\u56de\u4e8b\u4ef6\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u65e5\u5fd7\u6253\u5370\n        return "event name"\n\n    @override\n    def get_event_description(self) -> str:\n        # \u8fd4\u56de\u4e8b\u4ef6\u7684\u63cf\u8ff0\uff0c\u7528\u4e8e\u65e5\u5fd7\u6253\u5370\uff0c\u8bf7\u6ce8\u610f\u8f6c\u4e49 loguru tag\n        return escape_tag(repr(model_dump(self)))\n\n    @override\n    def get_message(self):\n        # \u83b7\u53d6\u4e8b\u4ef6\u6d88\u606f\u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4e8b\u4ef6\u5177\u4f53\u5b9e\u73b0\uff0c\u5982\u679c\u4e8b\u4ef6\u975e\u6d88\u606f\u7c7b\u578b\u4e8b\u4ef6\uff0c\u5219\u629b\u51fa\u5f02\u5e38\n        raise ValueError("Event has no message!")\n\n    @override\n    def get_user_id(self) -> str:\n        # \u83b7\u53d6\u7528\u6237 ID \u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4e8b\u4ef6\u5177\u4f53\u5b9e\u73b0\uff0c\u5982\u679c\u4e8b\u4ef6\u6ca1\u6709\u7528\u6237 ID\uff0c\u5219\u629b\u51fa\u5f02\u5e38\n        raise ValueError("Event has no context!")\n\n    @override\n    def get_session_id(self) -> str:\n        # \u83b7\u53d6\u4e8b\u4ef6\u4f1a\u8bdd ID \u7684\u65b9\u6cd5\uff0c\u6839\u636e\u4e8b\u4ef6\u5177\u4f53\u5b9e\u73b0\uff0c\u5982\u679c\u4e8b\u4ef6\u6ca1\u6709\u76f8\u5173 ID\uff0c\u5219\u629b\u51fa\u5f02\u5e38\n        raise ValueError("Event has no context!")\n\n    @override\n    def is_tome(self) -> bool:\n        # \u5224\u65ad\u4e8b\u4ef6\u662f\u5426\u548c\u673a\u5668\u4eba\u6709\u5173\n        return False\n')),(0,r.kt)("p",null,"\u7136\u540e\u6839\u636e\u5e73\u53f0\u6d88\u606f\u7684\u7c7b\u578b\uff0c\u7f16\u5199\u5404\u79cd\u4e0d\u540c\u7684\u4e8b\u4ef6\uff0c\u5e76\u4e14\u6ce8\u610f\u8981\u6839\u636e\u4e8b\u4ef6\u7c7b\u578b\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"get_type")," \u65b9\u6cd5\uff0c\u5177\u4f53\u8bf7\u53c2\u8003",(0,r.kt)("a",{parentName:"p",href:"../advanced/adapter#%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B"},"\u4e8b\u4ef6\u7c7b\u578b"),"\u3002\u6d88\u606f\u7c7b\u578b\u4e8b\u4ef6\u8fd8\u5e94\u91cd\u5199 ",(0,r.kt)("inlineCode",{parentName:"p"},"get_message")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"get_user_id")," \u7b49\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{7,16,20,25,34,42} title=event.py","{7,16,20,25,34,42}":!0,title:"event.py"},'from .message import Message\n\nclass HeartbeatEvent(Event):\n    """\u5fc3\u8df3\u65f6\u95f4\uff0c\u901a\u5e38\u4e3a\u5143\u4e8b\u4ef6"""\n\n    @override\n    def get_type(self) -> str:\n        return "meta_event"\n\nclass MessageEvent(Event):\n    """\u6d88\u606f\u4e8b\u4ef6"""\n    message_id: str\n    user_id: str\n\n    @override\n    def get_type(self) -> str:\n        return "message"\n\n    @override\n    def get_message(self) -> Message:\n        # \u8fd4\u56de\u4e8b\u4ef6\u6d88\u606f\u5bf9\u5e94\u7684 NoneBot Message \u5bf9\u8c61\n        return self.message\n\n    @override\n    def get_user_id(self) -> str:\n        return self.user_id\n\nclass JoinRoomEvent(Event):\n    """\u52a0\u5165\u623f\u95f4\u4e8b\u4ef6\uff0c\u901a\u5e38\u4e3a\u901a\u77e5\u4e8b\u4ef6"""\n    user_id: str\n    room_id: str\n\n    @override\n    def get_type(self) -> str:\n        return "notice"\n\nclass ApplyAddFriendEvent(Event):\n    """\u7533\u8bf7\u6dfb\u52a0\u597d\u53cb\u4e8b\u4ef6\uff0c\u901a\u5e38\u4e3a\u8bf7\u6c42\u4e8b\u4ef6"""\n    user_id: str\n\n    @override\n    def get_type(self) -> str:\n        return "request"\n')),(0,r.kt)("h3",{id:"message"},"Message"),(0,r.kt)("p",null,"Message \u8d1f\u8d23\u6b63\u786e\u5e8f\u5217\u5316\u6d88\u606f\uff0c\u4ee5\u4fbf\u673a\u5668\u4eba\u63d2\u4ef6\u5904\u7406\u3002\u6211\u4eec\u9700\u8981\u7ee7\u627f ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageSegment")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"Message")," \u4e24\u4e2a\u7c7b\uff0c\u5e76\u5b9e\u73b0\u76f8\u5173\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"{9,12,17,22,27,30,36} title=message.py","{9,12,17,22,27,30,36}":!0,title:"message.py"},'from typing import Type, Iterable\nfrom typing_extensions import override\n\nfrom nonebot.utils import escape_tag\n\nfrom nonebot.adapters import Message as BaseMessage\nfrom nonebot.adapters import MessageSegment as BaseMessageSegment\n\nclass MessageSegment(BaseMessageSegment["Message"]):\n    @classmethod\n    @override\n    def get_message_class(cls) -> Type["Message"]:\n        # \u8fd4\u56de\u9002\u914d\u5668\u7684 Message \u7c7b\u578b\u672c\u8eab\n        return Message\n\n    @override\n    def __str__(self) -> str:\n        # \u8fd4\u56de\u8be5\u6d88\u606f\u6bb5\u7684\u7eaf\u6587\u672c\u8868\u73b0\u5f62\u5f0f\uff0c\u901a\u5e38\u5728\u65e5\u5fd7\u4e2d\u5c55\u793a\n        return "text of MessageSegment"\n\n    @override\n    def is_text(self) -> bool:\n        # \u5224\u65ad\u8be5\u6d88\u606f\u6bb5\u662f\u5426\u4e3a\u7eaf\u6587\u672c\n        return self.type == "text"\n\n\nclass Message(BaseMessage[MessageSegment]):\n    @classmethod\n    @override\n    def get_segment_class(cls) -> Type[MessageSegment]:\n        # \u8fd4\u56de\u9002\u914d\u5668\u7684 MessageSegment \u7c7b\u578b\u672c\u8eab\n        return MessageSegment\n\n    @staticmethod\n    @override\n    def _construct(msg: str) -> Iterable[MessageSegment]:\n        # \u5b9e\u73b0\u4ece\u5b57\u7b26\u4e32\u4e2d\u6784\u9020\u6d88\u606f\u6570\u7ec4\uff0c\u5982\u65e0\u5b57\u7b26\u4e32\u5d4c\u5165\u683c\u5f0f\u53ef\u76f4\u63a5\u8fd4\u56de\u6587\u672c\u7c7b\u578b MessageSegment\n        ...\n')),(0,r.kt)("p",null,"\u7136\u540e\u6839\u636e\u5e73\u53f0\u5177\u4f53\u7684\u6d88\u606f\u7c7b\u578b\uff0c\u6765\u5b9e\u73b0\u5404\u79cd ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageSegment")," \u6d88\u606f\u6bb5\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u9002\u914d\u5668\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-onebot/blob/master/nonebot/adapters/onebot/v11/message.py#L77-L261"},"OneBot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-qqguild/blob/master/nonebot/adapters/qqguild/message.py#L22-L150"},"QQGuild")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nonebot/adapter-telegram/blob/beta/nonebot/adapters/telegram/message.py#L43-L250"},"Telegram"))),(0,r.kt)("h2",{id:"\u9002\u914d\u5668\u6d4b\u8bd5"},"\u9002\u914d\u5668\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u5173\u4e8e\u9002\u914d\u5668\u6d4b\u8bd5\u76f8\u5173\u5185\u5bb9\u5728\u8fd9\u91cc\u4e0d\u518d\u5c55\u5f00\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u5408\u9002\u7684\u6d4b\u8bd5\u3002\u8fd9\u91cc\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u51e0\u4e2a\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5728\u6d4b\u8bd5\u4e2d\u65e0\u6cd5\u5bfc\u5165 editable \u6a21\u5f0f\u5b89\u88c5\u7684\u9002\u914d\u5668\u4ee3\u7801\u3002\u5728 pytest \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"conftest.py")," \u5185\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=tests/conftest.py",title:"tests/conftest.py"},'from pathlib import Path\nimport nonebot.adapters\nnonebot.adapters.__path__.append(  # type: ignore\n    str((Path(__file__).parent.parent / "nonebot" / "adapters").resolve())\n)\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u9700\u8981\u8ba1\u7b97\u9002\u914d\u5668\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u8bf7\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"pyproject.toml")," \u4e2d\u6dfb\u52a0 pytest \u914d\u7f6e\uff1a"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=pyproject.toml",title:"pyproject.toml"},'[tool.pytest.ini_options]\naddopts = "--cov nonebot/adapters/{adapter-name} --cov-report term-missing"\n')))),(0,r.kt)("h2",{id:"\u540e\u7eed\u5de5\u4f5c"},"\u540e\u7eed\u5de5\u4f5c"),(0,r.kt)("p",null,"\u5728\u5b8c\u6210\u9002\u914d\u5668\u4ee3\u7801\u7684\u7f16\u5199\u540e\uff0c\u5982\u679c\u60f3\u8981\u5c06\u9002\u914d\u5668\u53d1\u5e03\u5230 NoneBot \u5546\u5e97\uff0c\u6211\u4eec\u9700\u8981\u5c06\u9002\u914d\u5668\u53d1\u5e03\u5230 PyPI \u4e2d\uff0c\u7136\u540e\u524d\u5f80",(0,r.kt)("a",{parentName:"p",href:"/store/adapters"},"\u5546\u5e97"),"\u9875\u9762\uff0c\u5207\u6362\u5230\u9002\u914d\u5668\u9875\u7b7e\uff0c\u70b9\u51fb",(0,r.kt)("strong",{parentName:"p"},"\u53d1\u5e03\u9002\u914d\u5668"),"\u6309\u94ae\uff0c\u586b\u5199\u9002\u914d\u5668\u76f8\u5173\u4fe1\u606f\u5e76\u63d0\u4ea4\u3002"),(0,r.kt)("p",null,"\u53e6\u5916\u5efa\u8bae\u7f16\u5199\u9002\u914d\u5668\u6587\u6863\u6216\u8005\u4e00\u4e9b\u63d2\u4ef6\u5f00\u53d1\u793a\u4f8b\uff0c\u4ee5\u4fbf\u5176\u4ed6\u5f00\u53d1\u8005\u4f7f\u7528\u6211\u4eec\u7684\u9002\u914d\u5668\u3002"))}g.isMDXComponent=!0}}]);