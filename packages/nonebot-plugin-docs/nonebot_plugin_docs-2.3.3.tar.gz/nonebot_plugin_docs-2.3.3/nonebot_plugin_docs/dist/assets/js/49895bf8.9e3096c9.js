"use strict";(self.webpackChunknonebot=self.webpackChunknonebot||[]).push([[4922],{35318:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(27378);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=s,g=m["".concat(l,".").concat(u)]||m[u]||c[u]||o;return t?a.createElement(g,r(r({ref:n},d),{},{components:t})):a.createElement(g,r({ref:n},d))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,r=new Array(o);r[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:s,r[1]=i;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},29264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(25773),s=(t(27378),t(35318));const o={sidebar_position:3,description:"\u4f9d\u8d56\u6ce8\u5165"},r="\u4f9d\u8d56\u6ce8\u5165",i={unversionedId:"best-practice/database/developer/dependency",id:"version-2.3.3/best-practice/database/developer/dependency",title:"\u4f9d\u8d56\u6ce8\u5165",description:"\u4f9d\u8d56\u6ce8\u5165",source:"@site/versioned_docs/version-2.3.3/best-practice/database/developer/dependency.md",sourceDirName:"best-practice/database/developer",slug:"/best-practice/database/developer/dependency",permalink:"/website/docs/best-practice/database/developer/dependency",draft:!1,editUrl:"https://github.com/nonebot/nonebot2/edit/master/website/versioned_docs/version-2.3.3/best-practice/database/developer/dependency.md",tags:[],version:"2.3.3",lastUpdatedBy:"noneflow[bot]",lastUpdatedAt:1723953437,formattedLastUpdatedAt:"2024\u5e748\u670818\u65e5",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"\u4f9d\u8d56\u6ce8\u5165"},sidebar:"tutorial",previous:{title:"\u6d4b\u8bd5",permalink:"/website/docs/best-practice/database/developer/test"},next:{title:"\u53d1\u5e03\u63d2\u4ef6",permalink:"/website/docs/developer/plugin-publishing"}},l={},p=[{value:"\u6570\u636e\u5e93\u4f1a\u8bdd",id:"\u6570\u636e\u5e93\u4f1a\u8bdd",level:2},{value:"AsyncSession",id:"asyncsession",level:3},{value:"async_scoped_session",id:"async_scoped_session",level:3},{value:"\u67e5\u8be2\u6570\u636e",id:"\u67e5\u8be2\u6570\u636e",level:2},{value:"Model",id:"model",level:3},{value:"SQLDepends",id:"sqldepends",level:3},{value:"\u7c7b\u578b\u6807\u6ce8",id:"\u7c7b\u578b\u6807\u6ce8",level:3}],d={toc:p},m="wrapper";function c(e){let{components:n,...t}=e;return(0,s.kt)(m,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"\u4f9d\u8d56\u6ce8\u5165"},"\u4f9d\u8d56\u6ce8\u5165"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"nonebot-plugin-orm")," \u63d0\u4f9b\u4e86\u5f3a\u5927\u4e14\u7075\u6d3b\u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5e2e\u52a9\u4f60\u83b7\u53d6\u6570\u636e\u5e93\u4f1a\u8bdd\u548c\u67e5\u8be2\u6570\u636e\u3002"),(0,s.kt)("h2",{id:"\u6570\u636e\u5e93\u4f1a\u8bdd"},"\u6570\u636e\u5e93\u4f1a\u8bdd"),(0,s.kt)("h3",{id:"asyncsession"},"AsyncSession"),(0,s.kt)("p",null,"\u65b0\u6570\u636e\u5e93\u4f1a\u8bdd\uff0c\u5e38\u7528\u4e8e\u6709\u72ec\u7acb\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u903b\u8f91\u7684\u63d2\u4ef6\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"{13,26}","{13,26}":!0},"from nonebot import on_message\nfrom nonebot.params import Depends\nfrom nonebot_plugin_orm import AsyncSession, Model, async_scoped_session\nfrom sqlalchemy.orm import Mapped, mapped_column\n\nmessage = on_message()\n\n\nclass Message(Model):\n    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)\n\n\nasync def get_message(session: AsyncSession) -> Message:\n    # \u7b49\u4ef7\u4e8e session = get_session()\n    async with session:\n        msg = Message()\n\n        session.add(msg)\n        await session.commit()\n        await session.refresh(msg)\n\n        return msg\n\n\n@message.handle()\nasync def _(session: async_scoped_session, msg: Message = Depends(get_message)):\n    await session.rollback()  # \u65e0\u6cd5\u56de\u9000 get_message() \u4e2d\u7684\u66f4\u6539\n    await message.send(str(msg.id))  # msg \u88ab\u5b58\u50a8\uff0cmsg.id \u9012\u589e\n")),(0,s.kt)("h3",{id:"async_scoped_session"},"async_scoped_session"),(0,s.kt)("p",null,"\u6570\u636e\u5e93\u4f5c\u7528\u57df\u4f1a\u8bdd\uff0c\u5e38\u7528\u4e8e\u4e8b\u4ef6\u54cd\u5e94\u5668\u548c\u6709\u4e0e\u54cd\u5e94\u903b\u8f91\u76f8\u5173\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u903b\u8f91\u7684\u63d2\u4ef6\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"{13\uff0c26}","{13\uff0c26}":!0},"from nonebot import on_message\nfrom nonebot.params import Depends\nfrom nonebot_plugin_orm import Model, async_scoped_session\nfrom sqlalchemy.orm import Mapped, mapped_column\n\nmessage = on_message()\n\n\nclass Message(Model):\n    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)\n\n\nasync def get_message(session: async_scoped_session) -> Message:\n    # \u7b49\u4ef7\u4e8e session = get_scoped_session()\n    msg = Message()\n\n    session.add(msg)\n    await session.flush()\n    await session.refresh(msg)\n\n    return msg\n\n\n@message.handle()\nasync def _(session: async_scoped_session, msg: Message = Depends(get_message)):\n    await session.rollback()  # \u53ef\u4ee5\u56de\u9000 get_message() \u4e2d\u7684\u66f4\u6539\n    await message.send(str(msg.id))  # msg \u6ca1\u6709\u88ab\u5b58\u50a8\uff0cmsg.id \u4e0d\u53d8\n")),(0,s.kt)("h2",{id:"\u67e5\u8be2\u6570\u636e"},"\u67e5\u8be2\u6570\u636e"),(0,s.kt)("h3",{id:"model"},"Model"),(0,s.kt)("p",null,"\u652f\u6301\u7c7b\u4f5c\u4e3a\u4f9d\u8d56\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"from typing import Annotated\n\nfrom nonebot.params import Depends\nfrom nonebot_plugin_orm import Model\nfrom sqlalchemy.orm import Mapped, mapped_column\n\n\ndef get_id() -> int: ...\n\n\nclass Message(Model):\n    id: Annotated[Mapped[int], Depends(get_id)] = mapped_column(\n        primary_key=True, autoincrement=True\n    )\n\n\nasync def _(msg: Message):\n    # \u7b49\u4ef7\u4e8e msg = (\n    #     await (await session.stream(select(Message).where(Message.id == get_id())))\n    #     .scalars()\n    #     .one_or_none()\n    # )\n    ...\n")),(0,s.kt)("h3",{id:"sqldepends"},"SQLDepends"),(0,s.kt)("p",null,"\u53c2\u6570\u4e3a\u4e00\u4e2a SQL \u8bed\u53e5\uff0c\u51b3\u5b9a\u4f9d\u8d56\u6ce8\u5165\u7684\u5185\u5bb9\uff0cSQL \u8bed\u53e5\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b50\u4f9d\u8d56\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"{11-13}","{11-13}":!0},"from nonebot.params import Depends\nfrom nonebot_plugin_orm import Model, SQLDepends\nfrom sqlalchemy import select\n\n\ndef get_id() -> int: ...\n\n\nasync def _(\n    model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))),\n): ...\n")),(0,s.kt)("p",null,"\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f SQL \u8bed\u53e5\uff0c\u4f46\u4e0d\u5efa\u8bae\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"select")," \u4ee5\u5916\u7684\u8bed\u53e5\uff0c\u56e0\u4e3a\u8bed\u53e5\u53ef\u80fd\u6ca1\u6709\u8fd4\u56de\u503c\uff08",(0,s.kt)("inlineCode",{parentName:"p"},"returning")," \u9664\u5916\uff09\uff0c\u800c\u4e14\u4ee3\u7801\u4e0d\u6e05\u6670\u3002"),(0,s.kt)("h3",{id:"\u7c7b\u578b\u6807\u6ce8"},"\u7c7b\u578b\u6807\u6ce8"),(0,s.kt)("p",null,"\u7c7b\u578b\u6807\u6ce8\u51b3\u5b9a\u4f9d\u8d56\u6ce8\u5165\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u5f71\u54cd\u4ee5\u4e0b\u51e0\u4e2a\u5c42\u9762\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u8fed\u4ee3\u5668\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute()"),"\uff09\u6216\u5f02\u6b65\u8fed\u4ee3\u5668\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.stream()"),"\uff09"),(0,s.kt)("li",{parentName:"ul"},"\u6807\u91cf\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute().scalars()"),"\uff09\u6216\u5143\u7ec4\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute()"),"\uff09"),(0,s.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute().one_or_none()"),"\uff0c\u6ce8\u610f ",(0,s.kt)("inlineCode",{parentName:"li"},"None")," \u65f6\u53ef\u80fd\u89e6\u53d1 ",(0,s.kt)("a",{parentName:"li",href:"../../../appendices/overload#%E9%87%8D%E8%BD%BD"},"\u91cd\u8f7d"),"\uff09\u6216\u5168\u90e8\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute()")," / ",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute().all()"),"\uff09"),(0,s.kt)("li",{parentName:"ul"},"\u8fde\u7eed\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session().execute()"),"\uff09\u6216\u5206\u5757\uff08",(0,s.kt)("inlineCode",{parentName:"li"},"session.execute().partitions()"),"\uff09")),(0,s.kt)("p",null,"\u5177\u4f53\u5982\u4e0b\uff08\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u578b\u4f5c\u4e3a\u7c7b\u578b\u6807\u6ce8\uff09\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]):\n    # \u7b49\u4ef7\u4e8e rows_partitions = await (await session.stream(sql).partitions())\n\n    async for partition in rows_partitions:\n        for row in partition:\n            print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(model_partitions: AsyncIterator[Sequence[Model]]):\n    # \u7b49\u4ef7\u4e8e model_partitions = await (await session.stream(sql).scalars().partitions())\n\n    async for partition in model_partitions:\n        for model in partition:\n            print(model)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]):\n    # \u7b49\u4ef7\u4e8e row_partitions = await session.execute(sql).partitions()\n\n    for partition in rows_partitions:\n        for row in partition:\n            print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(model_partitions: Iterator[Sequence[Model]]):\n    # \u7b49\u4ef7\u4e8e model_partitions = await (await session.execute(sql).scalars().partitions())\n\n    for partition in model_partitions:\n        for model in partition:\n            print(model)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]):\n    # \u7b49\u4ef7\u4e8e rows = await session.stream(sql)\n\n    async for row in rows:\n        print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(models: sa_async.AsyncScalarResult[Model]):\n    # \u7b49\u4ef7\u4e8e models = await session.stream(sql).scalars()\n\n    async for model in models:\n        print(model)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(rows: sa.Result[Tuple[Model, ...]]):\n    # \u7b49\u4ef7\u4e8e rows = await session.execute(sql)\n\n    for row in rows:\n        print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(models: sa.ScalarResult[Model]):\n    # \u7b49\u4ef7\u4e8e models = await session.execute(sql).scalars()\n\n    for model in models:\n        print(model)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(rows: Sequence[Tuple[Model, ...]]):\n    # \u7b49\u4ef7\u4e8e rows = await (await session.stream(sql).all())\n\n    for row in rows:\n          print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(models: Sequence[Model]):\n    # \u7b49\u4ef7\u4e8e models = await (await session.stream(sql).scalars().all())\n\n    for model in models:\n        print(model)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(row: Tuple[Model, ...]):\n    # \u7b49\u4ef7\u4e8e row = await (await session.stream(sql).one_or_none())\n\n    print(row[0], row[1], ...)\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-python"},"async def _(model: Model):\n    # \u7b49\u4ef7\u4e8e model = await (await session.stream(sql).scalars().one_or_none())\n\n    print(model)\n")))))}c.isMDXComponent=!0}}]);