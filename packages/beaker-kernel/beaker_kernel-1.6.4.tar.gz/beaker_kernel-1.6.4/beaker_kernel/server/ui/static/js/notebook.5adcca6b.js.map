{"version":3,"file":"static/js/notebook.5adcca6b.js","mappings":"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","sources":["webpack://beaker_vue/./src/pages/NotebookInterface.vue","webpack://beaker_vue/./src/pages/NotebookInterface.vue?f2f3","webpack://beaker_vue/./src/pages/notebook.ts","webpack://beaker_vue/../beaker-ts/dist/history.js","webpack://beaker_vue/../beaker-ts/dist/session.js","webpack://beaker_vue/../beaker-ts/dist/index.js","webpack://beaker_vue/../beaker-ts/dist/render.js","webpack://beaker_vue/../beaker-ts/dist/util.js","webpack://beaker_vue/webpack/bootstrap","webpack://beaker_vue/webpack/runtime/chunk loaded","webpack://beaker_vue/webpack/runtime/compat get default export","webpack://beaker_vue/webpack/runtime/define property getters","webpack://beaker_vue/webpack/runtime/global","webpack://beaker_vue/webpack/runtime/hasOwnProperty shorthand","webpack://beaker_vue/webpack/runtime/make namespace object","webpack://beaker_vue/webpack/runtime/runtimeId","webpack://beaker_vue/webpack/runtime/publicPath","webpack://beaker_vue/webpack/runtime/jsonp chunk loading","webpack://beaker_vue/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue';\nimport { createVNode as _createVNode, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, withCtx as _withCtx, createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { id: \"app\" };\nconst _hoisted_2 = { id: \"notebook-container\" };\nimport { ref, onBeforeMount, provide } from 'vue';\nimport BeakerNotebook from '../components/notebook/BeakerNotebook.vue';\nimport BeakerSession from '../components/session/BeakerSession.vue';\nimport BeakerHeader from '../components/dev-interface/BeakerHeader.vue';\nimport Toast from 'primevue/toast';\nimport { useToast } from 'primevue/usetoast';\nexport default /*#__PURE__*/ _defineComponent({\n    __name: 'NotebookInterface',\n    props: [\n        \"connectionSettings\",\n        \"sessionName\",\n        \"sessionId\",\n        \"defaultKernel\",\n        \"renderers\",\n    ],\n    setup(__props) {\n        const toast = useToast();\n        // Let's only use severity=success|warning|danger(=error) for now\n        const showToast = ({ title, detail, life = 3000, severity = 'success', position = 'bottom-right' }) => {\n            toast.add({\n                summary: title,\n                detail,\n                life,\n                // for options, seee https://primevue.org/toast/\n                severity,\n                // position\n            });\n        };\n        const props = __props;\n        // const renderers: IMimeRenderer<BeakerRenderOutput>[] = [\n        //     ...standardRendererFactories.map((factory: any) => new JupyterMimeRenderer(factory)).map(wrapJupyterRenderer),\n        //     JSONRenderer,\n        //     LatexRenderer,\n        //     DecapodeRenderer,\n        // ];\n        const connectionStatus = ref('connecting');\n        // rawSession.sessionReady.then(() => {\n        //     rawSession.session.iopubMessage.connect((session, msg) => {\n        //         if (msg.header.msg_type === 'status') {\n        //           setTimeout(() => {\n        //             const newStatus = msg?.content?.execution_state || 'connecting';\n        //             connectionStatus.value = newStatus == 'idle' ? 'connected' : newStatus;\n        //           }, 1000);\n        //         } else if (msg.header.msg_type === \"preview\") {\n        //           previewData.value = msg.content;\n        //         } else if (msg.header.msg_type === \"debug_event\") {\n        //             debugLogs.value.push({\n        //               type: msg.content.event,\n        //               body: msg.content.body,\n        //               timestamp: msg.header.date,\n        //             });\n        //         }\n        //     });\n        //     rawSession.session.session.anyMessage.connect((_: unknown, {msg, direction}) => {\n        //       rawMessages.value.push({\n        //         type: direction,\n        //         body: msg,\n        //         timestamp: msg.header.date,\n        //       });\n        //     });\n        // });\n        onBeforeMount(() => {\n            document.title = \"Beaker Development Interface\";\n        });\n        // const beakerSession = reactive(rawSession);\n        // provide('session', beakerSession);\n        provide('show_toast', showToast);\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n                _createElementVNode(\"div\", _hoisted_2, [\n                    _createVNode(BeakerSession, _normalizeProps(_guardReactiveProps(props)), {\n                        default: _withCtx(() => [\n                            _createVNode(BeakerHeader, { connectionStatus: connectionStatus.value }, null, 8, [\"connectionStatus\"]),\n                            _createVNode(BeakerNotebook, {\n                                class: \"notebook\",\n                                connectionStatus: connectionStatus.value\n                            }, null, 8, [\"connectionStatus\"])\n                        ]),\n                        _: 1\n                    }, 16)\n                ]),\n                _createVNode(_unref(Toast), { position: \"bottom-right\" })\n            ]));\n        };\n    }\n});\n","import script from \"./NotebookInterface.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NotebookInterface.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./NotebookInterface.vue?vue&type=style&index=0&id=be1433e4&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\nimport PrimeVue from 'primevue/config';\nimport NotebookInterface from './NotebookInterface.vue';\nimport Tooltip from 'primevue/tooltip';\nimport ToastService from 'primevue/toastservice';\nimport FocusTrap from 'primevue/focustrap';\nimport 'primeicons/primeicons.css';\nimport '../index.scss';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nconst baseUrl = PageConfig.getBaseUrl();\n(async () => {\n    let config;\n    if (process.env.NODE_ENV === \"development\") {\n        config = {\n            baseUrl: baseUrl,\n            appUrl: baseUrl,\n            wsUrl: baseUrl.replace(\"http\", \"ws\"),\n            token: \"89f73481102c46c0bc13b2998f9a4fce\",\n        };\n    }\n    else {\n        const confUrl = URLExt.join(baseUrl, '/config');\n        const configResponse = await fetch(confUrl);\n        config = await configResponse.json();\n    }\n    const app = createApp(NotebookInterface, {\n        connectionSettings: config,\n        sessionName: \"BasicNotebook\",\n        sessionId: \"basicnotebook\",\n        defaultKernel: \"beaker_kernel\",\n    });\n    app.use(PrimeVue);\n    app.use(ToastService);\n    app.directive('tooltip', Tooltip);\n    app.directive('focustrap', FocusTrap);\n    app.mount('#app');\n})();\n","export class BeakerHistory {\n    constructor(sessionId) {\n        this.sessionId = sessionId;\n        this.events = [];\n    }\n    addEvent(event) {\n        this.events.push(event);\n    }\n    ;\n    clear() {\n        // Clear with a splice to ensure reactivity\n        this.events.splice(0, this.events.splice.length);\n    }\n}\n","import { SessionContext } from '@jupyterlab/apputils';\nimport { ServerConnection } from '@jupyterlab/services/lib/serverconnection';\nimport { ServiceManager } from '@jupyterlab/services';\nimport * as messages from '@jupyterlab/services/lib/kernel/messages';\nimport { v4 as uuidv4 } from 'uuid';\nimport fetch from 'node-fetch';\nimport { createMessageId } from './util';\nimport { BeakerNotebook, BeakerRawCell, BeakerCodeCell, BeakerMarkdownCell, BeakerQueryCell } from './notebook';\nimport { BeakerHistory } from './history';\nimport { BeakerRenderer } from './render';\n;\n/**\n * Main class for connecting to and working with a Beaker kernel.\n */\nexport class BeakerSession {\n    constructor(options) {\n        this._sessionId = uuidv4();\n        this._sessionOptions = options;\n        this._serverSettings = ServerConnection.makeSettings(options.settings);\n        this._services = new ServiceManager({\n            serverSettings: this._serverSettings,\n        });\n        this._renderer = new BeakerRenderer(options.rendererOptions);\n        this._history = new BeakerHistory(this._sessionId);\n        this.notebook = new BeakerNotebook();\n        this._services.ready.then(() => {\n            this.initialize(options);\n        });\n    }\n    /**\n     * Internal initialization logic once all the services are up and ready.\n     */\n    async initialize(options) {\n        // Create (or reuse existing) a session Context\n        this._sessionContext = new SessionContext({\n            sessionManager: this._services.sessions,\n            specsManager: this._services.kernelspecs,\n            name: options.name,\n            path: options.sessionId,\n            kernelPreference: {\n                name: options.kernelName\n            }\n        });\n        // Initialize the session\n        this._sessionContext.initialize().then(() => {\n            this._sessionContext.ready.then(() => {\n                if (options.messageHandler) {\n                    this._messageHandler = options.messageHandler;\n                    this._sessionContext.iopubMessage.connect(this._messageHandler);\n                }\n                else {\n                    this._messageHandler = undefined;\n                }\n                this._sessionContext.iopubMessage.connect(this._sessionMessageHandler, this);\n            });\n        });\n    }\n    /**\n     * Low-level method for sending a message to the Beaker kernel over the \"shell\" channel.\n     *\n     * @param messageType - The message type, as passed in `msg.header.msg_type`\n     * @param content - Any JSON-encodable payload to be included with the message\n     * @param messageId - (Optional) Pre-defined id for the message. One will be generated if not provided.\n     */\n    sendBeakerMessage(messageType, content, messageId = null) {\n        if (messageId === null) {\n            messageId = createMessageId(messageType);\n        }\n        const msg = messages.createMessage({\n            session: this.session.session.id,\n            channel: \"shell\",\n            msgType: messageType,\n            content: content,\n            msgId: messageId\n        });\n        const future = this.kernel.sendShellMessage(msg, true, true);\n        future.msgId = messageId;\n        return future;\n    }\n    /**\n     * Handler for session-specific messages from the Beaker kernel.\n     * This handler will be evoked for all IOPub messages, but should ignore all messages that are not session-specific.\n     *\n     * @param _sessionContext - The session Context related to the incoming message\n     * @param msg - The incoming IOPub message\n     */\n    _sessionMessageHandler(_sessionContext, msg) {\n        if (msg.header.msg_type === \"context_setup_response\" || msg.header.msg_type === \"context_info_response\") {\n            if (msg.header.msg_type === \"context_setup_response\") {\n                this._sessionInfo = msg.content;\n            }\n            else if (msg.header.msg_type === \"context_info_response\") {\n                this._sessionInfo = msg.content.info;\n            }\n            this.notebook.setSubkernelInfo(this._sessionInfo);\n        }\n    }\n    /**\n     * Returns a promise, that once resolved provides all Beaker contexts available in the session.\n     */\n    async availableContexts() {\n        return new Promise(async (resolve) => {\n            const url = `${this._serverSettings.baseUrl}contexts`;\n            const response = await fetch(`${this._serverSettings.baseUrl}contexts`);\n            const data = await response.json();\n            resolve(data);\n        });\n    }\n    /**\n     * Returns a promise that once resolved provides detailed information about the active context.\n     */\n    async activeContext() {\n        return new Promise(async (resolve, reject) => {\n            await this.sessionReady;\n            const future = this.sendBeakerMessage(\"context_info_request\", {});\n            future.onIOPub = (msg) => {\n                if (msg.header.msg_type === \"context_info_response\") {\n                    resolve(msg.content);\n                }\n            };\n            await future.done;\n            reject({});\n        });\n    }\n    /**\n     * Executes a Beaker Action, handling all of the message\n     *\n     * The usual IBeakerFuture response handlers can be applied to the returned future to do act upon the responses.\n     *\n     * @param actionName - Name of the action to execute\n     * @param payload - Payload to pass along with the action\n     * @param messageId - (Optional) Id for request message. If not provided, will be generated automatically.\n     * @returns - A future\n     */\n    executeAction(actionName, payload, messageId = null) {\n        const requestType = `${actionName}_request`;\n        const responseType = `${actionName}_response`;\n        const messageFuture = this.sendBeakerMessage(requestType, payload, messageId);\n        const responseHandler = async (msg) => {\n            if (msg.header.msg_type === responseType && messageFuture.onResponse) {\n                await messageFuture.onResponse(msg);\n            }\n            else if (msg.header.msg_type === \"code_cell\") {\n                const nb = this.notebook;\n                const codeCell = new BeakerCodeCell({\n                    cell_type: \"code\",\n                    source: msg.content.code,\n                    metadata: {},\n                    outputs: [],\n                });\n                nb.addCell(codeCell);\n            }\n            return true;\n        };\n        messageFuture.registerMessageHook(responseHandler);\n        return messageFuture;\n    }\n    /**\n     *\n     * @param source - The `code` contents of the cell.\n     * @param metadata - (Optional) Any metadata to be associated with the cell.\n     * @param outputs - (Optional) Any outputs that should be included/displayed.\n     * @returns - A reference to the generated cell\n     */\n    addCodeCell(source, metadata = {}, outputs = []) {\n        const cell = new BeakerCodeCell({\n            cell_type: \"code\",\n            source,\n            metadata,\n            outputs,\n        });\n        this.notebook.addCell(cell);\n        return cell;\n    }\n    /**\n     * Convenience method for adding a MarkdownCell to the notebook\n     *\n     * @param source - The raw markdown encoded text that should be rendered upon execute\n     * @param metadata - (Optional) Any metadata to be associated with the cell.\n     * @returns - A reference to the generated cell\n     */\n    addMarkdownCell(source, metadata = {}) {\n        const cell = new BeakerMarkdownCell({\n            cell_type: \"markdown\",\n            source,\n            metadata,\n        });\n        this.notebook.addCell(cell);\n        return cell;\n    }\n    /**\n     * Convenience method for adding a RawCell to the notebook\n     *\n     * @param source - The raw contents to be included in the raw cell.\n     * @param metadata - (Optional) Any metadata to be associated with the cell.\n     * @returns - A reference to the generated cell\n     */\n    addRawCell(source, metadata = {}) {\n        const cell = new BeakerRawCell({\n            cell_type: \"raw\",\n            source,\n            metadata,\n        });\n        this.notebook.addCell(cell);\n        return cell;\n    }\n    /**\n     * Convenience method for adding a QueryCell to the notebook\n     *\n     * @param source - The contents of the query for the LLM as a plain string\n     * @param metadata - (Optional) Any metadata to be associated with the cell.\n     * @returns - A reference to the generated cell\n     */\n    addQueryCell(source, metadata = {}) {\n        const cell = new BeakerQueryCell({\n            cell_type: \"query\",\n            source,\n            metadata,\n        });\n        this.notebook.addCell(cell);\n        return cell;\n    }\n    ;\n    // public toJSON(): string {\n    //     return JSON.stringify({\n    //         notebook: this.notebook?.toJSON()\n    //     });\n    // }\n    // public fromJSON(): BeakerSession {\n    //     // TODO\n    //     return new BeakerSession();\n    // }\n    /**\n     * Populates the sessions notebook with the provided notebook json\n     *\n     * @param notebookJSONObject - The json representation of a notebook, as found inside an .ipynb file\n     */\n    loadNotebook(notebookJSONObject) {\n        this.notebook.loadFromIPynb(notebookJSONObject);\n    }\n    /**\n     * Completely resets the session, clearing the notebook and history, and restarting the fresh kernel so it is in a fresh state.\n     */\n    reset() {\n        // Remove cells via splice to ensure reactivity\n        this.notebook.cells.splice(0, this.notebook.cells.length);\n        this._history.clear();\n        this._sessionContext.restartKernel();\n    }\n    /**\n     * A promise that resolves once everything the session requires are also ready.\n     */\n    get sessionReady() {\n        return new Promise(async (resolve) => {\n            await this._services.ready;\n            await this._sessionContext.ready;\n            resolve();\n        });\n    }\n    /**\n     * A reference to the underlying Jupyter SessionContext for this Beaker Session.\n     */\n    get session() {\n        return this._sessionContext;\n    }\n    /**\n     * A reference to the Jupyter KernelConnection object for this session.\n     */\n    get kernel() {\n        return this._sessionContext?.session?.kernel;\n    }\n    /**\n     * A reference to the Jupyter ServiceManager which contains all of the services for this session.\n     */\n    get services() {\n        return this._services;\n    }\n    get renderer() {\n        return this._renderer;\n    }\n}\n","// @ts-ignore: Include extension code to extend typing from Jupyterlabs\nimport extension from './extension';\nif (extension === undefined) {\n    throw new Error(\"Unable to extend Jupyterlab types\");\n}\nexport { BeakerSession, } from './session';\nexport { BeakerBaseCell, BeakerRawCell, BeakerCodeCell, BeakerMarkdownCell, BeakerQueryCell, BeakerNotebook, BeakerNotebookContent, } from './notebook';\nexport { BeakerRenderer, MimeRenderer, JupyterMimeRenderer, } from './render';\n","import { MimeModel } from '@jupyterlab/rendermime';\nimport { Sanitizer } from '@jupyterlab/apputils';\nimport { standardRendererFactories } from '@jupyterlab/rendermime';\nexport class MimeRenderer {\n    render(mimeType, data, metadata) {\n        return new HTMLElement();\n    }\n    ;\n}\nexport class JupyterMimeRenderer extends MimeRenderer {\n    constructor(factory) {\n        super();\n        this._factory = factory;\n        this.rank = factory.defaultRank;\n        this.mimetypes = [...factory.mimeTypes];\n    }\n    render(mimeType, data, metadata) {\n        const renderer = this._factory.createRenderer({\n            mimeType,\n            resolver: null,\n            sanitizer: new Sanitizer(),\n            linkHandler: null,\n            latexTypesetter: null,\n            markdownParser: null,\n            translator: null,\n        });\n        const model = new MimeModel({\n            trusted: true,\n            data: { [mimeType]: data },\n            metadata: metadata,\n        });\n        renderer.renderModel(model);\n        return renderer.node;\n    }\n}\nexport class BeakerRenderer {\n    constructor(options) {\n        this._renderers = {};\n        for (const factory of standardRendererFactories) {\n            const renderer = new JupyterMimeRenderer(factory);\n            this.addRenderer(renderer);\n        }\n        for (const renderer of options?.renderers) {\n            this.addRenderer(renderer);\n        }\n    }\n    addRenderer(renderer) {\n        for (const mimetype of renderer.mimetypes) {\n            if (!Object.keys(this._renderers).includes(mimetype)) {\n                this._renderers[mimetype] = renderer;\n            }\n            else {\n                const prev_renderer = this._renderers[mimetype];\n                if (renderer.rank <= prev_renderer.rank) {\n                    this._renderers[mimetype] = renderer;\n                }\n            }\n        }\n    }\n    get rankedMimetypes() {\n        const mimetypes = Object.keys(this._renderers);\n        mimetypes.sort((a, b) => this._renderers[a].rank - this._renderers[b].rank);\n        return mimetypes;\n    }\n    render(mimeType, data, metadata) {\n        const renderer = this._renderers[mimeType];\n        if (renderer) {\n            return renderer.render(mimeType, data, metadata);\n        }\n    }\n    renderMimeBundle(bundle, metadata) {\n        const result = {};\n        for (const mimeType in bundle) {\n            result[mimeType] = this.render(mimeType, bundle[mimeType], metadata);\n        }\n        return result;\n    }\n    rankedMimetypesInBundle(bundle) {\n        const result = this.rankedMimetypes.filter((mime) => bundle && Object.keys(bundle).includes(mime));\n        return result;\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { KernelFutureHandler } from '@jupyterlab/services/lib/kernel/future';\n// Lower case states to match the naming in the messages.\nexport var KernelState;\n(function (KernelState) {\n    KernelState[\"unknown\"] = \"unknown\";\n    KernelState[\"starting\"] = \"starting\";\n    KernelState[\"idle\"] = \"idle\";\n    KernelState[\"busy\"] = \"busy\";\n    KernelState[\"terminating\"] = \"terminating\";\n    KernelState[\"restarting\"] = \"restarting\";\n    KernelState[\"autorestarting\"] = \"autorestarting\";\n    KernelState[\"dead\"] = \"dead\";\n})(KernelState || (KernelState = {}));\nexport const createMessageId = (msgType) => {\n    const uuid = uuidv4().replaceAll('-', '').slice(0, 16);\n    return `beaker-${uuid}-${msgType}`;\n};\nexport class BeakerCellFuture extends KernelFutureHandler {\n    /**\n     * Construct a new KernelFutureHandler.\n     */\n    constructor(msg, expectReply, disposeOnDone, kernel, cell) {\n        const msgId = msg.header.msg_id;\n        // Ensure channel is set if created via alternate means\n        if (msg.channel === undefined) {\n            msg.channel = \"shell\";\n        }\n        // Clean up from kernel future list when complete.\n        const disposalCallback = () => {\n            // @ts-ignore -- Deregister future via private member for cleanup\n            kernel._futures.delete(msgId);\n        };\n        super(disposalCallback, msg, expectReply, disposeOnDone, kernel);\n        // @ts-ignore -- Register future via private member\n        kernel._futures?.set(msgId, this);\n        this.cell = cell;\n        this.onIOPub = (msg) => BeakerCellFutures.handleIOPub(msg, this.cell);\n        this.onReply = (msg) => BeakerCellFutures.handleReply(msg, this.cell);\n    }\n}\nexport var BeakerCellFutures;\n(function (BeakerCellFutures) {\n    BeakerCellFutures.handleIOPub = (msg, cell) => {\n        const msg_type = msg.header.msg_type;\n        const content = msg.content;\n        if (msg_type === \"status\") {\n            cell.status = content.execution_state;\n        }\n        else if (msg_type === \"execute_result\") {\n            cell.busy = false;\n            if (content.execution_count) {\n                cell.execution_count = content.execution_count;\n            }\n            cell.outputs.push({\n                output_type: \"execute_result\",\n                ...content\n            });\n        }\n        else if (msg_type === \"stream\") {\n            cell.outputs.push({\n                output_type: \"stream\",\n                ...content\n            });\n        }\n        else if (msg_type === \"display_data\") {\n            cell.outputs.push({\n                output_type: \"display_data\",\n                ...content\n            });\n        }\n    };\n    BeakerCellFutures.handleReply = (msg, cell) => {\n        cell.busy = false;\n        if (msg.content.status === \"ok\") {\n            cell.last_execution = { ...cell.last_execution, status: \"ok\" };\n            cell.execution_count = Number(msg.content.execution_count);\n        }\n        else if (msg.content.status === \"error\") {\n            cell.execution_count = Number(msg.content.execution_count);\n            const error_details = {\n                ename: msg.content.ename,\n                evalue: msg.content.evalue,\n                traceback: msg.content.traceback,\n            };\n            cell.last_execution = {\n                status: \"error\",\n                ...error_details\n            };\n            cell.outputs.push({\n                output_type: \"error\",\n                ...error_details\n            });\n        }\n        else if (msg.content.status === \"abort\") {\n            cell.execution_count = msg.content.execution_count;\n            const error_details = {\n                ename: \"Execution aborted\",\n                evalue: \"Execution aborted\",\n                traceback: [],\n            };\n            cell.last_execution = {\n                status: \"error\",\n                ...error_details,\n            };\n            cell.outputs.push({\n                output_type: \"error\",\n                content: error_details,\n            });\n        }\n    };\n})(BeakerCellFutures || (BeakerCellFutures = {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 412;","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t412: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbeaker_vue\"] = self[\"webpackChunkbeaker_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998,64], function() { return __webpack_require__(31326); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","_hoisted_2","_defineComponent","__name","props","setup","__props","toast","useToast","showToast","title","detail","life","severity","position","add","summary","connectionStatus","ref","onBeforeMount","document","provide","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_createVNode","BeakerSession","_normalizeProps","_guardReactiveProps","default","_withCtx","BeakerHeader","value","BeakerNotebook","class","_","_unref","Toast","__exports__","baseUrl","PageConfig","getBaseUrl","config","confUrl","URLExt","join","configResponse","fetch","json","app","createApp","NotebookInterface","connectionSettings","sessionName","sessionId","defaultKernel","use","PrimeVue","ToastService","directive","Tooltip","FocusTrap","mount","BeakerHistory","constructor","this","events","addEvent","event","push","clear","splice","length","options","_sessionId","uuidv4","_sessionOptions","_serverSettings","ServerConnection","makeSettings","settings","_services","ServiceManager","serverSettings","_renderer","BeakerRenderer","rendererOptions","_history","notebook","ready","then","initialize","_sessionContext","SessionContext","sessionManager","sessions","specsManager","kernelspecs","name","path","kernelPreference","kernelName","messageHandler","_messageHandler","iopubMessage","connect","undefined","_sessionMessageHandler","sendBeakerMessage","messageType","content","messageId","createMessageId","msg","messages","createMessage","session","channel","msgType","msgId","future","kernel","sendShellMessage","header","msg_type","_sessionInfo","info","setSubkernelInfo","availableContexts","Promise","async","response","data","resolve","activeContext","reject","sessionReady","onIOPub","done","executeAction","actionName","payload","requestType","responseType","messageFuture","responseHandler","onResponse","nb","codeCell","BeakerCodeCell","cell_type","source","code","metadata","outputs","addCell","registerMessageHook","addCodeCell","cell","addMarkdownCell","BeakerMarkdownCell","addRawCell","BeakerRawCell","addQueryCell","BeakerQueryCell","loadNotebook","notebookJSONObject","loadFromIPynb","reset","cells","restartKernel","services","renderer","extension","Error","MimeRenderer","render","mimeType","HTMLElement","JupyterMimeRenderer","factory","super","_factory","rank","defaultRank","mimetypes","mimeTypes","createRenderer","resolver","sanitizer","Sanitizer","linkHandler","latexTypesetter","markdownParser","translator","model","MimeModel","trusted","renderModel","node","_renderers","standardRendererFactories","addRenderer","renderers","mimetype","Object","keys","includes","prev_renderer","rankedMimetypes","sort","a","b","renderMimeBundle","bundle","result","rankedMimetypesInBundle","filter","mime","KernelState","uuid","replaceAll","slice","BeakerCellFuture","KernelFutureHandler","expectReply","disposeOnDone","msg_id","disposalCallback","_futures","delete","set","BeakerCellFutures","handleIOPub","onReply","handleReply","status","execution_state","busy","execution_count","output_type","last_execution","Number","error_details","ename","evalue","traceback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}