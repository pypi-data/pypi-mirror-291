[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "lightly_train"
description = "Train models with self-supervised learning in a single command"
authors = [
    { name = "Lightly Team" },
]
readme = "README.md"
license = { "text" = "AGPL-3.0" }
keywords = [
    "machine-learning",
    "computer-vision",
    "deep-learning",
    "self-supervised-learning",
    "contrastive-learning",
    "pytorch",
    "python",
    "pretrained-models",
    "embeddings",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "lightly>=1.5.11",
    "omegaconf>=2.3",
    "psutil>=5.0",
    "pytorch_lightning>=2.1",
    "torch>=2.0.0",
    "torchvision>=0.15.1",      # torchvision 0.15.0 was yanked
    "tqdm>=4.0.0",
]


[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.4.0",
    "mypy>=1.10.0",
    "types-tqdm>=4.0.0",
]
super-gradients = [
    "super-gradients>=3.7",
]
tensorboard = [
    "tensorboard>=2.10.0",
]
timm = [
    "timm>=1.0.3",
]

[project.scripts]
lightly-train = "lightly_train._cli:_cli_entrypoint"

[tool.setuptools]
package-dir = {""= "src"}

[tool.setuptools.dynamic]
version = {attr = "lightly_train.__version__"}

[tool.mypy]
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "lightly.*",
    "lightning_fabric.loggers.logger",
    "lightning_fabric.utilities.rank_zero",
    "super_gradients.*",
    "tensorboard.*",
    "timm.*",
    "torchvision.*"
]
ignore_missing_imports = true

[tool.ruff.lint]
# Enable isort rules.
extend-select = ["I"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"
