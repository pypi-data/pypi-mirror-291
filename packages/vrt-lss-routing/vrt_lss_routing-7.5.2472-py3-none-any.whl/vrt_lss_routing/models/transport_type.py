# coding: utf-8

"""
    VRt.Routing [RT]

    # Description  **VRt.Routing** is designed to find a route between locations and build time-distance matrices.  ## Features  * Getting the distance and time between two locations, including traffic jams * Finding a route between specified locations * Creating a time-distance matrix  ## Entity relationship diagram  ![erd](../uml/routing.svg) 

    The version of the OpenAPI document: 7.5.2472
    Contact: servicedesk@veeroute.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TransportType(str, Enum):
    """
    Transport types:   * `CAR` - car   * `TRUCK_1500` - truck with permissible weight 1500 kg   * `TRUCK_3000` - truck with permissible weight 3000 kg   * `TRUCK_5000` - truck with permissible weight 5000 kg   * `TRUCK_10000` - truck with permissible weight 10000 kg   * `TRUCK_20000` - truck with permissible weight 20000 kg   * `TRUCK_GARBAGE_1` - truck for transporting garbage (type 1)   * `TRUCK_GARBAGE_2` - truck for transporting garbage (type 2)   * `TUK_TUK` - tuk-tuk   * `BICYCLE` - bicycle   * `PEDESTRIAN` - pedestrian         * `PUBLIC_TRANSPORT` - public transport    Permissible weight is the weight of the equipped transport with cargo and driver, set by the manufacturer as the maximum allowable. 
    """

    """
    allowed enum values
    """
    CAR = 'CAR'
    TRUCK_1500 = 'TRUCK_1500'
    TRUCK_3000 = 'TRUCK_3000'
    TRUCK_5000 = 'TRUCK_5000'
    TRUCK_10000 = 'TRUCK_10000'
    TRUCK_20000 = 'TRUCK_20000'
    TRUCK_GARBAGE_1 = 'TRUCK_GARBAGE_1'
    TRUCK_GARBAGE_2 = 'TRUCK_GARBAGE_2'
    TUK_TUK = 'TUK_TUK'
    BICYCLE = 'BICYCLE'
    PEDESTRIAN = 'PEDESTRIAN'
    PUBLIC_TRANSPORT = 'PUBLIC_TRANSPORT'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TransportType from a JSON string"""
        return cls(json.loads(json_str))


