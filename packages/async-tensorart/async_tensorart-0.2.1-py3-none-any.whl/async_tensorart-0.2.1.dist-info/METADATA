Metadata-Version: 2.1
Name: async-tensorart
Version: 0.2.1
Summary: Asyncio wrapper for TensorArt API
License: MIT
Keywords: api,framework,wrapper,asyncio,tensorart
Author: andrew000
Requires-Python: >=3.10
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiohttp (>=3.8,<4)
Requires-Dist: cryptography (>=41.0,<44)
Requires-Dist: msgspec (>=0.18,<0.19)
Project-URL: Bug Tracker, https://github.com/andrew000/AsyncTensorArt/issues
Project-URL: homepage, https://github.com/andrew000/AsyncTensorArt
Project-URL: repository, https://github.com/andrew000/AsyncTensorArt
Description-Content-Type: text/markdown

# AsyncTensorArt

#### Asynchronous wrapper for the TensorArt API

---

`async_tensorart` is a Python package for asynchronous access to
the [TensorArt](https://tensor.art/) API.

## Installation

```bash
pip install async-tensorart
```

---

## Usage

```python
import asyncio
from pathlib import Path

from aiohttp import ClientSession

from async_tensorart import TensorArt
from async_tensorart.signature import PrivateKey


async def main():
    # Create a TensorArt client
    tensor = TensorArt(
        app_id="APP_ID",
        endpoint="ENDPOINT",
        session=ClientSession(),
        private_key=PrivateKey(path=Path("private_key.pem")),
    )

    # Get model info
    model_info = await tensor.get_model(model_id=42)
    print(model_info)


asyncio.run(main())
```

---

## License

This project is licensed under the terms of the MIT license.

