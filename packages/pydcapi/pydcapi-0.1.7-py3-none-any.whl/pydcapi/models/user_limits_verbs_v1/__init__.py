# generated by datamodel-codegen:
#   filename:  user_limits_verbs_v1.json

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, ConfigDict, Field


class Configuration(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class QuotaDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    frequency: Optional[int] = None
    """
    the frequency at which quota refreshes. Value will be -1 when frequency is not applicable, like when user has unlimited transactions.
    """
    next_available: Optional[int] = None
    """
    tells in seconds when next transactions will become available. Value will be -1 if transactions are still remaining for the the user.
    """


class Limits(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class CombinePdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class CompressPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration1] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits1] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits2(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class Createpdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration1] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits2] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits3(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class CropPages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration1] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits3] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration4(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits4(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class DeletePages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration4] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits4] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration5(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits5(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class EditPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration5] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits5] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits6(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ExcelToPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration5] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits6] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits7(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ExportPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration5] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits7] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration8(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits8(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ExtractPages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration8] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits8] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration9(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits9(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class HtmlToPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration9] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits9] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration10(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits10(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class InsertPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration10] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits10] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration11(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits11(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class JpgToPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration11] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits11] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits12(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class NumberPages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration11] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits12] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits13(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class OcrPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration11] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits13] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration14(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits14(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class CombinePdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration14] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits14] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration15(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits15(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class CompressPdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration15] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits15] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits16(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class Createpdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration15] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits16] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits17(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class EditPdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration15] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits17] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits18(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ExportPdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration15] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits18] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits19(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class OcrPdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration15] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits19] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration20(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits20(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class OrganizePdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration20] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits20] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration21(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits21(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ProtectPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration21] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits21] = None
    """
    specifies the applicable transactions details for the user.
    """


class Operations(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    combine_pdf: Optional[CombinePdf1] = Field(None, alias='combine-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    compress_pdf: Optional[CompressPdf1] = Field(None, alias='compress-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    createpdf: Optional[Createpdf1] = None
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    edit_pdf: Optional[EditPdf1] = Field(None, alias='edit-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    export_pdf: Optional[ExportPdf1] = Field(None, alias='export-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    ocr_pdf: Optional[OcrPdf1] = Field(None, alias='ocr-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    organize_pdf: Optional[OrganizePdf] = Field(None, alias='organize-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    protect_pdf: Optional[ProtectPdf] = Field(None, alias='protect-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """


class Configuration22(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits22(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class OrganizePdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration22] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits22] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration23(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits23(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class PdfToExcel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits23] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits24(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class PdfToImage(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits24] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits25(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class PdfToPpt(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits25] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits26(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class PdfToWord(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits26] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits27(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class PptToPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits27] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits28(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ProtectPdf1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration23] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits28] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration29(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_number_files: Optional[int] = None
    """
    Maximum number of files supported by the operation, if applicable
    """


class Limits29(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class ReorderPages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration29] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits29] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits30(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class RotatePages(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration29] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits30] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration31(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """
    max_split_points: Optional[int] = None
    """
    Maximum number of split points supported by the operation, if applicable
    """


class Limits31(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class SplitPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration31] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits31] = None
    """
    specifies the applicable transactions details for the user.
    """


class Limits32(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class Uber(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    limits: Optional[Limits32] = None
    """
    specifies the applicable transactions details for the user.
    """


class Configuration32(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    max_file_size: Optional[int] = None
    """
    Maximum file size supported by the operation, if applicable
    """


class Limits33(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    quota_details: Optional[QuotaDetails] = None
    """
    Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.
    """
    remaining: Optional[int] = None
    """
    tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.
    """


class WordToPdf(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    configuration: Optional[Configuration32] = None
    """
    various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.
    """
    limits: Optional[Limits33] = None
    """
    specifies the applicable transactions details for the user.
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    combine_pdf: CombinePdf = Field(..., alias='combine-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    compress_pdf: CompressPdf = Field(..., alias='compress-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    createpdf: Createpdf
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    crop_pages: CropPages = Field(..., alias='crop-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    delete_pages: DeletePages = Field(..., alias='delete-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    edit_pdf: EditPdf = Field(..., alias='edit-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    excel_to_pdf: ExcelToPdf = Field(..., alias='excel-to-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    export_pdf: ExportPdf = Field(..., alias='export-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    extract_pages: ExtractPages = Field(..., alias='extract-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    html_to_pdf: HtmlToPdf = Field(..., alias='html-to-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    insert_pdf: InsertPdf = Field(..., alias='insert-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    jpg_to_pdf: JpgToPdf = Field(..., alias='jpg-to-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    number_pages: NumberPages = Field(..., alias='number-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    ocr_pdf: OcrPdf = Field(..., alias='ocr-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    operations: Operations
    """
    Operation level response for user, if applicable
    """
    organize_pdf: OrganizePdf1 = Field(..., alias='organize-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    pdf_to_excel: PdfToExcel = Field(..., alias='pdf-to-excel')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    pdf_to_image: PdfToImage = Field(..., alias='pdf-to-image')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    pdf_to_ppt: PdfToPpt = Field(..., alias='pdf-to-ppt')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    pdf_to_word: PdfToWord = Field(..., alias='pdf-to-word')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    ppt_to_pdf: PptToPdf = Field(..., alias='ppt-to-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    protect_pdf: ProtectPdf1 = Field(..., alias='protect-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    reorder_pages: ReorderPages = Field(..., alias='reorder-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    rotate_pages: RotatePages = Field(..., alias='rotate-pages')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    split_pdf: SplitPdf = Field(..., alias='split-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    uber: Uber
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
    word_to_pdf: WordToPdf = Field(..., alias='word-to-pdf')
    """
    Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.
    """
