# generated by datamodel-codegen:
#   filename:  upload_status_v1.json

from __future__ import annotations

from typing import Literal, Optional

from pydantic import AnyUrl, BaseModel, ConfigDict


class AssetResult(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    asset_id: str
    """
    Id of the asset.
    """
    asset_uri: AnyUrl
    """
    Url to access the asset.
    """
    content_md5: str
    """
    Content-md5 hash of the file uploaded.
    """
    etag: str
    """
    ETag of the created/updated asset.
    """


class Error(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    code: str
    """
    An English language string that contains more information about the error. This is not intended as information to be presented to an end user, but will instead be helpful for logging and debugging.
    """
    message: str
    """
    Message describing the reason for the failure.
    """
    status: float
    """
    The http status code. List of error codes include 403 for "Unsuccessful virus scan (infected file)" or "QuotaExceeded", 412 for "Precondition failed". or other such error codes. 
    """


class MonitorLink(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    uri: str
    """
    Monitor link for getting the upload status.
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    asset_result: Optional[AssetResult] = None
    """
    Asset details. Returned only if status is done. If the status is 'done', this will contain the details of the new asset.
    """
    error: Optional[Error] = None
    """
    If the status is 'FAILED', this will contain the error details.
    """
    monitor_link: Optional[MonitorLink] = None
    """
    If the upload status is 'in progress', use this link to poll for status. Note that this method should be called only after the interval specified in retry_interval.
    """
    retry_interval: Optional[float] = None
    """
    If the status is 'in progress' this specifies the number of milliseconds to wait before re-querying the monitor/upload status.
    """
    status: Literal['done', 'in progress', 'failed']
    """
    Current status of the upload.
    """
