# generated by datamodel-codegen:
#   filename:  exportpdf_options_v1.json

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, ConfigDict, Field, constr


class Formats(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    provisioned: bool
    """
    Boolean indicator to show whether the current user is provisioned to convert PDF to this file type.
    """


class Locale(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    code: constr(pattern=r'^[a-z][a-z]-[A-Z][A-Z]$')
    """
    locale name in the form of xx-YY e.g. en-US. In the future, this list may be extended without a change in version.
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    formats: Dict[str, Formats]
    """
    A list of export file types -- and an indication which formats are provisioned for this user
    """
    locales: List[Locale] = Field(..., min_length=13)
    """
    A list of all the locales supported for OCR
    """
