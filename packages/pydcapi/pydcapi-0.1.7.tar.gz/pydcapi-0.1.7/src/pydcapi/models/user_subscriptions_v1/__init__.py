# generated by datamodel-codegen:
#   filename:  user_subscriptions_v1.json

from __future__ import annotations

from typing import Any, Dict, List, Literal, Optional

from pydantic import BaseModel, ConfigDict, Field


class Subscription(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    billing_term: Optional[
        Literal['Monthly', 'AnnualBilledMonthly', 'AnnualBilledAnnually']
    ] = None
    """
    This value will not be available for document cloud offerings sold to team (CCT) and enterprise (CCE) subscriptions.
    """
    biz_source: Optional[str] = None
    """
    The business source associated with this product purchase.
    """
    level: Literal['Free', 'Basic', 'Plus', 'VIP']
    """
    The service level.  All paid products have only a 'Basic' service level.
    """
    name: Literal[
        'CreatePDF',
        'PDFPack',
        'ExportPDF',
        'Files',
        'DCGlobal',
        'DCEnterprise',
        'AcrobatPlus',
        'AcrobatStd',
        'SendNow',
        'FillAndSign',
        'ESign',
    ]
    """
    The subscription name.
    """
    status: Literal['Active', 'Suspended', 'Suspended30', 'Closed', 'Stopped']
    """
    Account status.  Any status other than `Active` indicates that services are not available to this account.
    """
    sub_ref: Optional[str] = None
    """
    A UUID value that allows this product to be correlated to the Adobe store API values. This will be NULL for document cloud offerings sold to team (CCT) and enterprise (CCE) subscriptions as these users are entitled by an admin and do not have subscription record associated with them.
    """
    subscription_params: Optional[Dict[str, Any]] = None
    """
    Map of additional params present for this subscription, if any.
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    subscriptions: List[Subscription] = Field(..., min_length=1)
