# generated by datamodel-codegen:
#   filename:  asset_tag_sensei_contentanalyzer_v1.json

from __future__ import annotations

from typing import List, Literal, Optional

from pydantic import BaseModel, ConfigDict


class Parameters(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    client_version: Optional[str] = None
    """
    Version(s) of client component(s), e.g. ma=1.567.0
    """
    format: Optional[Literal['instance_data', 'fully_tagged_pdf']] = 'instance_data'
    """
    Workflow to use. fully_tagged_pdf is not implemented yet.
    """


class Request(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    analyzer_id: Optional[str] = None
    """
    The unique service ID (analyzer ID) provided in the request. For Colorado prediction, use the value Annotation:PdfObjectDetectionChain:cfd194a2-9203-4649-9077-a4a90f1e86ab
    """
    parameters: Optional[Parameters] = None
    """
    Service-specific request parameters
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    enable_diagnostics: Optional[Literal['true', 'false']] = 'true'
    """
    Clients should always pass true
    """
    requests: Optional[List[Request]] = None
