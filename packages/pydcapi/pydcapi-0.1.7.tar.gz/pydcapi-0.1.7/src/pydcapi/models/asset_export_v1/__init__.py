# generated by datamodel-codegen:
#   filename:  asset_export_v1.json

from __future__ import annotations

from typing import Literal, Optional

from pydantic import AnyUrl, BaseModel, ConfigDict, constr


class AssetData(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    asset_uri: AnyUrl
    """
    Document Cloud asset url. Note that only assets that were imported from an external provider can be exported.
    """


class ExternalAssetData(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    access_token: constr(min_length=1)
    """
    External token for 3rd party.
    """
    asset: constr(min_length=1)
    """
    External asset identifier.
    """
    cloud_type: Literal['DROPBOX', 'ONEDRIVE', 'GDRIVE', 'BOX']
    """
    External cloud type identifier for 3rd party.
    """
    conflict_behaviour: Optional[constr(min_length=1)] = None
    """
    External asset conflict behavior for 3rd party.
    """
    etag: Optional[constr(min_length=1)] = None
    """
    External asset etag for 3rd party.
    """
    name: Optional[constr(min_length=1)] = None
    """
    The name for the external asset. The preferred way of specifying the filename.
    """
    path_type: Literal['ID', 'FILE_PATH', 'URI']
    """
    External asset identifier type.
    """


class Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        frozen=True,
    )
    asset_data: AssetData
    """
    Set of properties that are applicable for asset data.
    """
    external_asset_data: ExternalAssetData
    """
    Set of properties that are applicable for external asset data.
    """
