[tool.poetry]
name = "momento-signer"
version = "0.2.2"

authors = ["Momento <hello@momentohq.com>"]
description = "Signed URL SDK for Momento"

license = "Apache-2.0"

documentation = "https://docs.momentohq.com/"
homepage = "https://gomomento.com"
readme = "README.md"
repository = "https://github.com/momentohq/client-sdk-python-signed-urls"

keywords = ["Momento", "caching", "key-value store", "serverless"]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Operating System :: OS Independent",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Topic :: Internet",
  "Natural Language :: English",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"

# We need this for pyjwt, but the pyjwt crypto extra uses version >=3.4
# Since this depends on glibc, which is external to python,
# the crytography version introduces incompatibilities in specific
# environments (eg Lambda). We pin to 3.4.8 to prevent a moving target.
# see: https://github.com/jpadilla/pyjwt/issues/800
cryptography = "3.4.8"
# note if you bump this presigned url test need be updated
pyjwt = "2.4.0"


[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"
pytest-asyncio = "^0.20.3"
pytest-sugar = "^0.9.6"


[tool.poetry.group.lint.dependencies]
mypy = "^0.991"
types-setuptools = "^65.7.0.3"
ruff = "^0.3.4"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.7"

# Increase our expectations

check_untyped_defs          = true
disallow_incomplete_defs    = true
disallow_untyped_defs       = true
no_implicit_optional        = true
show_column_numbers         = true
show_error_codes            = true
strict_optional             = true
warn_no_return              = true
warn_redundant_casts        = true
warn_return_any             = true
warn_unreachable            = true
warn_unused_ignores         = true

# These are too strict for us at the moment

disallow_any_decorated      = true
disallow_any_explicit       = true
disallow_any_expr           = true
disallow_any_generics       = true
disallow_any_unimported     = false
disallow_subclassing_any    = false
disallow_untyped_calls      = true
disallow_untyped_decorators = true
strict_equality             = true

[[tool.mypy.overrides]]
module = "momento_signer.momento_signer"
disallow_any_expr = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_decorated = false
disallow_any_expr = false
disallow_untyped_calls = false


[tool.ruff]
lint.select = [
  "D", # docstring errors
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
lint.ignore = [
  "B008", # function calls as default arg; collection ttl
  "B024", # abstract class without abstract methods
  "E501", # line too long, handled by black
  "C901", # function too complex
  "D100", # missing docstring in public module
  "D101", # missing docstring in public class
  "D102", # missing docstring in public method
  "D103", # missing docstring in public function
  "D104", # missing docstring in public package
  "D105", # missing docstring in magic method
  "D106", # missing docstring in public nested class
  "D107", # missing docstring in __init__
]
line-length = 120
target-version = "py37"
fix = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"src/momento/common_data/vector_index/item.py" = ["E721"]
"src/momento/requests/vector_index/filters.py" = ["E721"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
