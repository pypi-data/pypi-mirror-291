"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Subject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class UserAccount(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        id: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

    @typing_extensions.final
    class ServiceAccount(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        id: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

    USER_ACCOUNT_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    @property
    def user_account(self) -> global___Subject.UserAccount: ...
    @property
    def service_account(self) -> global___Subject.ServiceAccount: ...
    def __init__(
        self,
        *,
        user_account: global___Subject.UserAccount | None = ...,
        service_account: global___Subject.ServiceAccount | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["service_account", b"service_account", "type", b"type", "user_account", b"user_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["service_account", b"service_account", "type", b"type", "user_account", b"user_account"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["user_account", "service_account"] | None: ...

global___Subject = Subject
