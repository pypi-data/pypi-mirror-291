"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import datasphere.google.rpc.status_pb2
import sys
import datasphere.yandex.cloud.priv.access.access_pb2
import datasphere.yandex.cloud.priv.servicecontrol.v1.access_service_pb2
import datasphere.yandex.cloud.priv.servicecontrol.v1.resource_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CheckPermissionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PERMISSION_FIELD_NUMBER: builtins.int
    RESOURCE_PATH_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    permission: builtins.str
    """Permission to check."""
    @property
    def resource_path(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.servicecontrol.v1.resource_pb2.Resource]:
        """Resource path from most specific resource to least.
        Same semantics as AccessService.AuthorizeRequest#resource_path.
        """
    @property
    def subject(self) -> yandex.cloud.priv.servicecontrol.v1.access_service_pb2.Subject:
        """Subject to check permission for. Use caller subject if not specified."""
    def __init__(
        self,
        *,
        permission: builtins.str = ...,
        resource_path: collections.abc.Iterable[yandex.cloud.priv.servicecontrol.v1.resource_pb2.Resource] | None = ...,
        subject: yandex.cloud.priv.servicecontrol.v1.access_service_pb2.Subject | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["subject", b"subject"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["permission", b"permission", "resource_path", b"resource_path", "subject", b"subject"]) -> None: ...

global___CheckPermissionRequest = CheckPermissionRequest

@typing_extensions.final
class CheckPermissionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_PERMISSIONS_FIELD_NUMBER: builtins.int
    @property
    def resource_permissions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourcePermissionInfo]:
        """Permission info for resources in specified resource path, from most specific to least.
        Might contain more entries than specified resource path.
        """
    def __init__(
        self,
        *,
        resource_permissions: collections.abc.Iterable[global___ResourcePermissionInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_permissions", b"resource_permissions"]) -> None: ...

global___CheckPermissionResponse = CheckPermissionResponse

@typing_extensions.final
class ResourcePermissionInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_FIELD_NUMBER: builtins.int
    ACCESS_BINDINGS_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> yandex.cloud.priv.servicecontrol.v1.resource_pb2.Resource:
        """Resource against which the permission is being checked."""
    @property
    def access_bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.access.access_pb2.AccessBinding]:
        """Access bindings on this resource that grant the permission."""
    @property
    def response(self) -> yandex.cloud.priv.servicecontrol.v1.access_service_pb2.AuthorizeResponse:
        """If authorization succeeded."""
    @property
    def status(self) -> google.rpc.status_pb2.Status:
        """If authorization failed."""
    def __init__(
        self,
        *,
        resource: yandex.cloud.priv.servicecontrol.v1.resource_pb2.Resource | None = ...,
        access_bindings: collections.abc.Iterable[yandex.cloud.priv.access.access_pb2.AccessBinding] | None = ...,
        response: yandex.cloud.priv.servicecontrol.v1.access_service_pb2.AuthorizeResponse | None = ...,
        status: google.rpc.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authorize_response", b"authorize_response", "resource", b"resource", "response", b"response", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_bindings", b"access_bindings", "authorize_response", b"authorize_response", "resource", b"resource", "response", b"response", "status", b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["authorize_response", b"authorize_response"]) -> typing_extensions.Literal["response", "status"] | None: ...

global___ResourcePermissionInfo = ResourcePermissionInfo
